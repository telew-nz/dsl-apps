trait HasNumber extends RefEntity with IBarcode {
  compute refNum: String? {
    label = "Reference Number"
    value = refNums.first 
    update = {
      this.refNums = new.toSeq + refNums.drop(1)
    }
  } 
  ref field refNums: [String]? {
    label = "Reference Numbers"
  }
  compute fullNum: String {
    label = "Number"
    value = calcFullNum
  }
  func calcFullNum: String = if (let r = refNum) "$number ($(refNums.join('; ')))" else number
  impl func barcodeItem: RefEntity = this
  impl func title {
    default value = fullNum
  }
  impl func entityNumbers: [String?]? = [number] + refNums
  
  func addRefNum(refNum: String?): Void = if (let refNum = refNum.trim) {
    if (!refNums.exists(_ =%= refNum)) {
      refNums = refNums + [refNum]
      save
    }
  }
}

trait HasN extends HasNumber {
  ref const field n: Int? = nextN
  func nextN: Int?
  func numPrefix: String
  impl compute number {
    value = numPrefix + n.format(3, 0)
  }
}