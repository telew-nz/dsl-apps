entity Kit extends IBasicSubProduct {
  func isTangible = true
  
  field title: String
  field description: Text?
  field obsolete: Bool
  field alwaysAvailable: Bool
  field items: [KitItem] inline by kit
  view form = nav{
    grid {
      title
      sku
      categories
      obsolete
      alwaysAvailable >> field (label = "Always Available for Sale")
      items >> table {
        product >> field(width = 0.7)
        qty >> field(width = 0.3)
      }
      description
    }
    extension("nav")
  }

  func products: [IProduct : Qty] = items.flatMap{i =>
    i.product.products.mapValues{ 
      _*i.qty
    }.toSeq
  }.toMap!
  
  view traitItem = grid(labels = None) {
    row {title >> field(width = 0.8) calcSalesPrice >> field(width = 0.2)}
  }
}

inline entity KitItem {
  field kit: Kit by items
  field product: ISubProduct by includedInKitItems {
    available(Ref).with(unit, altUnits)
    update = {
      this.unit = new.unit
      this.qty = this.qty.as[Qty[this.unit]]!
    }
  }
  field unit: ProductUnit {
    from = product.units
  }
  field qty: Qty[unit] {
    default = 1
    canEditUnit = true
  }
}