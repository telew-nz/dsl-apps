trait IIntermediateProduct extends IBaseProduct {
  plural = "Products"
  singular = "Product"
  width = 0.45
  
  func parent: IBaseProduct? = getParent
  func getParent: IBaseProduct
  func superProduct: ISuperProduct = getParent.superProduct
  func subProducts: [ISubProduct]? = child*.subProducts
  
  func isValid: Bool = superProduct.isValid
  func isTangible: Bool = superProduct.isTangible  
  func weightInGrams: Number? = superProduct.weightInGrams
  func description: Text? = superProduct.description
  func forceGstRate(vendor: Actor?): Percent[2]?? = superProduct.forceGstRate(vendor)
  func sku: String = superProduct.sku
  func obsolete: Bool = superProduct.obsolete
  func unit: ProductUnit = superProduct.unit
  func units = superProduct.units
  func alwaysAvailable: Bool = superProduct.alwaysAvailable 

  func collectPhotos: [Image]? = {
    if (let p = collectPhotosDown) p
    else collectPhotosUp
  }
  func collectPhotosUp: [Image]? = if (let p = photos) p else getParent.collectPhotosUp
  func collectPhotosDown: [Image]? = if (let p = photos) p else child*.collectPhotosDown
  
  event onSave = {}
}
