trait ProductAttr extends InlineEntity {
  func attrName: String = "ProductAttr.name"
}
trait ProductAttrTerm  extends Entity {
  object extends ProductAttr
}

trait ICustomerBaseProduct extends IBaseProduct 
trait ICustomerSuperProduct extends ICustomerBaseProduct {
  object func attrs: [ProductAttr]? = []
  func customerProducts: [ICustomerProduct]?
  back func attrOptions: [ProductAttrOptions]? = {
    customerProducts*.attrTerms.groupBy(_.object).toSeq
      .map(ProductAttrOptions(attr = _.#0, options = _.#1))
  }
}
trait ICustomerProduct extends ICustomerBaseProduct {
  func customerSuperProduct: ICustomerSuperProduct
  func attrTerms: [ProductAttrTerm]?
}
trait ICustomerComplexProduct extends ICustomerProduct
class ProductAttrOptions(system field attr: ProductAttr, options: [ProductAttrTerm]?)