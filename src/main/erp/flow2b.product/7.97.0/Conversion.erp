back object Conversion extends IConversion {
  func convert(version: [Int?]): Future[Any] = {
    if (version < [7,79,0]) {
      IPriceModel.all.update(levels = [PriceLevelDefault])
    }
    let _ <- if (version < [7,83,0]) {
      let _ <- recomputeAll(IBaseProduct, salesPrice)
      recomputeAll(IBaseProduct, rentPrices)
    }
    if (version < [7,86,0]) {
      renameField(ISuperProduct, _invoiceDesc, "invoiceDesc")
    }
    let _ <- if (version < [7,89,0]) {
      recomputeAll(IPriceModel, n)
    }
    let _ <- if (version < [7,92,0]) {
      renameField(ExpenseType, incomeCategories, "categories")
      renameField(RevenueType, incomeCategories, "categories")
      renameField(ExpenseType, incomeProducts, "products")
      renameField(RevenueType, incomeProducts, "products")
      recomputeAll(IIncomeType, n)
    }
    if (version < [7,94,0]) {
      IPriceModel.all.update(currency = vendor.getCurrency)
    }
  }   
}    
   