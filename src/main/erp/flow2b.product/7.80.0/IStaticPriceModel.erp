trait IStaticPriceModel extends IPriceModel {
  func supports(product: IBaseProduct): Bool = false
  back func findPrice(product: IBaseProduct): IStaticPrice? = null
  func createPrice(product: IBaseProduct): IStaticPrice {
    deprecated(use = "newPrice or forceNewPrice, override forceNewPrice & findPrice")
    value = throw "createPrice Unsupported"
  }
  back final func newPrice(product: IBaseProduct): IStaticPrice = findPrice(product).alt(forceNewPrice(product))
  func forceNewPrice(product: IBaseProduct): IStaticPrice {
    ignoreWarnings
    default value = createPrice(product)
  }
  object func makeDefault(vendor: IVendor): IStaticPriceModel = {
    throw "Default price model is not implemented"
  }
}
trait IStaticPrice extends PseudoEntity with IPrice {
  impl func mainEntity = model
  impl func model: IStaticPriceModel
  impl field product: IBaseProduct by staticPrices {
    touchCascade = false
    available(Ref).with(productCost)
  }
  func updateSalesPrice(salesPrice: SalesPrice): Bool = false
  
  system field toDelete: Bool
  impl event onSave = {
    if (toDelete && !deleted) {
      delete
    }
  }
}
trait IStaticPriceSales extends IStaticPrice with IPriceSales
