trait ProductAttr extends InlineEntity {
  func attrName: String = "ProductAttr.name"
  func attrSlug: String? = ""
}
trait ProductAttrTerm extends Entity {
  object extends ProductAttr
}

extend trait IBaseProduct {
  func subTitle(superTitle: String): String //For Google merchant, seo titles and similar
}

extend trait ISuperProduct {
  object func attrs: [ProductAttr]? = []
  impl final func subTitle(superTitle: String): String = superTitle
  back func attrOptions: [ProductAttrOptions]? = attrOptions(subProducts)
  back func attrOptions(products: [ISubProduct]?): [ProductAttrOptions]? = {
    let m: [ProductAttr -> [ProductAttrTerm]]? = products*.attrTerms.groupBy(_.object)
    object.attrs.map(attr => ProductAttrOptions(attr = attr, options = m.apply(attr)))
  }
  view superProductTabView {
    layout = group{
      categoriesView      
    }
  }
}
extend trait ISubProduct {
  func attrTerms: [ProductAttrTerm]?
  view subProductTabView {
    layout = group{
      
    }
  }
}


class ProductAttrOptions(system field attr: ProductAttr, options: [ProductAttrTerm]?) 