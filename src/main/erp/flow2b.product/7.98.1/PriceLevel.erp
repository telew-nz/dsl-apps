trait IPriceLevel extends RefEntity {
  object func onlyOne: IPriceLevel? = Workspace.current.priceLevels.onlyOne
  
  field models: [IPriceModel]? by levels
}

entity PriceLevel extends IPriceLevel {
  impl field title: String
  field desc: Text? {label = "Description"}
  field customers: [Customer]? by _priceLevel
  impl view form = nav{grid{
    title
    models
    desc
    customers
  }}
}

extend entity Workspace {
  compute priceLevels: [IPriceLevel]? {
    availableFor = Inline
    value = IPriceLevel.all
  } 
}

object PriceLevelDefault extends Entity with IPriceLevel {
  impl func title = "Default"
}

extend entity Customer {
  field _priceLevel: PriceLevel? {views = []}
  compute priceLevel: IPriceLevel {
    value = _priceLevel?.as[IPriceLevel].alt(PriceLevelDefault)
    update = {
      _priceLevel = new.as[PriceLevel]
    }
  }
}