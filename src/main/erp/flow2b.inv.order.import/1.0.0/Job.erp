class PurchaseOrderImportJob extends ImportJob {
  impl field task: PurchaseOrderImport
  impl func import = {
    let text <- task.file.plainText

    if (let text) {
      guard (let processor = OrderProcessor.subObjects
        .sortBy(_.order)
        .map(_.new(contact = null, poi = task, text = text))
        .find(canProcess)) 
      else return throw "No processor found"
      
      processor.process
    }
  }
}

back interface OrderProcessor {
  field contact: IContact?
  field poi: PurchaseOrderImport
  field text: PlainText
  object func order: Dec[4]?
  func canProcess: Bool
  func process: Future[Void]
}

