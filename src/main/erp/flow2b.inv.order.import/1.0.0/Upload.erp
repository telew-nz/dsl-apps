entity PurchaseOrderImport extends ImportTask with DashboardItem {
//  background = "#d68400"
  override compute number = "POI$n"
  impl func service = OrderImportService
  
  field invoiceType: InvoiceType?
  //field text: PlainText?
  impl func itemRoles = [BusAdmin]
  
  
  field invoiceDate: Date?
  field invoiceNumber: String?
  field vendorNumber: String?
  field dueDate: Date?
  
  field rowsWithGst: Bool { label = "Rows include GST"}
  field currency: Currency = our
  field totalNoGst: UMoney[currency]?
  field gst: UMoney[currency]?
  compute totalWithGst: UMoney[currency]? = totalNoGst + gst
  
  field items: [PurchaseOrderImportItem]? inline by poi
  field file: File
  override func title = "$number $date"
  impl view form = nav{grid{
    issuesView
    row {number date space}
    file 
    stateView
    
    invoiceType >> field(label = "")
    row {
      invoiceNumber invoiceDate dueDate
    }
    row {
      vendorNumber rowsWithGst space
    }
    row {
      totalNoGst gst totalWithGst 
    }
    [(items*.amount.sum, items)].toSeq >> total {
      row {
        space space space amount
      }
      table {
        y (label = "Description", width = 0.6, margin = None) {
          code >> field(fontStyle = Label) 
          desc
        }
        qty >> field(width = 0.1) 
        gstRate!.as[UPercent[2]] >> field(width = 0.1, label = "GST") 
        amount >> field(width = 0.2) 
      }
    }
    
  }}
  impl func createJob = PurchaseOrderImportJob(task = this)

  report Report {
    field state: [ImportTaskState]? {auto}
    impl view list = PurchaseOrderImport.all >> nav{table {
      date number state 
    }}
  }
}

enum InvoiceType {
  case TaxInvoice
  case DebitNote
  case CreditNote
}

inline entity PurchaseOrderImportItem {
  field poi: PurchaseOrderImport by items
  
  field code: String?
  field desc: String? {
    label = "Description"
  }
  field qty: UQty?
  field amount: UMoney[poi.currency]?
  field gstRate: UPercent[2]??
  field withGst: Bool 
}
