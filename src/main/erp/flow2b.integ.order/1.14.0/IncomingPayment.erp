back interface EIncomingPayment[ID] {
  func extId: ID
  func paymentDate: Date
  func amount: Money
  func paymentMethod: String
  func createIfPaid = false
  
  func make(pr: ISalesOrderImportProvider[ID], si: SalesOrder): IncomingPayment? = {
    pr.service.findExtId(extId, _.as[IncomingPayment]).or {
      if (createIfPaid || si.created || !si.paid) {
        let ip = IncomingPayment(
          date = paymentDate,
          currency = si.currency,
          payer = si.payer?.legalEntity,
          payee = pr.legalEntity,
          account = pr.paymentMethodAccounts.apply(paymentMethod).alt(throw "Cannot find account for payment method $paymentMethod"),
          amount = amount,
          source = si
        )
        ip.updateExtId(pr.service, extId)
        ip
      }
    }
  }
}
 