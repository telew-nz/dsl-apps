back class StripeCsvData extends BankStatementItem {
  field id: String
  field type: String
  field source: String
  field amount: Money?
  field fee: UMoney?
  field net: Money?
  field currency: String
  field created: UtcDate {format = "yyyy-MM-dd HH:mm"}
  field availableOn: UtcDate {format = "yyyy-MM-dd HH:mm"}
  field customerName: String?
  field customerEmail: String?
  field orderId: String?

  impl func date = created
  impl func data(account: FinAccount): BankData = {
    BankData(bankId = id, memo = (customerName + " " + customerEmail + " " + orderId).trim, type = type, amount = amount, fee = fee)
  }
}
 
extend enum BankStatementType {
  case StripeCsv(
    canProcess = file.is("csv") && data.toString.lines(CSV).first == "id,Type,Source,Amount,Fee,Net,Currency,Created (UTC),Available On (UTC),customer_name (metadata),customer_email (metadata),order_id (metadata)", 
    process = ProcessResult(
      account = StripeAccount.all.result.get.onlyOne,
      items = data.toString.lines(CSV).drop(1).mapOpt(splitTo[StripeCsvData](CSV))), 
    knowOurAccount = true
  )
}