entity Screenshot extends DashboardItem {
  object field gen: Int?
  const ref field n: Int? = increment(Screenshot.gen)
  func number = "SCR" + n.format(3, 0)
  func title = "$number $name"
  ref field name: String
  field url: Url? {
    label = "Screenshot website URL"
    validate = if (status == Taken && !url) "URL should be entered for taken screenshots"
  }
  field takeUserName: String? {
    label = "Flow2b user name to take screenshot"
    validate = if (status == Taken && !takeUserName) "User name should be entered for taken screenshots"
  }
  field takeUrl: Url? {
    label = "Flow2b URL where to take screenshots"
    validate = if (status == Taken && !takeUrl) "Take URL should be entered for taken screenshots"
  }
  field takeSteps: Text? {
    label = "Steps how to take screenshots from the URL if any"
  }
  ref field status: ScreenshotStatus = ToTake
  field pages: [Url]?
  field description: Text?
  func itemRoles = [Marketer]
  func activeRoles = if (status.active) [Marketer]
  view form = nav {
    grid {
      x{
        status >> field(editMode = AlwaysEdit, compact)
        name >> field(stretch = 1, fontStyle = H2)
        number >> field(fontStyle = H3)
      }
      url
      takeUrl
      takeSteps
      pages
      description
    }    
    extension("nav")
  }
  view ref = x(flow = false){status >> field(editMode = AlwaysEdit, compact = true) title}
  object view list = Screenshot.all >> nav{list{ref}}
}

enum ScreenshotStatus(active: Bool) {
  case ToTake(active = true) {
    background = "#8bf"
  }
  case Taken(active = false) {
    background = "#dea"
  }
  case Verified(active = false) {
    color = "white"
    background = "#090"
  }
  case Canceled(active = false) {
    background = "#999"
  }
}