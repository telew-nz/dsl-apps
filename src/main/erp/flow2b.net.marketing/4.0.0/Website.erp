entity Website {
  field title: String
  field products: [MarketingProduct]? read by website {
    available(All).for(All)
  }
    
  compute htmlFiles = Website.load(id).flatMap(doHtmlFiles)
  
  func doHtmlFiles = {
    let indexIndustry = Industry(title = "index", marketingProducts = products*.indexIndustry)
    let industries = (indexIndustry + products.filter(status == Published)*.industries.filter(status == Published)*.industry).distinct
    industries.map {i =>
      (title = htmlName(i), content = content(industries, i))
    } + (title = "contact.html", content = contactUs(industries)) + (title = "sitemap.xml", content = siteMap(industries))
  }
  func htmlName(industry: Industry): String = industry.title.replace(" ", "_") + ".html"
  func content(industries: [Industry], industry: Industry): Html = {
    let products = industry.marketingProducts.filter(status == Published && product.status == Published)
    let pageTitle = 'Flow2b$(if (industry.title != "index") ": " + industry.title else "")'
    let h: Html =
' <article>
    <header>
      <div class="cnt"><div>
        <h1>$pageTitle</h1>
        $(industry.marketingProducts.first!.getDescription)
      </div></div>
    </header>
    <nav class="products"><ul>$(products.map(productItem(product)))</ul></nav>
    $(products.first!.html(header = false))
    $(products.drop(1)*.html(header = true))
  </article>
'
    page(pageTitle, industries, h)
  }
  
  func contactUs(industries: [Industry]): Html = {
    let h: Html =
'<section id="contact-us">
  <div class="cnt">
    <h1>Contact Us</h1>
    <iframe src="https://flow2b.com/s/pub/#13_1/flow2b.net.crm.ContactUsMessage/submit/submit" scrolling="no" frameborder="0" onload=""></iframe>
  $("")
  </div>
</section>'
    page('Contact Us', industries, h)
  }
  
  func siteMap(industries: [Industry]): Html = {
    let now = Date.now.as[Date[day]]!.isoString
    let r: Html =
'<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url>
    <loc>https://flow2b.com/</loc>
    <lastmod>$now</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.8</priority>
  </url>
  $(industries.filter(title != "index").map(industryMap(_)))
  
</urlset>'
    r
  }
  
  func industryMap(i: Industry): Html = {
    let now = Date.now.as[Date[day]]!.isoString
    let r: Html = 
'<url>
  <loc>http://flow2b.com/$(htmlName(i))</loc>
  <lastmod>$now</lastmod>
  <changefreq>monthly</changefreq>
  <priority>0.5</priority>
</url>'
    r
  }
  
  func head(pageTitle: String): Html = {
'<head>
  <title>$pageTitle</title>
  <meta charset="UTF-8">
  
  <link rel="stylesheet" href="css/web.css">
  
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" href="/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="/favicon-16x16.png" sizes="16x16">
  <link rel="manifest" href="/manifest.json">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="theme-color" content="#ffffff">
  <meta name="HandheldFriendly" content="true" />
  <meta name="MobileOptimized" content="320" />
  <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, width=device-width, user-scalable=no" />
</head>'
  }
  
  func page(pageTitle: String, industries: [Industry], inner: Html): Html = {
'<!DOCTYPE html>
<html>
$(head(pageTitle))
<body>    
  <nav class="main"><ul>
    <li><a href="index.html" class="index">Flow2b</a></li> 
    <li class="drop-down-menu"><a href="#">Industries</a><ul>$(industries.filter(title != "index").map(menuItem(_)))</ul></li>
    <li><a href="https://flow2b.com/s/">Log in</a></li> 
    <li><a href="contact.html">Contact Us</a></li> 
  </ul></nav>
  
  $inner
  
  
  <script>
  (function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,"script","https://www.google-analytics.com/analytics.js","ga");

  ga("create", "UA-93035085-1", "auto");
  ga("send", "pageview");

</script>
</body>
</html>'
  }
  
  func menuItem(industry: Industry): Html =  '<li><a href="$(if(industry.title == "index") "/" else htmlName(industry))">$(industry.title)</a></li>'
  func productItem(product: MarketingProduct): Html =  '<li><a href="#$(product.anchor)">$(if (product.title == "Flow2b") "Platform" else product.title)</a></li>'
  
  view form = nav{grid{
    title
    products
    button("Generate") {
      generatedView.open
    }
  }}
  
  view generatedView = nav{grid(labels = None){
    title
    htmlFiles >> list(frame = true){grid(labels = Top) {
      title
      content
    }}
  }}
  
}

