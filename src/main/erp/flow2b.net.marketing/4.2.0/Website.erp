entity Website {
  field title: String
  field products: [MarketingProduct]? read by website {
    available(All).for(All)
  }
  func allProducts(industries: [Industry]): [MarketingProduct]? = {
    industries*.marketingProducts.filter(status == Published && product.status == Published)*.product.distinct
  }
  field description: Text?
  field seoDescription: Text? {
    isValid = !seoDescription || seoDescription.length <= 160
    label = "SEO Description (one line less but close to 160 symbols)"
  }
  field aboutUs: Article?
  field partners: Article?
  field pricing: Article?
  field privacyPolicy: Article?
  compute seoCount = seoDescription.length
    
  func doHtmlFiles: [File] = {
    let indexIndustry = Industry(title = "index", description = description, seoDescription = seoDescription, marketingProducts = products*.indexIndustry)
    let industries = (indexIndustry + products.filter(status == Published)*.industries.filter(status == Published)*.industry).distinct
    industries.map {i =>
      File(name = indHtmlName(i), content = indContent(industries, i).toData)
    } + allProducts(industries).map {i =>
      File(name = i.htmlName, content = prodContent(industries, i).toData)
    } + 
      File(name = "contact.html", content = contactUs(industries).toData) + 
      File(name = "about.html", content = textPage("About", industries, aboutUs?.content).toData) + 
      File(name = "pricing.html", content = textPage("Pricing", industries, pricing?.content).toData) + 
      File(name = "partner_up.html", content = textPage("Partners Opportunities", industries, partners?.content).toData) + 
      File(name = "privacy.html", content = textPage("Privacy Policy", industries, privacyPolicy?.content).toData) + 
      File(name = "sitemap.xml", content = siteMap(industries).toData)
  }
  func indHtmlName(industry: Industry): String = {
    if (industry.title == "index") "index.html" else "industry/" + industry.title.replace(" ", "_") + ".html"
  }
  func indContent(industries: [Industry], industry: Industry): Html = {
    let products = industry.marketingProducts.filter(status == Published && product.status == Published)
    let pageTitle = 'Flow2b$(if (industry.title != "index") ": " + industry.title else "")'
    let h: Html =
' <article>
    <header>
      <div class="cnt">
        <h1>$pageTitle</h1>
        $(industry.description)
      </div>
    </header>
    <nav class="products"><ul>$(products.map(prodMenuItem(product)))</ul></nav>
    <footer>
      <img src="/img/s1.png" alt="Flow2b Screenshot"/>
    </footer>
  </article>
'
    page(pageTitle, industry.seoDescription, industries, h)
  }
  
  func prodContent(industries: [Industry], product: MarketingProduct): Html = {
    let pageTitle = 'Flow2b: $(product.title)'
    let h: Html =
' <article>
    <header>
      <div class="cnt">
        <div>
          <h1>$pageTitle</h1>
          $(product.description)
        </div>
      </div>
    </header>
    $(product.html)
  </article>
'
    page(pageTitle, product.seoDescription, industries, h)
  }
  func textPage(pageTitle: String, industries: [Industry], content: Text?): Html = {
    let h: Html =
'<article>
 <header>
  <div class="cnt">
    <div>
      <h1>$pageTitle</h1>
      $content
    </div>
  </div>
</header></article>'
    page(pageTitle, '', industries, h)
  }
  func contactUs(industries: [Industry]): Html = {
    let h: Html =
'<article class="contact-us"><section id="contact-us">
  <div class="cnt">
    <h1>Contact Us</h1>
    <iframe src="https://flow2b.com/s/pub/#13_1/flow2b.net.crm.ContactUsMessage/submit/submit" scrolling="no" frameborder="0" onload=""></iframe>
  $("")
  </div>
</section></article>'
    page('Contact Us', '', industries, h)
  }
  
  func siteMap(industries: [Industry]): Html = {
    let now = Date.now.as[Date[day]]!.isoString
    let r: Html =
'<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url>
    <loc>https://flow2b.com/</loc>
    <lastmod>$now</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.5</priority>
  </url>
  <url>
    <loc>https://flow2b.com/about.html</loc>
    <lastmod>$now</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.5</priority>
  </url>
  <url>
    <loc>https://flow2b.com/pricing.html</loc>
    <lastmod>$now</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.5</priority>
  </url>
  <url>
    <loc>https://flow2b.com/partner_up.html</loc>
    <lastmod>$now</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.5</priority>
  </url>
  <url>
    <loc>https://flow2b.com/privacy.html</loc>
    <lastmod>$now</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.5</priority>
  </url>
  $(industries.filter(title != "index").map(industryMap(_)))
  $(allProducts(industries).map(prodMap(_)))
</urlset>'
    r
  }
  
  func industryMap(i: Industry): Html = {
    let now = Date.now.as[Date[day]]!.isoString
    let r: Html = 
'<url>
  <loc>https://flow2b.com/$(indHtmlName(i))</loc>
  <lastmod>$now</lastmod>
  <changefreq>monthly</changefreq>
  <priority>0.5</priority>
</url>'
    r
  }
  func prodMap(i: MarketingProduct): Html = {
    let now = Date.now.as[Date[day]]!.isoString
    let r: Html = 
'<url>
  <loc>https://flow2b.com/$(i.htmlName)</loc>
  <lastmod>$now</lastmod>
  <changefreq>monthly</changefreq>
  <priority>0.5</priority>
</url>'
    r
  }
  
  func head(pageTitle: String, seoDescription: String?): Html = {
    let seo: Html = if (let d = seoDescription) {
      let a: Html = '<meta name="description" content="$d">' 
      a
    } else ' '
    let r: Html = 
'<head>
  <title>$pageTitle</title>
  <meta charset="UTF-8">
  
  <link rel="stylesheet" href="/css/web.css?4" >
  
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" href="/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="/favicon-16x16.png" sizes="16x16">
  <link rel="manifest" href="/manifest.json">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
  $seo
  <meta name="theme-color" content="#ffffff">
  <meta name="HandheldFriendly" content="true" />
  <meta name="MobileOptimized" content="320" />
  <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, width=device-width, user-scalable=no" />
</head>'
      r
  }
  
  func page(pageTitle: String, seoDescription: String?, industries: [Industry], inner: Html): Html = {
'<!DOCTYPE html>
<html>
$(head(pageTitle, seoDescription))
<body>    
  <nav class="main"><ul>
    <li><a href="/index.html" class="index">Flow2b</a></li> 
    <li class="drop-down-menu"><a href="#">Products</a><ul>$(allProducts(industries).map(prodMenuItem(_)))</ul></li>
    $(if (industries.count > 1)'<li class="drop-down-menu"><a href="#">Industries</a><ul>$(industries.filter(title != "index").map(indMenuItem(_)))</ul></li>' else '')
    <li><a href="/pricing.html">Pricing</a></li> 
    <li><a href="/partner_up.html">Partner Up</a></li> 
    <li><a href="/about.html">About</a></li> 
    <li><a href="/contact.html">Contact Us</a></li> 
    <li><a href="https://flow2b.com/s/">Log in</a></li>

  </ul></nav>
  
  $inner
  
<script>
  (function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,"script","https://www.google-analytics.com/analytics.js","ga");

  ga("create", "UA-93035085-1", "auto");
  ga("send", "pageview");
</script>
  
</body>
</html>'
    
  }
  
  func indMenuItem(industry: Industry): Html =  '<li><a href="$(if(industry.title == "index") "/" else indHtmlName(industry))">$(industry.title)</a></li>'
  func prodMenuItem(product: MarketingProduct): Html =  '<li><a href="/$(product.htmlName)">$(product.title)</a></li>'
  func productItem(product: MarketingProduct): Html =  '<li><a href="#$(product.anchor)">$(product.title)</a></li>'
  
  view form = nav{grid{
    button("Generate") {
      UI.download(Website.load(id).map(Zip("web.zip", doHtmlFiles)))
    }
    title
    seoDescription
    seoCount
    description
    pricing
    aboutUs
    partners
    privacyPolicy
    products
  }}
  
}

