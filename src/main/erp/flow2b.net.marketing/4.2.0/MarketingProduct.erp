entity MarketingProduct {
  field title: String
  field website: Website by products
  field status: PublicationStatus
  field readiness: Readiness
  field devProducts: [DevProduct]?
  field seoDescription: Text? {
    isValid = !seoDescription || seoDescription.length <= 160
    label = "SEO Description (one line less but close to 160 symbols)"
  }
  compute seoCount = seoDescription.length
  field description: Text? 
  field advantages: [ProductAdvantage]? read by product
  field industries: [ProductIndustry]? read by product
  //field features: [MarketingFeature]? read by product
  func anchor = title.replace(" ", "_")
  func htmlName: String = "product/" + title.replace(" ", "_") + ".html"
  func html: Html = 
'<section class="product" id="$(anchor)">
  <div class="cnt">
    <ul class="advantages">$(advantages.filter(status == Published)*.html)</ul>
  </div>
</section>'
    
  func indexIndustry: ProductIndustry = ProductIndustry(
    product = this, 
    status = status,
    advantages = advantages.map(ProductIndustryAdvantage(advantage = _))
    //features = features.map(ProductIndustryFeature(feature = _))
  )
    
  view form = nav{grid {
    website
    title
    status
    readiness
    devProducts
    seoDescription
    seoCount
    description
    advantages >> list(editMode = AlwaysRefRead) {_}
    industries >> list(editMode = AlwaysRefRead) {_}
    //features >> list(editMode = AlwaysRefRead) {_}
  }}
}

entity ProductIndustry {
  func title = "$product: $industry"
  ref field product: MarketingProduct by industries
  ref field industry: Industry by marketingProducts
  field status: PublicationStatus
  
  
  field description: Text?
  func getDescription: Text? = description.or(product.description)
  field advantages: [ProductIndustryAdvantage]? inline by productIndustry
  //field features: [ProductIndustryFeature]? inline by productIndustry
  func headerHtml: Html = 
'<h2 class="readiness m-$(product.readiness)">$(product.title)</h1>
<div class="desc">$getDescription</div>'
    
  func html(header: Bool): Html = 
'<section class="product" id="$(product.anchor)">
  <div class="cnt">
    $(if (header) headerHtml else "")
    <ul class="advantages">$(advantages.filter(advantage.status == Published).first(3)*.html)</ul>
    <a href="$(product.htmlName)" class="more">Read more about $(product.title)</a>
  </div>
</section>'
    
  view form = nav{grid {
    product
    industry
    status
    description
    advantages >> list{grid(labels = None){
      advantage
      screenshot
      description
    }}
    //features >> list{grid(labels = None){
    //  feature
    //  description
    //}}
  }}
}

extend entity Industry {
  field marketingDescription: Text?
  field seoDescription: Text? {
    isValid = !seoDescription || seoDescription.length <= 160
    label = "SEO Description (one line less but close to 160 symbols)"
  }
  compute seoCount = seoDescription.length
  field marketingProducts: [ProductIndustry]? read by industry
  
}

enum PublicationStatus {
  case Draft {background = "#999"}
  case Published {
    color = "white"
    background = "#090"
  }
}

enum Readiness {
  case Planned {background = "#ed9"}
  case CommingSoon {background = "#bde"}
  case InDevelopment {background = "#8bf"}
  case Beta {background = "#dea"}
  case Production {
    color = "white"
    background = "#090"
  }
}
