entity QueBlock extends IQueBlock[QueRspBlock] {
  singular = "Block"
  
  impl ref field optional: Bool
  ref field multiblock: Bool
  impl func needVersion = updated(blockVersion) || !optional && updated(optional) || !multiblock && updated(multiblock)
  impl func makeRsp(qr: IQr) = QueRspBlock(qr = qr, que = this)
  impl view form = grid{
    label("Block")
    x{number >> field(fontStyle = Label) blockTemplate blockVersion >> field(title = "v$n", visible = try? blockTemplate, stretch = 1)}
    x{multiblock optional fontStyle >> field(compact)}
    question >> field(visible = _question || ui.edit && ui.isSelected, label = "")
    blockParams >> field(frame = false, visible = ui.isSelected, label = "Parameters", canAdd = false)
    footer
  }
}

entity QueRspBlock extends IQueRsp {
  system ref impl field que: QueBlock

  override func qrParams = que.blockParams.map(param -> value) + qr.qrParams
  override func inProgress: Bool = isNo || (que.optional && items) ||  items*.responses.exists(_.isVisible && _.inProgress)
  impl func responded: Bool = isNo || (items && items*.responses.all(!_.isVisible || _.responded))
  field items: [QueRspBlockItem]? inline by rsp {
    default = if (!que.optional) [QueRspBlockItem(rsp = this)]
  }
  field isNo = false
  compute yesNo: YesNo? {
    value = if (isNo) No else if (items) Yes
    update = {
      isNo = new == No
      if (!items && new == Yes) {
        QueRspBlockItem(rsp = this)
      }
      if (!new && items) {
        items = []
      }
    }
  }
  
  impl view form = y(visible = isVisible, margin = TopBottom) {
    header
    yesNo >> field(visible = que.optional, editMode = AlwaysEdit, compact = false)
    items >> field(editMode = AlwaysRead, frame = false, canAdd = false, visible = !isNo)
    add(label = que.name, visible = que.multiblock && items) {
      UI.save(QueRspBlockItem(rsp = this))
    }
  }
}


entity QueRspBlockItem extends InlineEntity with IQr {
  system field rsp: QueRspBlock
  func n = rsp.items.indexOf(this)
  func que = rsp.que
  impl func qrParams = que.blockParams.map(param -> value)
  impl func version = que.blockVersion
  impl func queNumPrefix = if (que.multiblock) "$(rsp.number)$n." else rsp.number
  compute name = rsp.que.name
  
  impl view form = y(margin = None) {
    x (visible = que.multiblock, margin = Top) {
      queNumPrefix >> field(fontStyle = Label) 
      name >> field(fontStyle = rsp.que.fontStyle)
    }
    x (flow = false, margin = None, spacing = false, frame = true) {
      y (margin = Left, stretch = 1) {
        responses >> field(editMode = AlwaysRead, frame = false)
      }
      button(icon = "times", align = Right, color = "#c00", visible = rsp.que.optional || !rsp.items.onlyOne) {
        delete
      }    
    }
  }
}