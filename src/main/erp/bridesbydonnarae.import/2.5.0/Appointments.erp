object AppointementsImport extends Entity with SheetImportSchema {
  impl func title = "Appointements"
  
  impl back func process(file: File, data: [String?]?) = {
    var date: Date? = null
    data.drop(1).map(splitTo[[String?]?](",", CSV)).foreach{s =>
      if (let a = s.apply("A").trim) {
        date = Date(a, "d/MM/yy")
      }
      let b = s("B")
      let period = Period(
        start = date!.addDate(Date(b[ .. " to ").replace(".", "").trim!, "hh:mm a").time)
        end = date!.addDate(Date(b(" to " .. ].replace(".", "").trim!, "hh:mm a").time)
      )
      let t = s ("C")
      let salesperson = User.all.find(name.flex.contains(s("D"))).result.get!.person
      if (t == "Event") {
        Appointment(
          period = period, title = s("F")!
          participants = [
            AppointmentParticipant(participant = salesperson)
          ]
        ).save
      } else {
        SalesOpportunity(
          customer = Person(name = s("F").replace(",", "")!).saveBy(name).makeCustomer,
          details = BridalDetails(weddingDate = Date(s("H")!), budget = s("G").toUNum, notes = s("J")),
          appointments = [
            BridalAppointment(
              period = period, 
              type = if (t == "Final Fitting") Fitting else Bridal, 
              salesperson = salesperson, 
              state = if (s("I") == "Pending") Pending else Confirmed)
          ]
        ).save
      }
    }
  } 
}