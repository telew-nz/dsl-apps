role WarehouseOperative {
  menu Inventory {
    trait IOutgoingDelivery
    trait IIncomingDelivery
    entity Transfer
    entity StockCorrection
    report StockReport
    report GoodsMovement
    report InventoryIssue
    trait ISuperProduct
  }
  view dashboard = row {
    IDelivery.all.filter(hasInvIssues && isForCurrent(WarehouseOperative)).sortBy(dispatchDate) 
      >> nav(label = "Inventory Issues", limit = 5, more = InventoryIssue().list.open) {
      list(canAdd = false) {}
      add("Transfer") {Transfer().form.open}
      add("Stocktake") {Stocktake().form.open}
      add("Write Down") {InventoryWriteDown().form.open}
      add("Write Up") {InventoryWriteUp().form.open}
    }
    IOutgoingDelivery.all.filter(canDispatch && isForCurrent(WarehouseOperative)).sortBy(dispatchDate) 
      >> nav(label = "Outgoing Deliveries", limit = 5, more = IOutgoingDelivery.Report(canDispatchOnly = true).list.open){
        list(canAdd = false) {}
    }
    IIncomingDelivery.all.filter(active && isForCurrent(WarehouseOperative)).sortBy(deliveryDate) 
      >> nav(label = "Incoming Deliveries", limit = 5, more = IIncomingDelivery.Report(activeOnly = true).list.open){list(canAdd = false) {
    }}
  }
}