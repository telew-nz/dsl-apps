back object Conversion extends IConversion {
  func convert(version: [Int?]): Future[Any] = {
    if (version < [10,0,0]) {
      renameField(Transfer, state, "status")
      Transfer.all.foreach{t =>
        let s = field[String?](t, "state")
        if (s == "Delivered") {
          t.state = Complete
        } else if (s == "") {
          t.state = Planned
        }
      }
    }
    if (version == [10,1,0] || version == [10,1,1]) {
      IProdMoveOut.all*.updateDashboard
    }
    if (version < [10,3,2]) {
      if (InventoryWriteUp.all.exists(true).result.get) {  
        recreateAllRegisters
      }
    }
    if (version < [10,3,3]) {
      recreateAllRegisters
    }
    if (version < [10,11,0]) {
      IProdMoveOut.all.filter(savedIssues)*.updateDashboard
    }
    if (version < [10,12,0]) {
      StocktakeItem.all.update(cost = field[UMoney?](_, "differencePrice") * qty )
      if (StocktakeItem.all.exists(cost)) {
        recreateAllRegisters
      }
    }
  } 
}      

extend entity Ticket extends NewEngine