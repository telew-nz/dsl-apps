entity InventoryWriteUp extends IProdQtyItem with HasProductItemsInline with StockCorrection with IBaseIncomingDelivery with IDeliveryPItem {
  singular = "Write Up"
  func deliveryStatus: DeliveryStatus = Delivered
  ref field product: IProduct {
    from = IProduct.all.filter(_.isTangible)
    available(Ref).with(unit, altUnits)
    update = {
      productUpdated()
    }
  }
  func needProductItems: Bool = true
  field stockType: StockType = Inventory
  func stockTypeDst = stockType
  func stockTypeSrc = null
  compute price: UMoney[currency]? {
    value = amount/qty
    update = {
      amount = qty*new
    }
  }
  func dispatchDate = date
  func deliveryDate = date
  field amount: UMoney[currency]?
  func currency = legalEntity.getCurrency
  func deliverySupplier = legalEntity.legalEntity
  func deliveryReceiver = legalEntity.legalEntity
  
  compute number = "WU$n"
  func title: String = "$number $product"
  func journalDate: Date = date
  func deliverySrc = null
  func deliveryDst = store
  func items: [IDeliveryItem]? = [this]
  func itemDelivery: IDelivery? = this
  func outcomeStockReg: ProdReg? = stock
  
  compute baseQty: UQty[product.unit] = product.toBase(qty)
  register stock: ProdReg = ProdReg(
    legalEntity = legalEntity, store = store, product = product,
    stockType = stockType, date = date, doc = this,
    qty = baseQty
  )
  register invLedgers = {
    ProductItem.distribute(product, baseQty, amount, productItems) {
      stockType.obj.new(
         journal = this, product = product, productItem = item, 
         qty = trQty, trAmount = trAmount,
         contraAccount = InventoryAdjustments
      )
    }
  }
  
  view form = nav{
    grid {
      date
      number
      refNum
      legalEntity
      store
      product
      stockType
      qty >> field(canEditUnit = true)
      price
      amount
      snView
    }
    generalLedgerButton
  }
  object view list = InventoryWriteUp.all >> nav{list{grid(labels = None){
    row{fullNum date legalEntity store}
    row{product qty price amount}
  }}}
}
  
