generator account {
  field template: String
  field number: Int
  field type: LedgerAccountType
  field closeWithPeriod: Bool
  field structureSpecific: Bool
  field money: Bool
  field label: String?
     
  compute fields = declarations*.as[Field].filter(name != "currency")
  compute keyFields = fields.filter(isKey)
    
  func generate: Dsl = '
extend enum LedgerAccount {
  case $name(template = AccTemplate.$template, number = $number, type = $type, structureSpecific = $structureSpecific, closeWithPeriod = $closeWithPeriod, money = $money) {
    label = "$number $(label.alt(name.fromCamelCase))" background = "$(type.props.background)"  color = "$(type.props.color)"
  }
}'

}