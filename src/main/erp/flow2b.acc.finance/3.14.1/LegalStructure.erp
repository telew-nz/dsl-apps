account Withdrawals(template = "Counterparty", number = 471, type = Equity, closeWithPeriod = true, structureSpecific = true) 

inline trait LegalStructure {
  field company: Company by legalStructure
  func currency = company.getCurrency
  func specificAccounts: [LedgerAccount]
  func canCloseIncomeSummary: Bool
  func incomeSummaryClosing(journal: Journal, balance: Money[currency]): [Ledger]?
  func title = company.title
  func incomeTaxBasis: IncomeTaxBasis?
  func gstBasis: GstBasis?
  func pricesIncludingGst: Bool = true
}

enum IncomeTaxBasis {
  case Cash
  case Accrual
}

enum GstBasis {
  case Payment
  case Invoice
}

enum GstStatus {
  case Registered
  case NotRegistered
}


extend trait LegalEntity {
  ref compute hasGst: Bool {
    value = legalInfo.hasGst
    views = []
  }
  func legalName: String = legalInfo.name.alt(title)
  func legalInfo: LegalInfo
}
  
class LegalInfo {
  field name: String? {label = "Legal Name"}
  field address: Address? 
  field gstStatus: GstStatus?
  func hasGst = gstStatus == Registered
  view gstView = group {
  }
  view gstCustomerView = group {
  }
  view form = grid{
    name 
    address
  }
}

