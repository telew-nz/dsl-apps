acctemplate DeliveryDebt {
  impl key field currency: Currency
  key field counterparty: LegalEntity
}

extend register LDeliveryDebt extends LDebt {
  field sOrigin: Journal?
  impl compute origin: Journal {
    value = sOrigin.alt(journal)
    update = {sOrigin = new}
  }
  stored compute items: [Journal -> Money]? = prev?.items.updated(origin, _ + amount)
  
  impl func debtItems: [DebtItem]? = items.toSeq.map(i =>
    DebtItem(origin = i.#0, amount = i.#1.as[Money[currency]])
  )
}
