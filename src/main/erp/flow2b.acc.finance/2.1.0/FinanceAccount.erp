trait FinanceAccount {
  object func ours: [FinanceAccount]? = LegalEntity.ours*.accounts
  
  field title: String
  ref field legalEntity: LegalEntity by accounts =? (LegalEntity.ours.onlyOne) {
    from = LegalEntity.ours
  }
  ref field currency: Currency
    
  ref compute balance: Money[currency]? = cashLedger?.balance
  system compute lastTransactionDate = cashLedger?.date
  system compute cashLedger: LCash? = LCash.current.find(financeAccount == this)
    
  object view refList = FinanceAccount.all.sortBy(lastTransactionDate.alt(DateTime.min).desc) >> list{grid(labels = None, width = 0.4){
    row{title >> field(width = 0.25) balance >> field(width = 0.15, align = Right)}
  }}
  object view list = FinanceAccount.all.sortBy(title) >> nav{list{grid(labels = None){
    row{title >> field(width = 0.7) balance >> field(width = 0.3, align = Right)}
  }}}
}

extend entity LegalEntity {
  field accounts: [FinanceAccount]? {label = "Finance Accounts"}
}

extend entity Company {
  extend view form = accounts
}

extend entity Person {
  extend view form = accounts
}

entity CashAccount extends FinanceAccount {
  view form = nav{grid{
    title
    legalEntity
    currency
    balance
  }}
}
  
entity BankAccount extends FinanceAccount {
  field number: String?
  view form = nav{grid{
    title
    legalEntity
    number
    currency
    balance
  }}
}

