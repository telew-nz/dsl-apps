extend trait LegalEntity {
  view debtStatement {
    printable = true
    label = "Debt Statement"
    layout = nav{grid(labels = None){
      h1("Debt Statement")
      title
      debtReport(money = true)
    }}
  }
  back func unpaidAmount(origin: DebtOrigin): Money? = {
     LDebt.current
      .filter(balance && counterparty == this && account.money)
      .flatMap(debtItems)
      .filter(o => o.origin == origin)
     *.amount.agg(sum)
      .result.get
  }
  view debtReport(money: Bool) = LDebt.current
    .filter(balance  
       && money == account.money
       && counterparty == this)
    .flatMap(debtItems)
    .map{
      let baseAmount <- amount.to[Money[this.getCurrency]](Date.now)
      (origin, dueDate = dueDate, debtOverdue, amount, baseAmount)
    }
    .total(amount = baseAmount.sum)
  
    >> total {
      row(fontSize = 1) {label("Total"), space, space, amount}
      table (action = origin?.form?.open) {
        origin?.title >> field(width = 0.35, label = "") 
        debtOverdue >> field(label = "Overdue", width = 0.15)
        dueDate >> field(width = 0.25)
        amount >> field(width = 0.25)
      }
    }
}