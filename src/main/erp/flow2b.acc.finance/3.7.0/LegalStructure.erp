account Withdrawals(template = "Counterparty", number = 471, type = Equity, closeWithPeriod = true, structureSpecific = true) 

inline trait LegalStructure {
  func legalNumber: String?
  func gstNumber: String?
  func currency = company.getCurrency
  field company: Company by legalStructure
  func specificAccounts: [LedgerAccount]
  func canCloseIncomeSummary: Bool
  func incomeSummaryClosing(journal: Journal, balance: Money[currency]): [Ledger]?
  func legalName: String?
  func title = legalName.alt(company.title)
  func incomeTaxBasis: IncomeTaxBasis?
  func gstBasis: GstBasis?
  func hasGst: Bool = gstBasis
}

enum IncomeTaxBasis {
  case Cash
  case Accrual
}

enum GstBasis {
  case Payment
  case Invoice
}
  
extend entity Company {
  func hasGst: Bool = legalStructure?.hasGst.alt(true)
  ref field legalStructure: LegalStructure? inline by company
  func forceLegalStructure: LegalStructure = legalStructure.alt(throw "Set legal structure for $(this)")
  func specificAccounts: [LedgerAccount] = forceLegalStructure.specificAccounts
  func canCloseIncomeSummary: Bool = legalStructure?.canCloseIncomeSummary.alt(false)
  func incomeSummaryClosing(journal: Journal, balance: Money[getCurrency]): [Ledger]? = {
    forceLegalStructure.incomeSummaryClosing(journal, balance)
  }
}

extend trait LegalEntity {
  func hasGst: Bool = false
}

