entity DatedBullionProduct extends BullionSuperProduct with IEcwidProduct {
  field dates: [BullionProductDate]? inline by superProduct {
    singular = "Date"
  }
  func ecwidOptions = [
    EcwidOption(
      name="Date", type=Radio,
      choices=dates.map{ EcwidOptionChoice(text = year.unformattedString) }
    )
  ]
  
  view form = nav{grid(labels = Top){
    header
    dates >> table {year alwaysAvailable button("Details") {form.open} }
    
    ecwidIdsView
    accessories
    principals
  }}
  func isService = false
  func isTangible = true
  view traitItem = grid(labels = None) {
    x{h3("Dated Bullion Product:") title status}
  }
  func subProducts: [BullionProductDate]? = dates.sortBy(year)
}

entity BullionProductDate extends IComplexProduct with TrademeProduct with IEcwidProductVariation {
  field photos: [Image]?
  field alwaysAvailable: Bool {
    default =? try? superProduct.alwaysAvailable
    label = "Always Available for Sale"
  }
  func isTangible = true
  ref field superProduct: DatedBullionProduct by dates {
    available(All).for(All)
  }
  ref field year: Int
  func title = year.unformattedString + " " + superProduct.title 
  func ecwidOptionsValues = [EcwidOptionValue(name = "Date", value = year.unformattedString)]
  view form = nav{grid{
    photos >> field(height = 8, label = "")
    superProduct
    sku
    year
    alwaysAvailable
    stocksView
    ecwidCombinationIdsView
    trademeStatus
    trademeListings
  }
    movementsButton
  }
  func unit: ProductUnit = superProduct.unit
}