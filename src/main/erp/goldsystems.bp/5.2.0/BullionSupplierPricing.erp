entity BullionSupplierPricing extends PriceModel {
  ref field date: Date = now
  func title = "BSP $vendor $date"
  func currency = vendor.getCurrency
  func contains(superProduct: ISuperProduct): Bool  = products.exists(product == superProduct)
  field products: [BullionSupplierProductPrice]? inline by pricing
  func superProductPrice(superProduct: ISuperProduct): IPrice? = {
    products.find(product == superProduct)
  }
  view form = nav{grid{
    date
    vendor
    products >> table {
      product >> field(width = 0.4) percentMargin >> field(width = 0.2) fixedMargin >> field(width = 0.2) salesPrice >> field(width = 0.2)
    }
  }}
}
  
inline entity BullionSupplierProductPrice extends IPrice {
  func superProduct = product.superProduct
  func currency = pricing.currency
  system field pricing: BullionSupplierPricing inline by products
  field product: BullionSuperProduct
  field percentMargin: Percent?
  field fixedMargin: Money[currency]?
  all compute salesPrice: Money[currency]? <- salesPrice(currency)

  func salesPrice(currency: Currency): Future[Money?] = {
    let metalPrice <- product.metalCost.to[Money[currency]](now)
    let fm <- fixedMargin.to[Money[currency]](now)
    metalPrice + metalPrice*percentMargin + fm
  }
  func onSave = product.touch
    
  view form = salesPrice
}
