entity DatedBullionProduct extends BullionSuperProduct with ICustomerSuperProduct with IEcwidProduct {
  object func attrs = [BullionYear]
  field photos: [Image]?
  func customerProducts: [ICustomerProduct]? = dates
  field dates: [BullionProductDate]? inline by superProduct {
    singular = "Date"
  }
  func trackItems = null
  compute productCost: ProductCost? {
    availableFor = All
    value = childProductCost
  }
  back func ecwidOptions(service: IEcwidIntegration) = [
    EcwidOption(
      name="Date", type=Radio,
      choices=dates.filter(stockAvailable(service)).map{ EcwidOptionChoice(text = year.title) }
    )
  ]
  
  view form = nav{tabs {
    grid(labels = Top, label = "Main"){
      photos >> field(height = 8, label = "")

      header
      dates >> table {year alwaysAvailable button("Details") {form.open} }

      ecwidIdsView
      crossSells
        upsells
        downsells
    }
    grid(labels = Top, label = "Integrations"){
      customerSuperView
    }
        
  }}
  func isService = false
  func isTangible = true
  view traitItem = grid(labels = None) {
    x{h3("Dated Bullion Product:") title status}
  }
  func child: [BullionProductDate]? = dates.sortBy(year.year.desc)
}

entity BullionYear extends ProductAttrTerm {
  singular = "Year"
  plural = "Years"
  object func attrName: String = "Year"
  object func attrSlug: String = "issue-year"
  ref field year: Int
  field products: [BullionProductDate]? by year
  func title = year.unformattedString
}

entity BullionProductDate extends IComplexProduct with ICustomerComplexProduct with IEcwidProductVariation {
  func customerSuperProduct = superProduct
  field photos: [Image]?
  field alwaysAvailable: Bool {
    default =? try? superProduct.alwaysAvailable
    label = "Always Available for Sale"
  }
  func isTangible = true
  ref field superProduct: DatedBullionProduct by dates {
    available(All).for(All)
  }
  func getParent = superProduct
  ref field year: BullionYear by products
  func attrTerms: [ProductAttrTerm]? = [year]
  func title = "$year $superProduct"
  
  func ecwidOptionsValues = [EcwidOptionValue(name = "Date", value = year.title)]
  view form = nav{tabs {
      grid(label = "Main", labels = Top){
        photos >> field(height = 8, label = "")
        status >> field(label = "", compact)
        superProduct >> field(label = "", fontStyle = H1)
        year >> field(fontStyle = H1)
        sku
        stocksView
        productCost
        ecwidCombinationIdsView
        trademeStatus
        trademeListings
      }
      productTabView
      grid(labels = Top, label = "Integrations"){
        ecwidCombinationIdsView
        customerProductView
      }
    }
    productNavView
  }
  func unit: ProductUnit = superProduct.unit
  func customerTitle(superTitle: String): String = "$year $superTitle"
}