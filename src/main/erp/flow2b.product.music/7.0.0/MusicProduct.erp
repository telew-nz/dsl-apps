entity Artist {
  field title: String
  system stored compute uniqTitle = title.lower.replace(" ", "")  
  field description: Text?
  field products: [MusicProduct]? by artist
}
entity MusicFormat {
  field title: String
  field description: Text?
  system stored compute uniqTitle = title.lower.replace(" ", "")
}
entity MusicProduct extends IBasicProduct {
  field status: ProductStatus = ForSale
  ref field name: String
  func title = artist ?+ ": " + name + " " +? format
  system stored compute uniqName = name.lower.replace(" ", "")
//  func title = "$(artist?+': ')$name$(' ' +? format)"
  ref field artist: Artist?
  ref field format: MusicFormat?
  field description: Text?
  func unit = Item
  
  func isTangible = true
  
  view form = nav(onBarcode = if (ui.edit) addBarcode(barcode)){
    tabs {
      grid (labels = Top, label = "Main") {
        photos >> field(height = 10, label = "")
        statusView
        row {
          artist
          name 
          format
        }
        row {sku refNum trackItems}
        barcodes
        
        productCost >> field(frame = false)
        baseMainView
        shortDescription
        extension("main")
        description
      }
      categoriesView
      productTabView
      extension("tabs")
      grid (labels = Top, label = "Other") {
        customerSuperView
        customerProductView
        extension
      }
    }
    productNavView
    extension("nav")
  }
}
