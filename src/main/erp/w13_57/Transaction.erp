entity Transaction {
  field date: Date = now
  compute total = sellings*.total.sum - buyings*.total.sum
  
  field sellings: [SellItem] inline by transaction
  field buyings: [BuyItem] inline by transaction
}

trait TransactionItem {
  func transaction: Transaction
   
  field product: Product
  field quantity: Int
  compute price: Dec[2] = (total/quantity) {
    update = {
      total = quantity*price
    }
  }
  field total: Dec[2]
}
entity SellItem extends TransactionItem {
  field transaction: Transaction
}
entity BuyItem extends TransactionItem  {
  field transaction: Transaction
}

role Seller {
  entity Transaction = readWrite
  entity SellItem = readWrite
  entity BuyItem = readWrite
  view = menu Menu {
    entity Transaction
  }
}
