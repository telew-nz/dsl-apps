entity VariableGood extends ISuperProduct with IAltUnits {
  singular = "Variable Product"
  plural = "Variable Products"
  impl func isTangible = true
  impl field photos: [Image]?
  impl field title: String
  impl field description: Text?
  impl field status: ProductStatus = default
  field variations: [GoodVariation]? read by variableGood
  impl ref field trackItems: TrackItems? {
    label = "Track Serial Numbers"
  }
  impl func skuPrefix = "VGD"
  
  impl object func attrs: [ProductAttr]? = [ColorItem.as[ProductAttr], Size, ProdCondition]
  impl func child = variations
  impl compute productCost: ProductCost? {
    availableFor = All
    value = childProductCost
  }
  
  impl view form = nav{
    tabs {
      grid (labels = Top, label = "Main") {
        photos >> field(height = 10, label = "")
        status >> field(label = "", compact)
        title >> field(label = "", fontStyle = H1)
        row {sku refNum trackItems}
        
        unitsView
        productCost >> field(frame = false)
        baseMainView
        
        variations
        extension("main")
        extension
        description
      }
      superProductTabView
      extension("tabs")
    }
    nfcWriteBtn
    extension("nav")
  }
} 

entity GoodVariation extends IComplexProduct with IProductInv {
  singular = "Product Variation"
  plural = "Product Variations"
  impl func title: String = "$variableGood $(attrTerms.join(" "))"
  impl func subTitle(superTitle: String): String = "$superTitle $(attrTerms.join(" "))"
  
  impl field photos: [Image]?
  ref field variableGood: VariableGood
  impl func getParent = variableGood
  
  impl func attrTerms = color.toSeq + size.toSeq + condition.toSeq
  
  ref field color: ColorItem?
  ref field size: Size?
  ref field condition: ProdCondition?
  
  impl view form = nav(onBarcode = if (ui.edit) addBarcode(barcode)){
    tabs {
      grid (labels = Top, label = "Main") {
        photos >> field(height = 10, label = "")
        status >> field(label = "", compact)
        variableGood >> field(label = "", noTab, fontStyle = H1)
        row {sku refNum >> field(noTab) space}
        row {color size condition}
        
        barcodes
        productCost >> field(frame = false)
        baseMainView
        extension("main")
        extension
        description
      }
      grid (labels = Top, label = "Related") {
        kits
        extension("rel")
      }
      subProductTabView
      productTabView
      extension("tabs")
    }
    nfcWriteBtn
    extension("nav")
  }
  impl view ref = x(flow = false){"   " >> field(background = color?.color, visible = color) title}
}
