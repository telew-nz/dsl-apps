entity VariableGood extends ISuperProduct with ICustomerSuperProduct with IAltUnits {
  func isTangible = true
  field photos: [Image]?
  field title: String
  field shortDescription: Text?
  field description: Text?
  field status: ProductStatus = default
  field variations: [GoodVariation]? read by variableGood
  ref field trackItems: TrackItems? {
    label = "Track Serial Numbers"
  }
  func skuPrefix = "VGD"
  
  object func attrs: [ProductAttr]? = [ColorItem.as[ProductAttr]!, Size]
  func child = variations
  func customerProducts = variations
  compute productCost: ProductCost? {
    availableFor = All
    value = childProductCost
  }
  
  view form = nav{
    tabs {
      grid (labels = Top, label = "Main") {
        photos >> field(height = 10, label = "")
        status >> field(label = "", compact)
        title >> field(label = "", fontStyle = H1)
        row {sku refNum trackItems}
        
        unitsView
        brands
        categories
        productCost >> field(frame = false)
        baseMainView
        shortDescription
        variations
        extension("main")
        description
      }
      grid (labels = Top, label = "Related") {
        accessories >> list(frame = false)
        principals >> list(frame = false)
        extension("rel")
      }
      extension("tabs")
      grid (labels = Top, label = "Other") {
        customerSuperView
        extension
      }
    }
    extension("nav")
  }
} 

entity GoodVariation extends ICustomerComplexProduct with IComplexProduct {
  func title: String = "$variableGood $(attrTerms.join(" "))"
  
  field photos: [Image]?
  ref field variableGood: VariableGood
  func getParent = variableGood
  field obsolete: Bool
  field alwaysAvailable: Bool
  func isTangible = true
  
  func customerSuperProduct = variableGood
  func attrTerms = color.toSeq + size.toSeq
  
  ref field color: ColorItem?
  ref field size: Size?
  
  view form = nav{
    tabs {
      grid (labels = Top, label = "Main") {
        photos >> field(height = 10, label = "")
        status >> field(label = "", compact)
        variableGood >> field(label = "", noTab, fontStyle = H1)
        color
        size
        row {sku refNum >> field(noTab) space}
        barcodes
        productCost >> field(frame = false)
        baseMainView
        extension("main")
        description
      }
      grid (labels = Top, label = "Related") {
        kits
        extension("rel")
      }
      productTabView
      extension("tabs")
      grid (labels = Top, label = "Other") {
        customerProductView
        extension
      }
    }
    extension("nav")
  }
  func customerTitle(superTitle: String): String = "$superTitle $(attrTerms.join(" "))"
  view ref = x{"   " >> field(background = color?.color, visible = color) title}
}
