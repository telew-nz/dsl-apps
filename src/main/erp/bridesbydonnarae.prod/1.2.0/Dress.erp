variableProduct Dress(skuPrefix = "WD") {
  field dressStyle: [DressStyle]?
  field silhouette: Silhouette?
  field color: ColorItem?
  impl compute title = (brand ?+ " ") + model
  
  
  variation DressVariation {
    ref key field color: ColorItem?
    ref key field size: Size?
    impl view customView = grid{row{
      color size space
    }}
  }
  photo DressPhoto {
    field color: ColorItem?
  }
  
  impl view customView = grid{
    row{brand model color}
    row{dressStyle silhouette showColors}                          
  }
}

extend entity Dress {
  ref field model: String
  field showColors: Bool {label = "Display Color Options on the Label"}
}

extend entity DressVariation {
  compute altColors: [ColorItem]? = {
    superProduct*.subProducts*.as[DressVariation]*.color
      .filter(_ != this.color).distinct
  }
  compute altColorsStr = altColors.join(", ")
  compute superTitle = superProduct.title
  override view labelView(salesPrice: SalesPrice?) = y (fontSize = 0.65, margin = Around, spacing = false, width = "2in", height = "1in", style = LabelPrint){
    superTitle >> field(align = Center)
    x{label("Size:") size color >> field(title = title stretch = 1, align = Right)}
    x(flow = false){superProduct.silhouette label("Options:", visible = superProduct.showColors && altColorsStr stretch = 1, align = Right)  altColorsStr}
    x {label(" ", stretch = 1) salesPrice >> field(frame = false, align = Center, fontSize = 1.4) label(" ", stretch = 1)}
    barcode >> field(barcode = barcodeFormat, width = 0.8, height = 0.25, fontSize = 0, align = Center)
  }
}

productAttr DressStyle

productAttr Silhouette 