entity Route extends IRoute {
  const ref field n: Int? = increment(Route.gen) 
  list stored compute period: Period? = if (let items = this.items) Period(start = items*.dispatchDate.min, end = items*.deliveryDate.min)
  ref stored compute state: DeliveryStatus {
    value = {
      if (items.all(pathState == Delivered)) Delivered
      else if (items.exists(pathState == Delivered || pathState == InTransit)) InTransit
      else Planned
    }
  }
  func number = "RT" + n
  func title = number
  list field executors: [Person]?
  
  view form = nav {grid{
    number
    state
    period >> field(frame = false)
    executors
    items >> list(frame = true) {
      listItem
    }
  }}
  
  event onSave = {
    executors*.user*.join(this)
  }
  report Report {
    field activeOnly: Bool = true
    field executor: Person?
    
    view list = Route.all.filter((!executor || executor.in(executors)) && (!activeOnly || state.active)).sortBy(period?.start) >> nav{list {grid(labels = None){
      row {number period >> field(frame = false)}
      executors
    }}}
  }
}
