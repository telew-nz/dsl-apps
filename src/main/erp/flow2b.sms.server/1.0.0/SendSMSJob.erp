class SendSMSJob extends SystemJob {
  impl field service: AWSSMSService
  
  field destinationNumber: String
  field message: String  
  field pinpointConfig: PinpointClientConfig
  
  impl func do = {
	send()
  }  
  
  back func send(): Future[String?] = {
    guard(let wID = Workspace.crossId) else return { null[String] }
    
    let messageRequest = MessageRequest(
      addresses = [destinationNumber -> AddressConfiguration()]
      messageConfiguration = MessageConfiguration(
        smsMessage = SMSMessage(
          body = message
          originationNumber = pinpointConfig.originationNumber
          keyword = pinpointConfig.appKeyword
        )
      )
    )  
    
    let r <- service.https("v1/apps/${service.pinpointAppID}/messages").post(messageRequest.json)
    
    if (r.code == 200
        let resMsg = r.body!.parseJson[MessageResponse].msgResult.apply(destinationNumber)){
        if(resMsg.deliveryStatus == "SUCCESSFUL") {
          SMSLog(
            workspaceID = wID
            messageID = resMsg.messageId
            status = Sent
          ).save
          resMsg.messageId 
        } else {
          // FIXME: Log(Activity.comment) doesn't work (crossworkspace)
       	  Activity.comment("Can't send sms.\n[${resMsg.deliveryStatus}]: ${resMsg.statusMessage}") 
          null[String]
        }
    } else null[String]
  }
}