acctemplate WorkInProgress(type = singleAccount) 
account WorkInProgress(template = "WorkInProgress", debit = acc(WorkInProgress, 25)) 

extend register LWorkInProgress {
  key field order: IProductionOrder? = journal.as[IProductionOrder]
  order field complete: Bool
  register outputs: [LInvBase]?
  register intraLedgers: [Ledger]?
  impl event onSave = {
    if (!complete) {
      amount = -order?.lMaterials*.amount.sum
      baseAmount = -order?.lMaterials*.baseAmount.sum
    } else {
      amount = -prev?.amount
      baseAmount = -prev?.baseAmount
    }
    let le = if (complete) order?.receiver.alt(legalEntity) else order?.supplier.alt(legalEntity)
    let contraLe = if (le != legalEntity) legalEntity
    outputs = if (complete) {
      let r = order?.receiver
      order?.outputs.distribute(prev?.amount, by = costWeight).map{
        order?.outputStockType.alt(Inventory).obj.new(
          journal = journal, date = this.date, 
          product = item.product, gstRate = item.gstRate, 
          legalEntity = le, 
          trAmount = value, qty = item.baseQty)
      }
    }
    
    intraLedgers = if (let contraLe) {
      let oos = if (complete) outputs else order?.lMaterials
      oos.groupBy(gstRate).agg(amount.sum).toSeq.filter(amount).flatMap{
        LInventory.transferOwnership(journal, this.date, le, contraLe, currency, amount!, gstRate, amount*gstRate.alt(0)) 
      }
    }
  }
}