trait IMethod extends RefEntity {
  func materials: [IMethodMaterial]?
  func resources: [IMethodResource]?
  func outputs: [IMethodOutput]
  ref compute mainProduct: OutputProduct = outputs.first.outputProduct
  func unit: ProductUnit = outputs.first.unit
  func qty: Qty[unit] = outputs.first.qty
}

trait IMethodOutput extends InlineEntity {
  func outputProduct: OutputProduct
  func unit: ProductUnit
  func qty: Qty[unit]
  func costWeight: Dec[2]?
  func gstRate: Percent[2]??
  func baseQty = outputProduct.product.toBase(qty)
}

trait IMethodMaterial extends InlineEntity {
  func material: Material
  func unit: ProductUnit
  func qty: Qty[unit]
  func gstRate: Percent[2]??
  func baseQty = material.product.toBase(qty)
}

trait IMethodResource extends InlineEntity {
  func resource: Resource
  func duration: Duration[hour]
  
  func scale(k: Dec[8]): Duration[hour] = duration*k
}

