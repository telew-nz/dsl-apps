extend enum DashboardIssue {
  case BankStatementUploadError(role = Accountant, priority = major)
  case BSUSelectAccount(role = Accountant, priority = major)
}

entity BankStatementUpload extends ImportTask with DashboardItem {
  background = "#d68400"
  override compute number = "BSU$n"
  impl func service = FinanceService
  
  impl func itemRoles = [Accountant]
  override func issues = {
    if (state == Error) {
      [BankStatementUploadError]
    } else if (unknownAccount && !account) {
      [BSUSelectAccount]
    }
  }
  override func fixes(issue: DashboardIssue) = {
    if (issue == BankStatementUploadError) {
      [
        Fix(text = "Make sure that the file was downloaded from the bank and uploaded without modification"),
        Fix(text = "If the file seems to be correct, please contact support"),
        Fix(text = "If it was uploaded by mistake, delete the upload")
      ]
    } else if (issue == BSUSelectAccount) {
      [
        Fix(text = "Select account in the account field")
      ]
    }
  }
  field unknownAccount: Bool
  field defineAccount: Bool
  
  field type: BankStatementType?
  field account: FinAccount? {
    label = "Account (please select carefully)"
    visible = unknownAccount || defineAccount || account
  }
  field files: [File]
  const field payments: [CashMovement]? by uploads {
    cleanCascade = false
  }
  list compute paymentsCount { 
    value = payments.count
    label = "Payments Uploaded"
  }
  override func title = "$number $date"
  impl view form = nav{grid{
    issuesView
    number
    date
    files >> field(editMode = AlwaysRead, visible = !created)
    files >> field(visible = created)
    
    add("Set Account", visible = ui.edit && !unknownAccount && !defineAccount && !account) {
      defineAccount = true
    }
    account
    account >> field (editMode = AlwaysEdit, visible = !ui.edit && !account && (unknownAccount || defineAccount) )
    
    stateView
    payments
  }}
  impl func createJob = StatementProcessJob(task = this)
  impl view traitItem = x {
    state number date account type paymentsCount
  }
  report Report {
    field state: [ImportTaskState]? {auto}
    impl view list = BankStatementUpload.all >> nav{table {
      state number date account type paymentsCount
    }}
  }
}
