extend enum DashboardIssue {
  case BankStatementUploadError(role = Accountant, priority = major)
}

entity BankStatementUpload extends ImportTask with DashboardItem {
  background = "#d68400"
  override compute number = "BSU$n"
  impl func service = FinanceService
  
  impl func itemRoles = [Accountant]
  override func issues = {
    if (state == Error) {
      [BankStatementUploadError]
    }
  }
  override func fixes(issue: DashboardIssue) = {
    if (issue == BankStatementUploadError) {
      [
        Fix(text = "Make sure that the file was downloaded from the bank and uploaded without modification"),
        Fix(text = "If the file seems to be correct, please contact support"),
        Fix(text = "If it was uploaded by mistake, delete the upload")
      ]
    } 
  }
  
  field type: BankStatementType?
  field account: FinAccount? 
  field files: [File]
  const field payments: [CashMovement]? by uploads
  list compute paymentsCount { 
    value = payments.count
    label = "Payments Uploaded"
  }
  override func title = "$number $date"
  impl view form = nav{grid{
    issuesView
    number
    date
    account
    files
    stateView
    payments
  }}
  impl func createJob = StatementProcessJob(task = this)

  report Report {
    field state: [ImportTaskState]? {auto}
    impl view list = BankStatementUpload.all >> nav{table {
      date state account type paymentsCount
    }}
  }
}





