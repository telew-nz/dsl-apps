class UpdateCategoryToEcwid extends SystemJob {
  field service: IEcwidIntegration
  field category: IEcwidCategory
  
  class AddResponse {
    field id: Int
  }
  
  func do = {
  	let categoryRequest = EcwidCategoryRequest (
      name = category.ecwidCategoryName,
      description = category.description,
      productIds = category.ecwidProducts*.ecwidIds.filter(eId => eId.service == this.service)*.ecwidId
    )
    
    if( let categoryIdToUpdate = category.getEcwidCategoryIdForService(service) ) {
      if(categoryIdToUpdate.categoryId != null) {
        let responseUpdate <- service.https("categories/${categoryIdToUpdate.categoryId!}").put(categoryRequest.json)
        if (responseUpdate.code != 200) {
          throw "Ecwid: UpdateCategory failed! code: ${responseUpdate.code}, body: ${responseUpdate.body!}, request: ${categoryRequest.json}"
        }
        responseUpdate.body!
      } else {
        let responseAdd <- service.https("categories").post(categoryRequest.json)
        if (responseAdd.code != 200) {
          throw "Ecwid: AddCategory failed! code: ${responseAdd.code}, body: ${responseAdd.body!}, request: ${categoryRequest.json}"
        }
        categoryIdToUpdate.categoryId = responseAdd.body!.parseJson[AddResponse].id
        categoryIdToUpdate.save()
        responseAdd.body!
      }
    } else {
      Future(1)
    }
  }
}

class EcwidCategoryRequest {
  field name: String
  field description: Html?
  field productIds: [Int]?
  field enabled = true
}