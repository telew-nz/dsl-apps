entity OneoffJewelleryProduct 
  extends IBasicProduct with JewellerySuperProduct with JewelleryProduct with IProductInv
{
  func trackItems = null
  func status = ForSale
  field condition: ProdCondition
  view mainView = grid(width = 1.2, margin = TopBottom) {
    photos >> field(height = 8, label = "")
    row {sku refNum space}
    row {metalType >> field(width = 0.4) productForm >> field(width = 0.8)}
    row {size >> field(canEditUnit = true) totalWeight totalWeightOz}
    row{width height depth}
    edit{puritySelection}
    row {purity pureWeight pureWeightOz}
    condition
    row {target resaleMultiplier manufacturer}
    productCost
    baseMainView
  }
  
  func puteWeightUpdated(): Future[Void] = {
    if (!id) if (let p = purchaseItem?.purchase) p.updateAmount()
  }
  func description: Text? = ""
  
  field purchaseItem: OneoffDeliveryItem? inline by product
  func weightInGrams = totalWeight
  func isTangible = true
  func unit = Item
  func isValid = true
  func obsolete = false
  func alwaysAvailable = false
  ref compute title: String = {
    "$sku $refNum $productForm $metalType $purity $totalWeight $manufacturer $(target.short)"
  }
  func gstRate(vendor: IVendor?): UPercent[2]?? = if (isPure) null else 0.15
}

enum Target(short: String) {
  case Resale(short = "R")
  case Liquidation(short = "L")
}