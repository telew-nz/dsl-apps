entity OneoffJewelleryProduct 
  extends JewellerySuperProduct with JewelleryProduct with IBasicProduct 
     with IDeliveryProductItem with IOutgoingDeliveryItem 
{
  field condition: Condition
  func product: IProduct = this
  func needsRevision: Bool = false
  func qty: Qty[unit] = 1
  field purchase: OneoffPurchaseItem? inline by deliveryItem
  func sales: ISalesItem? = null
  func outcomeStockReg: StockRegister? = null
  view form = nav{grid(width = 1.2, margin = TopBottom) {
    sku
    row {metalType >> field(width = 0.4) productForm >> field(width = 0.8)}
    row {size >> field(canEditUnit = true) totalWeight totalWeightOz}
    edit{puritySelection}
    row {purity pureWeight pureWeightOz}
    condition
    row {target resaleMultiplier manufacturer}
  }}
  
  func puteWeightUpdated(): Void = {
    purchase?.updateAmount()
  }
  func description: Text? = ""
  func items: [IProductItem]? = []

  func gstRate(vendor: Actor): Percent[2]?? = if (vendor.hasGst) {
    getGstRate.or(vendor.defaultGstRate.rate)
  }
  view traitItem = grid(labels = None) {
    x{h3("Oneoff Jewellery:") title}
  }
}

enum Target {
  case Resale
  case Liquidation
}