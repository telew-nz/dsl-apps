inline entity OneoffPurchaseItem extends IPurchaseProductItem {
  singular = "Oneoff Jewellery"
  field deliveryItem: OneoffJewelleryProduct inline by purchase
  compute spotPrice: Future[Money[order.currency]?] = {
    if (let c = try? deliveryItem.metalCost) c.to[Money[order.currency]](order.date)
    else 0
  }
  field spotPriceLevel: Percent? {
    default = 0.5
    update = {
      updateAmount()
    }
  }
  func updateAmount(): Void = {
    let sp <- spotPrice
    sAmount = sp*spotPriceLevel
  }
  view form = grid(width = 1.2, margin = None) {
    deliveryItem.form.unnav
    row {spotPriceLevel priceEditor amountEditor}
    read {
      space(width = 0.95) 
      discountEditor >> field(width = 0.25)
    }
    deliveryItem.delivery >> field(visible = this.order.deliveries.count > 1)
    invoice
    edit {
      panel(collapsed = !discount, label = "More", frame = false, margin = None) {
        grid(width = 1.2, margin = Bottom) {
          row{gstEditor >> field(width = 0.2) discountEditor >> field(width = 0.25) space(width = 0.75)}
        }
      }
    }
  } 

  view rowView = group {
    row{deliveryItem.product >> field(rowSpan = 2)
        deliveryItem.qty >> field(canEditUnit = true) 
        priceEditor 
        amountEditor}
    row(visible = discount){label("Discount", span = 2, align = Right) discountEditor}
  }
}
 