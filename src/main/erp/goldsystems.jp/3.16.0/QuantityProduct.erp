entity QuantityJewelleryProduct extends JewellerySuperProduct with ISuperProduct {
  field name: String?
  field description: Text?
  field conditions: [JewelleryProductCondition]? by product
  func child = conditions
  field photos: [Image]?
  field status: ProductStatus = Entered
  func trackItems = null
  
  compute productCost: ProductCost? {
    availableFor = All
    value = childProductCost
  }
  view form = nav{grid(width = 1.2, margin = TopBottom, labels = Top) {
      photos >> field(height = 8, label = "")
      status >> field(label = "", compact)
      name >> field(label = "", fontStyle = H1)
      sku
      row {metalType >> field(width = 0.4) productForm >> field(width = 0.8)}
      row {size >> field(canEditUnit = true) totalWeight totalWeightOz}
      row{width height depth}
      edit{puritySelection}
      row {purity pureWeight pureWeightOz}
      manufacturer
      productCost
      baseMainView
      description
      conditions
    }
  }
  
  view traitItem = grid(labels = None) {
    x{h3("Jewellery:") title}
  }
  ref compute title: String = {
    "$(if (let n = name) n + " " else "")$sku $productForm $metalType $purity $pureWeight $manufacturer"
  }
  object func attrs = [JewelleryCondition]
}

entity JewelleryCondition extends ProductAttrTerm {
  object func attrName: String = "Condition"
  field title: String
  system field products: [JewelleryProductCondition]? by condition
}
 
entity JewelleryProductCondition extends IComplexProduct with JewelleryProduct {
  func photos = superProduct.photos
  func isTangible = true
  ref field product: QuantityJewelleryProduct by conditions
  ref field condition: JewelleryCondition by products
  func getParent: IBaseProduct = product
  func superProduct: ISuperProduct = product
  func title = "$product $condition"
  func subTitle(superTitle: String): String = "$superTitle $condition"
  func attrTerms = [condition]
  
  view form = nav{grid(width = 1.2, margin = TopBottom, labels = Top) {
      product >> field(fontStyle = H1, label = "")
      status >> field(label = "", compact)
      condition >> field(label = "")
      sku
      target 
      resaleMultiplier
      productCost
      baseMainView
    }
    productNavView
  }
  view traitItem = grid(labels = None) {
    x{h3("Jewellery:") product condition}
  }
}

