extend trait ISuperProduct {
  list compute salesPrice: Money? <- {
    if (let a = Actor.our, let p = a.superProductPrice(this)) p.salesPrice(Currency.our) else Future.apply(0)
  }
  all compute prices: [VendorPrice]? = PriceModel.all
    .groupBy(vendor).agg(priceModel = sortBy(priority, date.desc).find(contains(this)))
    .filter(priceModel)
    .map{i => 
      VendorPrice(vendor = i.vendor, model = i.priceModel!, price = i.priceModel!.superProductPrice(this)!)
    }
  view pricesView = prices >> list{grid(labels = None){
    row {vendor model}
    price >> field(frame = false)
  }}
}

class VendorPrice {
  field vendor: Actor
  field model: PriceModel
  field price: IPrice
}