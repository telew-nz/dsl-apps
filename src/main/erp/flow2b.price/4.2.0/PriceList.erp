entity PriceList extends PriceModel {
  func title = "PL $vendor $date"
  ref field date: Date[day] = now
  field pricesIncludingGst: Bool = (try? vendor.pricesIncludingGst).alt(true)
  
  field products: [ProductPrice]? inline by priceList 
  back func contains(superProduct: ISuperProduct): Bool = products.exists(product == superProduct)
  back func superProductPrice(superProduct: ISuperProduct): IPrice? = {
    products.find(product == superProduct)
  }
  view form = nav{grid{
    date
    vendor
    pricesIncludingGst
    products >> table {
      product >> field(width = 0.7) price >> field(width = 0.3)
    }
  }}
} 
  
inline entity ProductPrice extends IPrice {
  func superProduct = product
  func currency = priceList.vendor.getCurrency
  system field priceList: PriceList inline by products
  field product: ISuperProduct
  field price: Money[currency]?
  compute gstRate: Percent[2]? = product.forceGstRate(priceList.vendor).alt(0)
    
  event onSave = product.touch
  func salesPrice(currency: Currency, inclGst: Bool): Future[Money?] = {
    convertGst(gstRate, price, priceList.pricesIncludingGst, inclGst).to[Money[currency]](now)
  }
  view form = price
}

