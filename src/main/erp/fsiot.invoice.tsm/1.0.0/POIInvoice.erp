extend entity POIInvoice {
  field tsmState: TSMState {
    default = Entered
    views = []
    from = (tsmState + if (tsmState in [AlertSent, Cancelled]) [TSMState.Approved, TSMState.Cancelled]).toSet
  }
  
  extend view stateView = tsmState >> field(editMode = AlwaysEdit)
  
  func tsmBase: String = "$formUrl,$number,$(s(invoiceNumber)),$(d(invoiceDate)),$(d(dueDate)),$(s(vendorNumber)),$rowsWithGst,$(n(totalNoGst)),$(n(gst)),$(n(totalWithGst))"
  func tsm: String = tsmBase
  func tmsHeader: String = {
    '"$tsm"'
  }
  func tsmItems: PlainText = {
    items*.toTsm.join(" + chr(13);\n").alt('""')
  }
  func s(str: String?): String? = {
    str.replace(",", " ").replace("\"", " ").replace("\n", " ").replace("  ", " ").trim
  }
  func n(num: Num?): String? = num.noUnit.unformattedString
  func d(date: Date?): String? = date
  
  func script(s: PlainText): PlainText = {
    s
      .replace("\$invoiceData", tmsHeader)
      .replace("\$invoiceItems", tsmItems)!
  }
  
  impl func activeRoles = {
    if (tsmState == AlertSent) [BusAdmin, InvoiceAgent]
    else if (tsmState !in [Sent, Cancelled]) [BusAdmin]
  }
  func invoiceAgent: User? = null
  
  impl func splitPerUser(role: String) = role == "fsiot.invoice.tsm.InvoiceAgent"
  impl event onSave = {
    if (tsmState == AlertSent) {
      invoiceAgent?.join(this)?.notify()
    }
  }
}

extend entity POIInvoiceItem {
  func tsmBase: String = "$(s(code)),$(s(desc)),$(n(qty)),$(n(amount)),$(if (let gstRate) n(gstRate))"
  func tsm: String = tsmBase
  func toTsm: String = '"$tsm"'
  
  func s(str: String?): String? = invoice.s(str)
  func n(num: Num?): String? = invoice.n(num)
}