back object MsgProcIncident extends MsgProcActivity {
  impl func priority = 1.0
  impl func canProc(msg: ExtMsg) = true
  override func item(msg: ExtMsg, from: Contact?, recipients: [Contact], refs: [Entity]?): Entity? = {
    if (let r = refs.onlyOne) return {
      if (let i = r.as[Incident] where !i.status.active || i.status == Implemented) {
        i.status = Failed
        i.save
      } else {
        r 
      }
    }

    let companies = if (let a = from?.as[ActorContact]?.addressee) {
      if (let c = a.as[Company]) [c]
      else if (let c = a.as[CompanyPerson]) [c.company]
      else if (let p = a.as[Person]) p.companies*.company + p
    }
    if (let pp = companies*.project.onlyOne where pp.actor.as[LegalEntity]?.customer) {
      let isUrgent = msg.richText.flex.contains("urgent") || msg.plainText.flex.contains("urgent")
      Incident(
        product = pp
        subject = msg.subject
        urls = msg.flow2b?.url.toSeq
        urgency = if (isUrgent) Urgent else Usual
        urgencyReason = if (isUrgent) "Customer request"
      )
    }
  }  
}