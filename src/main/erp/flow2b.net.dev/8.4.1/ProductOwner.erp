role ProductOwner {
  entity Bug = readWrite
  entity UserStory = readWrite
  entity Feature = readWrite  
  entity Milestone = readWrite
  entity UniversalApp = readWrite  
  entity PersonalProject = readWrite 
  entity Roadmap = readWrite
  entity Backlog = readWrite
  entity Article = readWrite
  menu Development {
    entity Issue
    entity Article
  }
  
  view dashboard = group {
    Issue.all.filter(status.po && Person.current!.ownedBacklogs.contains(backlog)).sortBy(sort.desc, number) >> 
      nav(label = "Entered Issues", background = "#545790", width = 1.5, limit = 5, more = Issue.Report(po = Person.current, status = [IssueStatus.Entered]).list.open) {
        list {}
        button("Products") {DevProduct.list.open}
        button("Roles") {ProductRole.list.open}
        button("Docs") {DocPackage.list.open}
      }
    Issue.all.filter(status.backlog && Person.current!.ownedBacklogs.contains(backlog)).sortBy(sort.desc, number) >> 
      nav(label = "Backlog", background = "#545790", width = 1.5, limit = 5, more = Issue.Report(po = Person.current).list.open) {
        list {}
        button("Backlogs") {Backlog.list.open}
        button("Roadmaps") {Roadmap.list.open}
      }
  }
}

extend entity Person {
  field ownedBacklogs: [Backlog]? {
    views = []
    visible = is(ProductOwner)
  }
  extend view form = extend("access") {
    ownedBacklogs
    developingBacklogs
  }
  field developingBacklogs: [Backlog]? {
    views = []
    visible = is(Developer)
  }
}