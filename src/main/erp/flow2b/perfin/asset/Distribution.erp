entity Distribution extends Transaction {
  func title: String = number + " " + date.as[Date[day]]!.toString

  func transCategory: ICategory? = null
  func transStdCategory: StdCategory = Distribution
  func transFrom: Account? = asset
  func transTo: Account? = toAccount
  func transIncome: Money? = amount
  list compute transIncomeBalance: Money[toAccount.currency]? = finance.balance
    
  compute number = "D" + n
  
  field toAccount: Account {
    from = Account.all.sortBy(lastTransactionDate.alt(Date.min).desc)
  }
  field asset: Asset {
    from = Asset.all.sortBy(_.title)
  }
  field amount: Money[toAccount.currency] 
    
  view form = nav{grid{
    number
    date
    asset
    toAccount
    amount
  }}
  register finance = FinanceRegister(account = toAccount, date = date, category = asset, stdCategory = Distribution, accAmount = amount, opCurrency = toAccount.currency, opAmount = amount)
 
}

extend enum StdCategory {
  case Distribution(ord = 130, correction = false) {
    background = "#dea"
  }
  case CapitalGain(ord = 330, correction = true) {
    background = "#ed9"
  }
}