report IncomeExpense {
  plural = "Income and Expenses"
  field type: [StdCategory]?
  field from: Date = (Date.now[Date[day]] - 1_month).start(month)
  field to: Date = (Date.now[Date[day]].start(month) - 1_minute).end(month)
  view list = AccReg.all.filter(a => a.start <= to && a.end >= from)
    .filter(stdCategory != Init)
    .groupBy(stdCategory = reportStdCategory(from, to), category)
    .agg(amount = baseAmount(Period(start = from, end = to)).sum)
    .map(stdCategory, category, amount)
    .filter(
      (!type || type.contains(stdCategory))
    )
    .sortBy(stdCategory.ord, amount.abs.desc)
    .groupBy(stdCategory).subtotal(amount.sum)
    .total(amount.sum)
    >> 
  nav{
    total {
      row{space amount >> field(showPlus = true)}
      subtotal {
        row{stdCategory amount >> field(showPlus = true)}
        table(action = Transaction.Report(from = from, to = to, type = [stdCategory], category = category).list.open) {
          category >> field(width = 0.5) 
          amount >> field(width = 0.25 showPlus = true) 
        }
      }
    }
  }
}