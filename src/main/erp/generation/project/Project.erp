entity Project extends ActionItem {
  field state: ProjectState = Quote
  field owner: Person? = Person.current
  func active = state != Complete && state != Canceled
  ref field baseProject: BaseProject
  ref field client: Actor?
  compute total = baseProject.price + variations*.price.sum
  field variations: [ProjectVariation]? inline by project
  func title = baseProject.title + " " + client
}

inline entity ProjectVariation {
  field project: Project
  field variation: Variation {
    width = 0.66
    update = {
      amount = new.price*quantity
    }
  }
  compute price: Dec[2] = (amount/quantity) {
    update = {
      amount = quantity*new
    }
    width = 0.15
  }
  field quantity: Int = (1) {label = "Qty" width = 0.08
    update = {
      amount = amount/old!*new
    }
  }
  field amount: Dec[2] {width = 0.15}
}

enum ProjectState {
  case Quote
  case Agreement
  case Scheduled
  case InProgress
  case Complete

  case Canceled  
}