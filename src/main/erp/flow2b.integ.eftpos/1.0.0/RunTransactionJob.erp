class EftposRunTransactionJob extends SystemJob {
  impl field service: EftposIntegration
  field amount: Money 
  
  impl func do = {
    guard(service.paired) else return {}
    
    let refID = String.randomKey(16)
    
    // TODO: Uncomment for testing on real terminal
    let r <- {
      service.apiHttps("runTransaction")
      .param("command", "sale")
      .param("amount", amount)
      .param("refID", refID)
      .get
    }
    
    let tRes = r.body!.parseJson[EftposTransactionResult]
	/**/
    
    /*
    let tRes = EftposTransactionResult(
    	resultCode = "Connection Timeout"
    )/**/
    
    if (tRes.resultCode == "Connection Timeout") {
      Activity.comment("RunTransaction timeout. Will check status in 5 seconds.")
      EftposCheckStatusJob(
        service = this.service
        refID = refID
        date = Date.now.format("MMddyyyy")
      ).enqueue(5_second)
    } else {
      Activity.comment("Transaction result: ${tRes.json}")
      // TODO: do something useful
    }
  }
}


class EftposTransactionResult {
  extFieldNaming = UpperCamelCase
  
  field terminalID: Int?
  field refID: String?
  field resultCode: String?
  
}