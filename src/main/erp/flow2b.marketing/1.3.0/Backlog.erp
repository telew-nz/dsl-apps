entity MarketingBacklog {
  background = "#a73e6c"
  
  impl field title: String
  system field marketingIssues: [MarketingIssue]? read by backlog {views = []}
  
  compute backlog: [MarketingIssue]? {
    value = marketingIssues.filter(status.backlog)
    update = {
      marketingIssues = marketingIssues.filter(!_.status.backlog) + new
    }
    init = {
      new.backlog = _
    }
  }
  list compute size: Int? = backlog.count
  view backlogView = backlog >> list(editMode = AlwaysRefRead, frame = true) {
    x(flow = false) {
      traitItem >> field(stretch = 1)
      y {
      	button("↑") {
          backlog.marketingIssues = _ + backlog.marketingIssues.filter(i => i != _)
          backlog.save
        }
        button("↓") {
          backlog.marketingIssues = backlog.marketingIssues.filter(i => i != _) + _
          backlog.save
        }
      }
    }
  }  
  
  impl view form = nav{
    grid(labels = None){
      row{title >> field(fontSize = 1.2)  size + " issues" >> field(align = Right, fontSize = 1.2)}
      backlogView
    }
  }
  
  impl object view list = MarketingBacklog.all >> nav{list{
    x{title size >> field(stretch = 1, align = Right)}
  }}
}