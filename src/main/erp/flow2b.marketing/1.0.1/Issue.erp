trait MarketingIssue  extends HasTasks {
  background = "#a73e6c"
  
  object field generator: Int?
  const system ref field n: Int =? increment(MarketingIssue.generator)
  
  func number: String
  compute title {
    value = number + " " + name
    update = {this.name = new}
  }
  ref field name: String {
    label = "Title" 
    validate = if (name.length >= 90) "Title should be shorter than 90 symbols"
  }
  field status: MarketingIssueStatus = if (User.current?.is(Marketer)) Approved else Entered
  field backlog: MarketingBacklog
  func active = status.active
  
  report Report {
    field activeOnly: Bool = true
    field status: [MarketingIssueStatus]? {auto}
    field customer: CustomerProfile?
    view list = MarketingIssue.all.filter(
         (!this.customer || _.as[CustomerStory]?.customer == this.customer) 
      && (!activeOnly || active)
    )
  }
}

