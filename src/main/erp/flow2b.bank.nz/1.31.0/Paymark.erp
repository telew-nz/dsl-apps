class PaymarkCsvData extends BankStatementItem {
  field merchant: String
  field period: Date {format = "yyyy-MM-dd"}
  field terminal: String
  impl field date: Date {format = "yyyy-MM-dd HH:mm:ss"}
  field pan: String
  field txn: Int
  field logo: String
  field type: String
  field purchase: Money[2]?
  field cash: Money[2]?
  field approved: Money[2]?
  field declined: Money[2]?
  field settled: String
  field financial: String
  
  impl func stmAmount: Money? = approved
  
  impl func data(account: FinAccount): BankData = {
    BankData(
      type = type,
      cardNumber = pan
    )
  }
}

extend enum BankStatementType {
  case PaymarkCsv(
    canProcess = file.is("csv") && 
      data.toString.lines(CSV).first == "merchant,period,terminal,date,pan,TXN #,logo,type,purchase,cash,approved,declined,settled,financial"
    process = {
      ProcessResult(
        directions = [Incoming]
        account = CardAccount.all.result.get.onlyOne
        items = data.toString.lines(CSV).drop(1)
          .mapOpt(splitTo[PaymarkCsvData](CSV))
          .filter(approved)
      )   
    }, 
    knowOurAccount = CardAccount.all.result.get.onlyOne
  )
}