class AnzCreditCardCsvData extends BankStatementItem {
  field card: String?
  field type: String?
  field trAmount: Dec[2]?
  impl func stmAmount: Dec[2]? = if (type == "D") -trAmount else trAmount
  field details: String?
  field transactionDate: Date {format = "dd/MM/yyyy"}
  field processedDate: Date {format = "dd/MM/yyyy"}
  impl func date = processedDate
  field foreignCurrencyAmount: String?
  field conversionCharge: String?
  impl func data(account: FinAccount): BankData = {
    BankData(type = type, memo = details)
  }
  impl func itemType = {
    if (details =%= "Interest" || details =%= "Credit Interest Paid") Interest 
    else if (details =%= "Withholding Tax") Tax 
    else Payment
  }
  impl func tax: Tax? = {
    if (details =%= "Withholding Tax") WithholdingTax
  }
}

extend enum BankStatementType {
  case AnzCreditCardCsv(
    canProcess = file.is("csv") && data.toString.lines(CSV).first == "Card,Type,Amount,Details,TransactionDate,ProcessedDate,ForeignCurrencyAmount,ConversionCharge", 
    process = ProcessResult(
       accountNumber = (file.name[ .. "_Transactions")).replace("x", "*"), 
       items = data.toString.lines(CSV).drop(1).mapOpt(splitTo[AnzCreditCardCsvData](CSV))), 
    knowOurAccount = true
  )
}