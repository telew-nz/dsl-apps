class AsbCreditCardCsvData extends BankStatementItem {
  field processedDate: Date {format = "yyyy/MM/dd"}
  field transactionDate: Date {format = "yyyy/MM/dd"}
  field uniqueId: String?
  field type: String?
  field reference: String?
  field description: String?

  field trAmount: Dec[2]?
  impl func stmAmount: Dec[2]? = -trAmount
  
  impl func itemType = {
    if (type == "DEBIT" && description == "OFFSHORE SERVICE MARGINS") BankFee
    else Payment
  }
   
  impl func date = processedDate
 
  impl func data(account: FinAccount): BankData = {
    BankData(bankId = uniqueId, type = type, memo = description)
  }
}

extend enum BankStatementType {
  case AsbCreditCardCsv(
    canProcess = file.is("csv") && data.toString.lines(CSV).drop(4).first == "Date Processed,Date of Transaction,Unique Id,Tran Type,Reference,Description,Amount", 
    process = {
      let lines = data.toString.lines(CSV)
      let num = lines(2)("Card Number " .. " ")
      ProcessResult(
        accountNumber = num[ .. 7] + "**-****-" + num[num.length - 3 .. ], 
        items = lines.drop(6).mapOpt(splitTo[AsbCreditCardCsvData](CSV)))
    },               
    knowOurAccount = true
  )
}