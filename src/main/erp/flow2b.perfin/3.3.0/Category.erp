enum StdCategory(ord: Int, correction: Bool) {
  case Income(ord = 110, correction = false) {background = "#dea"}
  case Return(ord = 120, correction = false) {background = "#dea"}
  
  case Outcome(ord = 200, correction = false) {background = "#fcc"}
  case Conversion(ord = 210, correction = false) {background = "#fcc"}

  case Init(ord = 300, correction = false) {background = "#ed9"}
  case Correction(ord = 310, correction = true) {background = "#ed9"}
  case Transfer(ord = 320, correction = false) {background = "#ed9"}
  case Exceptional(ord = 330, correction = false) {background = "#ed9"}
}

trait ICategory extends Entity
entity Category extends ICategory {
  func title = if (let g = group) g + ": " + name else name
  ref field group: CategoryGroup? by categories
  ref field name: String
  ref field income: Bool
  ref field outcome: Bool
  object view list = Category.all.sortBy(title) >> nav{list{
    x{title income outcome}
  }}
}

entity CategoryGroup {
  field title: String
  field categories: [Category]? by group
}