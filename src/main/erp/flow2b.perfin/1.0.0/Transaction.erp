trait Transaction {
  object field gen: Int?
  const ref field n: Int? = increment(Transaction.gen)
  ref field date: Date = now
    
  func transCategory: Category?
  func transCategoryName: String? = ""
  func transFrom: Account? = null
  func transTo: Account? = null
  func transOutcome: Money? = 0
  func transIncome: Money? = 0
    
  /*object view list = Transaction.all.sortBy(date.desc) >> nav{list {grid(labels = None, width = 1.2){
    row{
      date.date >> field(width = 0.15)
      categoryColumn >> field(width = 0.2)
      accountColumn >> field(width = 0.45)
      amountColumn >> field(width = 0.4)
    }
  }}}*/
  object view list = Transaction.all.sortBy(date.desc) >> nav{table{
    date.as[Date[day]] >> field(width = 0.15, label = "Date")
    y(width = 0.25, label = "Category") {
      transCategory >> field(margin = None)
      transCategoryName >> field(margin = None)
    }
    transFrom >> field(width = 0.35, label = "From")
    transTo >> field(width = 0.35, label = "To")
    -transOutcome >> field(width = 0.25, label = "Outcome")
    transIncome >> field(width = 0.25, label = "Income")
  }}
}



