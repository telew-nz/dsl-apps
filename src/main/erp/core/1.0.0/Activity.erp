inline entity Activity {
  system list field entities: [Entity] by activities
  field dateTime: Date = now
  field user: IUser = IUser.current
  field from: Contact?
  compute author: RefEntity? = if (let f = from) f.as[RefEntity].alt(user) else user
  system field data: Any = {}
  system field messageId: String?
  field channel: CommChannel?
  field comment: Text?
  compute files: [File]? {
    value = entities*.as[File]
    update = {
      this.entities = (this.entities.filter(!_.is[File]) + new)!
    }
  }
  field deliveries: [ActivityDelivery]?
  system field patches: [Entity: Patch]?

  object native current: Activity?

  func comment(text: Text?): Void = if (text) {
    this.comment = this.comment + text
  }
  back object func comment(text: Text?): Void = {
    Activity.current!.comment(text)
  }
  func setMainEntity(e: Entity): Void = {
    this.entities = e + this.entities.filter(_ != e)
  }
  back object func setMainEntity(e: Entity): Void = {
    Activity.current!.setMainEntity(e)
  }
  back object func findByMessageId(messageId: String?): Activity? = if (messageId) Activity.all.find(a => a.messageId == messageId).result.get
}

class ActivityDelivery {
  field channel: CommChannel
  field contact: Contact
  field status: ActivityDeliveryStatus = Pending
  field details: String?
}

enum ActivityDeliveryStatus {
  case Pending {background = "#ed9"}
  case Sending {background = "#8bf"}
  case Delayed {background = "#f99"}
  case Sent {background = "#dea"}
  case Failed {color = "white" background = "#c00"}
  case Read {color = "white" background = "#090"}
  case LinkClicked{color = "white" background = "#090"}
}

enum CommChannel {

}

inline entity SubjectObserver {
  field subject: Entity by observers
  field observer: Contact by subjects
  field unreadCount: Int?
  field pinned: Bool = false
  func is(role: Role): Bool = observer.as[IUser]?.roles.contains(role)

  func pin(): SubjectObserver = {
    pinned = true
    save()
  }
  func notify(): SubjectObserver = {
    unreadCount = unreadCount + 1
    save()
  }
}
