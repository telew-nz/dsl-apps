class Layout[I] {
  front native open: Void
  front native print: Void
  native unnav: Layout[I]
  native removeField(field: I => Any): Layout[I]
  native modifiedLayout(prev: () => I): Layout[I]
  native deletedLayout: Layout[I]
  native createdLayout: Layout[I]
}

object UI {
  front native info(message: Text): Void
  front native save[E extends AnyEntity](data: E): Future[NoInfer[E]]
  front native download(file: Query1[File]): Void
  front native openUrl(url: Url): Void
}

class ViewContext {
  native isSelected: Bool
  native edit: Bool
}

object Nfc {
  front native canWrite: Bool
}

class NfcMessage(records: [NfcRecord]?) {
  front native write: Void
  func record(tp: String?): NfcRecord? = records.find(is(tp))
}

class NfcRecord(tnf: Int?, recordType: Data?, recordId: Data?, payload: Data?) {
  object func url(url: Url): NfcRecord = {
    NfcRecord(tnf = 1, recordType = "U".toData, payload = url.toData)
  }
  object func androidFlow2bApp: NfcRecord = {
    NfcRecord(tnf = 4, recordType = "android.com:pkg".toData, payload = "com.flow2b".toData)
  }

  func url: Url? = {
    if (tnf == 1 && recordType.toString == "U") {
      payload.toString.as[Url]
    }
  }
  func is(tp: String?): Bool = recordType.toString == tp
}
