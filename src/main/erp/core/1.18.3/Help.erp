entity HelpTopic extends HasN {
  icon = "info"
  impl field title: String
  impl func numPrefix = if (workspaceId == Workspace.currentId) "MYTOPIC" else "TOPIC"
  impl func nextN = increment(HelpArticle.gen)
  field description: Text?
  impl func canRead = true
  field articles: [HelpArticle]? read by topic

  impl view form = nav{grid(labels = None) {
    x {title >> field(fontStyle = H3, stretch = 1) number >> field(fontStyle = Label)}
    description
    articles
  }}

  impl event onSave = {
    articles*.touch
  }
}

entity HelpArticle extends HasN {
  icon = "info-circle"
  plural = "Help"

  object field gen: Int?
  impl func numPrefix = if (workspaceId == Workspace.currentId) "MYHELP" else "HELP"
  impl func nextN = increment(HelpArticle.gen)

  override func searchStr = "$(super.searchStr) $topic"
  ref impl field title: String
  field topic: HelpTopic
  field description: Text
  impl view form = nav{grid(labels = None) {
    x {title >> field(fontStyle = H3, stretch = 1) number >> field(fontStyle = Label)}
    x {topic >> field (title = title, stretch = 1) topic.number >> field(fontStyle = Label)}
    description
  }}
  impl func canRead = true
  report Report {
    generateFilters = false
    impl view list = HelpArticle.all.union(HelpArticle.all.inWorkspace(1260)).distinct
      .groupBy(topic = topic.title, number = topic.number)
    >> nav{
      subtotal {
        x (margin = LeftRight) {
          topic >> field(fontStyle = Bold)
        }
        list {
          grid(labels = None) {
            x {
              title >> field(margin = LeftRight, stretch = 1) number >> field(fontStyle = Label)
            }
          }
        }
      }
      add("Article") {
        HelpArticle.incomplete().form.open
      }
    }
  }
}

trait ISupportUnitReg extends AnyEntity {
  plural = "Support Units Usage"
  func actor: Actor
  func date: Date
  func doc: RefEntity
  func refUrl: Url?
  func delta: Int?
  func balance: Int?
  func comment: Text?
  func isCross = actor.actorWorkspaceId == Workspace.crossId

  report Report {
    generateFilters = false
    field changesOnly = false
    impl view list = ISupportUnitReg.all.inWorkspace(1)
      .filter(i => i.isCross && (!changesOnly || i.delta))
      .sortBy(date.desc)
      .map(date, doc = doc?.title, refUrl, delta, balance, comment) >> nav (canAdd = false) {
        table (action = if (let refUrl) UI.openUrl(refUrl)) {
          balance >> field(width = 0.1) delta >> field(showPlus, width = 0.1, label = "Change")
          y(label = "Document", width = 0.6, fontSize = 0.8){
            doc
            comment
          } date >> field (fontSize = 0.7 , width = 0.23)
        }
        label(Workspace.current.supportUnits + " Units", color = "white")
        button("About units", icon = "info-circle") {
          UI.openUrl("https://flow2b.com/pricing/")
        }
      }
  }
}