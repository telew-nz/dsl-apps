entity Person extends LegalEntity {
  icon = "user"
  ref field our: OurPerson? inline by person
  field photos: [Image]?
  field gender: Gender?

  field user: User? inline by person

  ref field name: String {label = "Full Name"}
  field companies: [CompanyPerson]? inline by person
  field birthdate: UtcDate[day]?

  func addresseePerson: Person? = this
  func collectContacts: [ActorContact]? = contacts + companies*.contacts + people*.contacts

  func firstName = name[ .. " ")
  func lastName = name(" " .. ]

  plural = "People"

  object native current: Person?

  compute title: String {
    value = name
    update = {name = new}
  }
  compute companyPerson: CompanyPerson {
    value = companies.onlyOne!
    update = {}
    visible = companies.onlyOne
  }
  compute company: Actor? {
    value = companies.onlyOne?.company
    update = {
      if (let new) {
        if (let c = companies.first) {
          c.company = new
        } else {
          CompanyPerson(person = this, company = new)
        }
      } else {
        if (let c = companies.first) {
          c.delete
        }
      }
    }
    visible = companies.count < 2
  }
  func systemContact: Contact? = user

  view form = nav{
    tabs {
      grid(labels = Top, label = "Main"){
        photos >> field(label = "",height = 10)
        name >> field(label = "", placeholder = "Full Name", fontStyle = H1)
        gender
        birthdate
        company
        companyPerson.shortForm >> field(label = "")
        companies >> field(visible = companies.count > 1)
        contacts >> field(frame = false, label = "Personal Contacts", margin = None)
        people >> list(label = "Related People", separateEdit)
        extension("main")
      }
      grid(labels = None, label = "User") {
        add ("User", visible = !user) {
          user = User()
        }
        user!.form.unnav.removeField(person)
      }
      our!.form
      extension("tabs")
      grid(labels = Top, label = "Other") {
        companies
        group
        currency
        extension
      }
    }
    extension("buttons")
  }

  report Report {
    view list = Person.all >> nav{list{grid(labels = None){
      name
    }}}
  }

  view shortForm = grid(labels = None){
    name
    contacts >> field(frame = false)
  }

  view companyForm = title

  func isCurrent: Bool = user?.isCurrent
  func isTheir = isCurrent || group?.isTheir
}

entity OurPerson extends OurLegalEntity {
  field person: Person inline by our
  func mainEntity = person
  func legalEntity = person
  view form = grid(labels = Top, label = "Our Legal Person") {
  }
  view traitItem = y{
    h3("Person")
    person.title
  }
}
