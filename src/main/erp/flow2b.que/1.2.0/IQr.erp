trait IQr extends AnyEntity {
  object field gen: Int?
  
  func queNumPrefix = ""
  func version: QrVersion
  func fontStyle: FontStyle = version.fontStyle
  func versionUpdated: Bool = false
  ref field state: QrState {
    default = Entered
    from = [state, Canceled]
  }
  func qrParams: [(String, String?)]? = []
  
  system field responses: [IQueRsp]? inline by qr
  
  impl event onSave = {
    if ((state == Entered && !responses) || versionUpdated) {
      genResponses()
    } else if (state !in [Submitted, Canceled]) {
      state = {
        if (responses.all(!isVisible || responded)) Complete
        else if (responses.exists(isVisible && inProgress)) InProgress
        else Entered
      }
    }
  }
  back func genResponses(): Void = {
    responses = []
    responses = version*.questions*.makeRsp(this)
  }
}
enum QrState {
  case Entered {background = "#ed9" icon = "play"}
  case InProgress {background = "#8bf" icon = "spinner"}
  case Complete {background = "#dea" icon = "check"}
  case Submitted {color = "white" background = "#090" icon = "check-cicle"}
  case Canceled {background = "#999" icon = "times-circle"}
}
