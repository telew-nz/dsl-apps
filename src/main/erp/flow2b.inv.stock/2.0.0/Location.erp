trait Location {
  ref field actor: Actor by locations
  func address: Address?
  func mutual: Bool = false
  object func ours: [Location]? = Actor.our?.locations
  object func forceOur: Location = our.alt(throw "Please enter a store for your company")
  object func our: Location? = ours.first
}

entity GeneralLocation extends Location {
  singular = "Location"
  ref field nickName: String?
  ref field address: Address?
  func title = if (let n = nickName) "$n: $address" else address!
}

entity PickUpPoint extends Location {
  ref field nickName: String?
  ref field address: Address?
  func title = if (let n = nickName) "$n: $address" else address!
  func mutual: Bool = true
}

extend entity Actor {
  ref field locations: [Location]? inline by actor
  func stores: [Store]? = locations*.as[Store]
}

extend entity Person {
  extend view form = locations
}

extend entity Company {
  extend view form = locations
}

extend entity CompanyGroup {
  extend view form = locations
}

