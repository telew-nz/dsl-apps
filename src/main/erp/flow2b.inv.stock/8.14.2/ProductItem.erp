extend trait IProductItem {
  compute current: ProdItemReg? {
    views = []
    value = ProdItemReg.current.find(item == this)
    availableFor = All
  }
  
  back func avPeriods(sel: ProdRegSel, priorityDate: Date?, exclRegs: [Id?]?): [Period]? = {
     ProdItemReg.at((1, Date.min))
      .find(r => r.item == this)
      .flatMap(r => r.avPeriods(sel, priorityDate, exclRegs, null))
      .result.get
  }
}
extend entity ProductItem {
  extend view form = extend("nav") {
    button("Movements") { 
      ProdItemMovement(productItem = this).list.open
	}
  }
   
  extend view form = current!.stateView
}