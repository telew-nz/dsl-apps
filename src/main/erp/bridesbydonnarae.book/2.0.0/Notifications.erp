object BridalAppMailConf extends NotifyTemplate[SalesOpportunity] {
  impl func title = "Bridal Appointment EMail Confirmation"
  impl func supported = [EMail]
  impl func to(data: SalesOpportunity) = [data.customer.legalEntity]
  impl func subject(data: SalesOpportunity, channel: CommChannel) = "You’re All Booked"
  impl func text(data: SalesOpportunity, channel: CommChannel) = {
    let t: PlainText = 
"Hi $(data.customer.legalEntity.as[Person]!.firstName)

We wish to confirm your appointment for a Bridal Consultation on $(data.bridalAppointment!.period.start).

We are so excited you have chosen us to help you search for your wedding dress.

We are going to have so much fun!!

We hope you don’t mind helping us get to know you better by answering a few questions:
@LNK@

Thanks so much for taking the time to share this information with us.

We can’t wait to meet you and your family/friends on $(data.bridalAppointment!.period.start).

Warmest Regards
Donna & Kay

$(Store.onlyOne!.title)
$(Store.onlyOne!.locationAddress)"
    let rt: Text = t
    rt.replace("@LNK@", "<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSdQjdVNauoYZ3mSTMz_mpu7xAEAEzc4k1yV5AA8I5-9rWP0lA/viewform?entry.1181232807&entry.2001354192&entry.1690946185&entry.452387223&entry.1193151619&entry.719096623&entry.1846978510&entry.207945398&entry.1087294939&entry.565830784&entry.1723506302&entry.247341090&entry.1643286128&entry.867132263&entry.2001931367&entry.2098656909&entry.1891490287\">CLICK FOR QUESTIONNAIRE</a>")
  }
}

object BridalAppSmsConf extends NotifyTemplate[BridalAppointment] {
  impl func title = "Bridal Appointment SMS Confirmation"
  impl func preferred = [SMS]
  impl func to(data: BridalAppointment) = [data.person]
  impl func text(data: BridalAppointment, channel: CommChannel) = {
"Hi $(data.person.firstName), confirming your appointment on $(data.period.start). We look forward to seeing you then. Donna & Kay BRIDES BY DONNA RAE"
  }
}

object BridalAppSms7DaysReminder extends NotifyTemplate[BridalAppointment] {
  impl func title = "Bridal Appointment SMS Confirmation"
  impl func preferred = [SMS]
  impl func to(data: BridalAppointment) = [data.person]
  impl func text(data: BridalAppointment, channel: CommChannel) = {
"Hi $(data.person.firstName). Your $(data.type.toString.lower) appointment is nearly here! We look forward to seeing you on $(data.period.start). Donna and Kay - BRIDES BY DONNA RAE"
  }
}

extend entity SalesOpportunity {
  impl event onSave = {
    if (updated(bridalAppointment) && bridalAppointment) {
      BridalAppMailConf.send(this)
    }
  }
}

extend entity BridalAppointment {
  impl event onSave = {
    if (created) {
      BridalAppSmsConf.send(this)
    }
  }
  
  //system field appt7days: BridalAppt7Days inline by appt = BridalAppt7Days()
}

trigger BridalAppt7Days[BridalAppointment](on = period.start - 7_day, do = BridalAppSms7DaysReminder.send(_))
  
/*
inline entity BridalAppt7Days extends DeferredJob {
  field appt: BridalAppointment
  impl func service = NotificationService
  impl func jobDate = {
    let d = appt.period.start - 7_day
    if (d > Date.now) d
  }
  impl func do = {
    BridalAppSms7DaysReminder.send(appt)
  }
}
*/