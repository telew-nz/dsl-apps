entity BridalAppointment extends Event with EventParticipant {
  ref field opportunity: SalesOpportunity by appointments
  impl field period: Period
  field type: ApptType
  field state: ApptState = Planned
  compute person: Person = opportunity.customer.legalEntity.as[Person]!
  field salesperson: Person {
    from = Person.all.filter(user?.is(Salesperson))
  }
  impl func event = this
  impl func participant = salesperson
  impl func numPrefix = "BAP"
  impl func title = "$fullNum $opportunity"
  impl func active = state.active
  
  impl view form = nav{grid{
    x {type state opportunity >> field(stretch = 1 fontStyle = H2) number >> field(fontStyle = Label) } 
    period
    salesperson
  }}
  impl view ref = x {type state title}
}

enum ApptType(nm: String) {
  case Bridal {
    icon = "book"
    background = "#8bf"
  }
  case Fitting {
    icon = "book-reader"
    background = "#dea"
  }
}

enum ApptState(active: Bool) {
  case Planned(active = true) {
    background = "#ed9"
    icon = "play"
  }
  case Complete(active = false) {
    color = "white"
    background = "#090"
    icon = "check-circle"
  }
  case Cancelled(active = false) {
    background = "#999"
    icon = "times-circle"
  }
}
