trait ITrademeIntegration extends SystemService with OAuth {
  field title: String
  func roles: [Role]? = [Admin]
  func authParams = [("scope", "MyTradeMeRead,MyTradeMeWrite")].toMap
  
  func apiUrl: Url
  func http(path: String): HttpRequest = HttpRequest(url = "$apiUrl$path")
  func https(path: String): HttpRequest = HttpRequest(url = "$apiUrl$path", ssl = true).oauth(this)
  
  field templates: [TrademeTemplate]? read by integration
  system field retrieveSoldItemsJob: RetrieveSoldItemsJob inline by service
  ref field legalEntity: LegalEntity =? (LegalEntity.ours.onlyOne) {
    available(Ref).with(priceModels)
    from = LegalEntity.ours
  }
  view form = nav{grid{
    title
    legalEntity
    serviceState
      
    authorizeView
    button("Update Categories") {
      UpdateCategoriesJob(service = this).run()
      UI.info("Job is posted")
    }
    button("Retrieve Latest Sales") {
      retrieveSoldItemsJob.run()
      UI.info("Job is posted")
    }
    templates
  }}
}

entity TrademeIntegration extends ITrademeIntegration {
  func authTmpTokenUrl: Url = "https://secure.trademe.co.nz/Oauth/RequestToken"
  func authAuthorizeUrl: Url = "https://secure.trademe.co.nz/Oauth/Authorize"
  func authTokenExchangeUrl: Url = "https://secure.trademe.co.nz/Oauth/AccessToken"
    
  func authConsumerKey: String = "A4FA0ACAFE93D0DD7AF5BA7D04D5395F"
  func authConsumerSecret: String = "F8E7FC4A2164F73BBAEB4435A26B5522"
    
  func apiUrl = "api.trademe.co.nz/v1/"
}
