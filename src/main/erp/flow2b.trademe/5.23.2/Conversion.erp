back object Conversion extends IConversion {
  func convert(version: [Int?]): Future[Any] = {
    if (version < [5,18,0]) {
      renameField(TrademeTemplate, name, "title")
      SalesItem.all.filter(!gstRate && order.salesChannel?.is[TrademeTemplate])
        .update(gstRate = defaultGstRate)
      renameField(ISubProduct, _trademeTemplates, "flow2b.trademe.trademeTemplates")
      renameField(ISubProduct, _trademeTitle, "flow2b.trademe.trademeTitle")
      renameField(ISubProduct, _trademeDescription, "flow2b.trademe.trademeDescription")
      renameField(ISubProduct, _trademeCategories, "flow2b.trademe.trademeCategories")
      renameField(ISubProduct, _trademePhotos, "flow2b.trademe.trademePhotos")
      
      renameField(ProductCategory, _trademeTemplates, "flow2b.trademe.trademeTemplates")
      renameField(ProductCategory, _trademeCategories, "flow2b.trademe.trademeCategories")
    } 
    if (version < [5,20,0]) {
      ITrademeIntegration.all.update(retrieveQuestionsJob = RetrieveQuestionsJob())
    }
    if (version < [5,21,0]) {
      ITrademeIntegration.all.foreach{ti =>
        ti.finAccount = TrademeFinAccount()
        ti.default(trademe)
        ti.save
      }
    }
    if (version < [5,22,0]) {
      ITrademeIntegration.all.update(pingAccount = PingAccount(), payNowAccount = PayNowAccount())
    }
  } 
} 
 