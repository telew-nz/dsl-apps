entity Property extends Todo {
  list compute category = (categoryHistory.last.category)
  field categoryHistory: [CategoryHistory] inline = [CategoryHistory(category = Open)] {singular = "Category change"}
  list compute openDate = (categoryHistory.first.date) 
  ref field name: String {width = 0.25}
  ref field address: String {width = 0.35}
  field phone: Phone? 
  field email: Email?
  field owner : Person?
  list compute notes = (activities.filter(comment.nonEmpty).map(comment)) {
    views = [list]
  }
  list field agents: [Agent]? by properties {views = [form, list] width = 0.7}
  field heardAboutUs: Text? {label = "How did they hear about us"}
  field agentsAlready: Text? {label = "Agents already approached"}
  field check: Check? inline
  field invoice: Invoice? inline
  func active = category.active
  func title = name + ": " + address
  view form = nav { grid {
    row{openDate >> field(width = 0.3) category >> field(width = 0.7)}
    categoryHistory >> table {
      date, category// >> field(editMode = if (id.isEmpty) Inherit else AlwaysRead)
    }
    name 
    address
    phone 
    email
    owner
    agents
    heardAboutUs
    agentsAlready
    check
    invoice
  }}
  object view list2 = Property.all >> nav{list{grid{
    row{openDate category}
    row{name address}
    row{phone email}
    owner
    agents
    notes
    heardAboutUs
    agentsAlready
    check
    invoice
  }}}
}

inline entity CategoryHistory {
  field date: Date = (now) {width = 0.3}
  field category: Category {width = 0.7}
}

enum Category(active: Bool) {
  case Open(active = true) {background = "#9F9" color = "#090"}
  case ForSale(active = true) {background = "magenta" color = "purple"}
  case Sold(active = false) {background = "#99F" color = "#009"}
  case Settled(active = false) {background = "grey"}
  case OtherAgents(active = true) {background = "#55F"}
  case Dead(active = false) {color = "#900"}
  case Monthly(active = true) {background = "yellow"}
  case NoooLeads(active = true)
  case Ring(active = true) {background = "orange"}
}


inline entity Check {
  field date: Date = now
  field person: Person from Person.all.filter(user.nonEmpty)
  view form = grid{row{date person}}
}

inline entity Invoice {
  field invoiceAmount: Dec[2] {label = "Invoiced amount GST incl. $"}
  field invoiceIssueDate: Date = (now) {label = "Invoice issue date"}
  field settlementDate: Date? {label = "Settlement date"}
  field moneyReceivedDate: Date? {label = "Money received date"}
  field moneyReceivedTotal: Dec[2]? {label = "Money received total $"}
  view form = grid {
    row{invoiceAmount invoiceIssueDate settlementDate}
    row{moneyReceivedTotal moneyReceivedDate space}
  }
}

  