/*class ArcOrderImport extends SheetImportSchema {
  field order: PurchaseOrder
  field delivery1: PurchaseDelivery
  field delivery2: PurchaseDelivery
  field dinnerWare: ProductCategory
  field brand: Brand 
  back func process(file: File, data: [String?]?) = {
    data.drop(1).foreach {line =>
      let d = line!.splitTo[[String?]?](",", CSV)
      let set = d("M").trim == "SET"
      let good = Good(
        title = d[String]("I").lower.capitalize!, refNum = d("A"), 
        categories = [dinnerWare], brands = [brand],
        unit = Item
      ).save
      let u = if (!set) {
        ProductAltUnit(
          product = good,
          unit = if (d("L")) Outer else Inner, unitK = 1, baseK = d("N").toNumber!
        ).as[TWeightSize]!
      } else {
        good
      }
      u.width = n(d("P"))
      u.height = n(d("Q"))
      u.depth = n(d("O"))
      u.weight = n(d("S"))
      u.weightUnit = Kilogram
      
      if (!set) {
        Barcode(item = good, unit = good.altUnits.first!.unit, number = d("T").dropPrefix("'").dropSuffix("'")!)
      }
      Barcode(item = good, unit = Item, number = d("W")!)
      
      let realQty = n(d("G"))
      let backQty = n(d("H"))
      PurchaseItem(
        order = order,
        deliveryItem = DeliveryItem(delivery = if (realQty) delivery1 else delivery2, product = good, unit = Item, qty = realQty.alt(backQty!))
        amountNoGst = n(d("E")), gstRate = 0.15
      ).save
    }
  }
  func n(s: String?): Number? = {
    s.replace(",", ".").toNumber
  }
}*/