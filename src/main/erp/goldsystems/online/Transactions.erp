



entity OnlineOrder extends Sales {
  field number : Int
  //  field button "send order update"
  field orderStatus : OrderStatus
  field billing : Actor
  field shippingPerson : Person?
  field items : [BullionTransactionItem] inline by sale
  field processingLocation : Location
  field orderDate : Date
  field promisedDelivery : Date
  field estimatedDelivery : Date   // make it compute from purchase 
  field discountCoupon : String
  field shippingMethod : String
  field currency : Currency
  field paymentStatus : PaymentStatus
//  compute report total troy ounces , total kg
 // field source : MarketingCentre
 
  //  compute totalPrice = BullionTransactionItem*.soldAmount.total.sum
  func title: String = number
}

enum OrderStatus {
  case Quote
  case Pending
  case Hold
  case ReadyForDispatch
  case SentForDispatch
  case PartialDispatch
  case Dispatched
  case Deliverd
  case Canceled
}
    
enum PaymentStatus {
  case Queued
  case Hold
  case Accepted
  case Declined
  case Refunded
}

entity SupplierPurchase extends Purchases {
  field number : Int //make it a function later, try not to show it anywhere`
  field supplierNumber : String
   // button collectItems // place order// send box paperwork
  field status : PurchaseStatus
  field estimatedDeliveryDate: Date
  field accountingStatus : AccountingStatus
  field processingLocation : Location
  field supplier : Company
  field currency : Currency
  field items : [BullionTransactionItem]
  field supplierNotes : String
  field shippingAmount : Int
  field trackingNumber : String
  field trackingStatus : TrackingStatus
  field plannedPaymentDate : Date
//  field spotPrice : 
  field combinedPurchase : SupplierPurchase by combinedPurchase //iporve this to handle 3 or more
 // compute totalPrice = transctionItems*.purchaseItemTotal.sum
  func title: String = number
}

enum AccountingStatus {
  case Draft
  case Revised
  case Paid
}

enum TrackingStatus {
  case Shipped
  case InTransit
  case WithDriver
  case Exception
  case Delivered
}

enum PurchaseStatus {
  case PendingConfirmation
  case ToBeOrdered
  case Ordered
  case PleaseHold
  case ShipNow
  case Shipped
  case ClearedCustoms
  case Received
  case Canceled 
}