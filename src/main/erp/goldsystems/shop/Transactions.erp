entity Transaction { //Lock this after market movement/ time/ status, if requoting create a full copy for records and reporting
  field number : Int
  field customer : Person
  field billTo : Bool
  field billing : Actor {visible = billTo == true}
  field date : Date
  field paymentType : PaymentType                    
  field status : Status
  field buy : [PurchaseItem] inline by transaction
  field sell : [SaleItem] inline by transaction
  field serviceAllocate : [ServiceItem] inline by transaction
  field networkAllocation : [NetworkAllocation] inline by transaction 
 /*  field liquidationAllocation
 Compute Average Bonus, maybe allow manual average to be applied
 Resale multiplier (average), as above, maybe allow manual average to be applied
Total EGP vs Liquidation EGP
Total ESP vs ELP 
Pure Grams, Metal Value
Total Adjusted Weight
/   compute Price allow manual entry
   compute spot = "Gold 1800, Silver 30" // default show gold and silver, if others added in items, then add /TODO = Spot. Find Current
  
 *///  compute location = person.location from person.current 
   
  func title = number + " " + customer
}

enum Status{
  case InProgress
  case Quoted
  case Accepted
  case Declined
  case Processed
  case Audited
}

enum PaymentType{
  case Cash
  case BankTransfer 
  case CreditCard // valid only for recieving payment ,  cutomer paying us.
  case Eftpos  //valid only for recieving payment
}