entity PurchaseItem extends TestedItem{ 
  field bonus : Int // 1-50 
 //  field test : Test
  field resaleMultiplier : Int
  compute gP  = 0     {  width = 0.1}
 //  Current item show  ESP  or ELP  
 //  compare show opoosite of ESP or ELP and EGP comparison
  //   Metal Value = current spot value , show applicable metal type
  //   Spot Price for apporiate metal
  compute weight = 0  {  width = 0.1} //average tested weight  {  width = 0.1}
  field qty : Int // if oneoff then show ONEOFF
  field product : Product //
  field type : StockedType //if oneoff inline otherwise reference, or if oneoff generate stockedtype entity
  field service : Service // visibile if applicable
 //    compute price , allow manual total
  func title: String = type.number + " " + product
  field transaction : Transaction
} 

   // **can stocked type inline/ refernce replace the need for product details??
entity StockedType{
  field number : Int  //for one off compute purchase item number, else auto generate??
  field weight : Int //for one off compute from average tested?
  field liquidationType : LiquidationType
  field photo : String //change to attachment/photo field when we get it
  field certification : Certification //show and required? if set on product
  field boxNo : LocationBoxes
  field owner : Company // = current location then locked except via inter network sale
  field location : Company //= current location then locked except via transfer 
  field purchaseItem : PurchaseItem
  func title: String = number
}


entity SaleItem{
  field product : Product 
  field type : StockedType // dont allow liquidationTypes
  field qty : Int // if product is oneoff show '1' and uneditable for now, later show 'ONEOFF'
  compute gP  = 0   {  width = 0.1}
  field service : Service // visibile if applicable
 
  func title = type.number + " " + product
  field transaction : Transaction
}








