

entity Role
{field title: String
  field organisationalRole : [OrganisationalRole] inline by role
  
}

entity OrganisationalRole{
  field person : People by organisationalRole
  field organisation : Organisation by peopleRoles
  field role : Role 
  field current : Bool
  field startDate : Date
  field endDate : Date
  field type : OrganisationalRoleType
}

entity People
 {field firstName: String
  field surname : String
  field personaladdress : [String]
  field phone : [String]
  field email : [String]
  field relationshipType : [RelationshipType]
  field organisationalRole : [OrganisationalRole] inline by person
  field source : String //todo connect to marketing campaigns and people/refferals
  field interests : [Interests]
  field event : [Event]  inline by person
  field relationship : [Relationships]
  field systemuser : User //todo compute user, and hide field, (possibly show a "user connected"
  field actionItems: [ActionItemEntity]
     compute title = firstName + surname
}

      class Interests{
        field interest : InterestList
        field assignTouch : MarketingCentre //todo filter to touches ref
      }    
      class Relationships {
        field contact : People
        field type : [RelationshipType]
        field organisation : Organisation
}
//    class PeopleEvents{
  //     field name : String
    //  field date : Date 
      //  field location : Location
     
    

entity Organisation 
        
{       
        field name : String
        field legalName : String
        field domain : [Domain]
        field type : RelationshipType
        field peopleRoles : [OrganisationalRole] inline by organisation
        field Source : String //todo connect to marketing campaigns and people/refferals
        field associatedPeople : [AssociatedPeople] // probablychange to bidirectional relationship
 compute title = name 
}
 class AssociatedPeople{
   field person : People
   field type : RelationshipType //if 
   field OldorPendingOrgnisationalRole : OrganisationalRole 
 
     
}
  
class Domain 
{field title : String}
  
entity Knowledgebase extends TCNS
  
entity Proposal extends TCNS 
  
entity Communication {
  field status : Status 
  field interest : [Interests]
}
entity Deal {
  field dealPeople : [DealPeople]
  field organisation : [DealOrganisations]
  field status : DealStatus
  field dealPhase : DealPhase
  field dealIndidcator : DealIndicator
  field numberOfUsers : Int
  field proposal : Proposal
  field featuresRequired : [Feature] by deal
 
}
class DealOrganisations{
  field orginsation : Organisation
  field involvement : OrganisationInvolvment
}

  class DealPeople{
    field person : People
    field dealRole : DealRole
    field status : PersonDealStatus
    field temperature : PersonDealTemperature
 //*   button ("add additional role for this person"){ 
  //    person = person
 //     status = status
 //     temperature = temperature
 //   }
  }
entity DealRole{
      field title : String}
        
entity Event{
    field manualTitle : String
    field date : Date
    field location : String
    field type : EventType inline by event  //have the backlog field show only if appicable
    field person : [People] by event
    field organisation : [Organisation] // have this filled automatically when available
    field agenda : [Backlog]
  
  compute title = type + date + person // add location when it working to not require fill
      
}
entity EventType{
  
  field category : [EventCategory]
  field frequency : Frequency
  field manualTitle : String
  field event : Event 
    compute title = category + frequency // add else if manualTitle
}
entity InterestList {
     field interest : String
     field interestType : InterestType
   compute title = interest + interestType
}
  
entity Location extends TCNS
  
entity PeopleEvent extends TCNS 
  
entity Support{
  field comments : [Text]
  field pendingCommentsReview : [People]
  field title : String
  field details : [Text]
  field response : [SupportResponse]
  field status : SupportStatus
  field urgency : Urgency
  field person : [People]
  field organisation : [Organisation]
  field clientType : ClientType
  field phase : SupportPhase
  field relatedSupport : [Support]
  field type : BacklogCategory
  field error : [Error]
  field useCase : [UseCase]
  field features : [Feature]
  field backlogs : [Backlog]
  field release : [Release]
  field actionItem : [ActionItem]
  
}

entity User