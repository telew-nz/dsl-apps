extend trait IProductTaxonomy extends HasExtId {
  field seoName: String?
  event onSave = {
    if (touched) {
      ECommerceIntegration.all.map {service =>
        if (service.userEnabled) {
          if (let pc = this.as[IProductCategory]) {
            service.uploadCategoryJobs(BatchChange.create(service, [pc]))*.run
          }
          if (let pc = this.as[IBrand]) {
            service.uploadBrandJobs(BatchChange.create(service, [pc]))*.run
          }
          if (let pc = this.as[IProductTag]) {
            service.uploadTagJobs(BatchChange.create(service, [pc]))*.run
          }
        }
      }.result
    }
  }
}

extend trait ECommerceIntegration {
  back func uploadAllTaxonomies(): Void = { 
    BatchChange.hierarchy(
        this, 
        if (let c = this.categories) c else IProductCategory.all.result.get, 
        _.superCategory
      )
      .filter(!_.isEmpty)
      .flatMap(uploadCategoryJobs(_))
      *.run()
    
    BatchChange.hierarchy(
        this, 
        if (let c = this.brands) c else IBrand.all.result.get, 
        _.superCategory
      )
      .filter(!_.isEmpty)
      .flatMap(uploadBrandJobs(_))
      *.run()
    
    let tags = BatchChange.create(this, IProductTag.all.result.get)
    if (!tags.isEmpty) service.uploadTagJobs(tags)*.run
  }
}
