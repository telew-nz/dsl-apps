entity AssetCreation extends DepreciationMethodOperation with IBaseOutgoingDelivery with IOutgoingDeliveryItem with Journal {
  ref field date: Date = now
  func journalDate = date
  ref field asset: IFixedAsset inline by creation
  field source: Store
  func title = "FAC $asset"
  func itemDelivery: IDelivery? = this
  func unit: ProductUnit = Item
  func outgoingItems: [IOutgoingDeliveryItem]? = [this]
  func deliverySource: Store? = source
  func deliverySupplier: LegalEntity = asset.legalEntity
  func deliveryReceiver: LegalEntity = asset.legalEntity
  func outcomeStockReg: StockRegister? = stock
  func qty: Qty[ProductUnit.Item] = 1
  func product = asset.product
  func items: [IDeliveryItem]? = [this]
    
  register stock: StockRegister {
    value = StockRegister(
      legalEntity = legalEntity, store = source, good = asset.product,
      sort = 0, date = date, document = this, factualQty = -1
    )
    autoRecalc = true
  }  
  register move = {
    FAReg(asset = asset, date = date, toAvailable = 1, toInUse = - 1, toLegalEntity = legalEntity, toStore = source, document = asset)
  }
  register ledger = {
    LInventory(journal = this, product = product, qty = 1, isDebit = false, contraAccount = FixedAssets, fixedAsset = asset)
  }
  func hasInvIssues = false//availability.isIssue
  view form = grid{
    row{date source}
    stockDesc
    depreciationMethod
    generalLedgerButton
  }
  object view list = AssetCreation.all >> nav{list{grid{
    row{asset date source}
    availability >> field(label = "")
  }}}
}
