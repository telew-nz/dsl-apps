entity Maintenance extends AssetOperation {
  func title = "FAM $asset"
  ref field status: MaintenanceStatus {
    update = {
      if (new == InProgress) {
        startDate = now
        if (startDate > endDate) endDate = startDate
      } else if (new == Complete) endDate = now
    }
  }
  ref field startDate: Date = now
  ref field endDate: Date {
    default = Date.now + 1_day
    isValid = endDate > startDate
  }
  view form = nav{grid{
    asset
    status
    startDate 
    endDate
  }}
  
  register out = if (status != Canceled) {
    FAReg(asset = asset, date = startDate, toAvailable = -1, toInUse = -1, document = this, isFuture = status == Planned)
  }
  register in = if (status != Canceled) {
    FAReg(asset = asset, date = endDate, toAvailable = 1, document = this, isFuture = status != Complete)
  }
  object view list = Maintenance.all >> nav{list{grid{
    row{asset startDate space}
    row{status endDate space}
  }}}
  view ref = x {status title}
}

enum MaintenanceStatus {
  case Planned {
    background = "#ed9"
  }
  case InProgress {
    background = "#dea"
  }
  case Complete {
    color = "white"
    background = "#090"
  }
  case Canceled {
    background = "#ddd"
  }
}