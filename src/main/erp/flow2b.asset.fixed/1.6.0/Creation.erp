entity AssetCreation extends IBaseOutgoingDelivery with IOutgoingDeliveryItem with Journal {
  ref field date: Date = now
  func journalDate = date
  ref field asset: IFixedAsset inline by creation
  system field adjustment: Bool
  field cost: Money[legalEntity.getCurrency]?
  field source: Store {
    default =? Store.ours.onlyOne
    from = Store.ours
  }
  func legalEntity = asset.legalEntity
  func hasInvIssues = !adjustment && availability.isIssue && !isBeforeInit
  
  func title = "FAC $asset"
  func itemDelivery: IDelivery? = this
  func unit: ProductUnit = Item
  func outgoingItems: [IOutgoingDeliveryItem]? = [this]
  func deliverySource: Store? = source
  func deliverySupplier: LegalEntity = asset.legalEntity
  func deliveryReceiver: LegalEntity = asset.legalEntity
  func outcomeStockReg: StockRegister? = stock
  func qty: Qty[ProductUnit.Item] = 1
  func product = asset.product
  func items: [IDeliveryItem]? = [this]
    
  register stock: StockRegister? {
    value = if (!adjustment && try? asset.product.title) StockRegister(
      legalEntity = legalEntity, store = source, good = asset.product,
      sort = 0, date = date, document = this, factualQty = -1
    )
    //autoRecalc = true
  }  
  register move = {
    FAReg(asset = asset, date = date, autoProd = true, toAvailable = 1, toInUse = -1, 
          toLegalEntity = legalEntity, toStore = source, document = asset)
  }
  register ledgers: [Ledger] = {
    if (adjustment) {
      [ LProduct(account = InventoryAdjustments, journal = this, product = product, qty = 1, 
                 contraAccount = FixedAssets, trAmount = -cost),
        LFixedAssets(journal = this, contraAccount = InventoryAdjustments, trAmount = cost, fixedAsset = asset)]
    } else {
      [LInventory(journal = this, product = product, qty = 1, isDebit = false, contraAccount = FixedAssets, fixedAsset = asset)]
    }
  }
  view form = nav{grid{
    row{date source}
    stockDesc
    generalLedgerButton
  }}
  object view list = AssetCreation.all >> nav{list{grid{
    row{asset date source}
    availability >> field(label = "")
  }}}
}
