trait IPurchaseInvoice extends IInvoice {
  func isPurchase: Bool = true
  func startingBalance: Money[currency]? = total
  func paidAmount = -balanceChange
  func setoffs: [Setoff]? = debits
  compute vendor = counterparty
  compute customer = legalEntity

  func originLedgers(journal: Journal, date: Date, amount: Money): Future[[Ledger]?] = {
    [LDebt(account = AccountsPayable, origin = this, journal = journal, date = date, isSetoff = true, 
           trAmount = amount, counterparty = vendor, currency = currency)]
  }
  
  view statusesView = x {
    issueState
    paymentState
    balance.abs >> field(visible = balance)
  }
  view ref = x{title statusesView}  
}