object ITInvoiceNotIssued extends IssueType[IOrder] {
  impl func title = "Invoice not issued" 
  impl func hasIssue(item: IOrder) = item.issueState == InvoiceNotIssued && !item.canceled && item.shouldBeIssued
  impl func fixes(item: IOrder) = {
    [Fix(text = "Issue $(item.issueWhat)", acts = [Act(label = "Issue $(item.issueWhat)", do = item.issue())])]
  }
}
object ITInvoiceModified extends IssueType[IOrder] {
  impl func title = "Invoice modified" 
  impl func hasIssue(item: IOrder) = item.issueState == InvoiceModified
  impl func fixes(item: IOrder) = [
    Fix(text = "Issue $(item.issueWhat)", acts = [Act(label = "Issue $(item.issueWhat)", do = item.issue(), icon = "receipt" )]),
    Fix(text = "In the case when it was accidentally issued, delete the original invoice and issue again"),
    Fix(text = "Rollback modifications", acts = [Act(label = "Rollback", color = "#c00", icon = "undo", do = Query(item).foreach{
      rollbackInvoice()
    })])
  ]
}