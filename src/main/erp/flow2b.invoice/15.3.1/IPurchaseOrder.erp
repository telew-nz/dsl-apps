trait IPurchaseOrder extends IOrder {
  func isPurchase: Bool = true
  
  compute customer = legalEntity
  func payee: Vendor?
  func vendor: Vendor?
  func payer = legalEntity
  func debtBalance = payee?.debtBalance
  func cpDebtAllowance: DebtAllowance? = payee?.allowance

  back func isInstantPaid: Bool = {
    if (let c = payments.onlyOne?.as[OutgoingPayment], let r = invoices.onlyOne) {
      c.amount == r.total && (c.date - r.date).abs <= 3600_second && allItems.all(!invoiceNotIssued)
    }
  }
  
  func cashFlow = Purchases
  
  view paymentsView = y(label = "Payments", visible = (ui.edit && (fullReconState.isIssue || payments)) || debtOriginAmounts) {
    payments >> list(visible = ui.edit, canAdd = false) {
      posViewCredit
    }
    addPaymentView
    debtOriginsView >> field(visible = !ui.edit) 
  }
}