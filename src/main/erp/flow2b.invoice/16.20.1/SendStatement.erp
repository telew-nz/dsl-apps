extend entity CustomerAccountTerms extends DeferredJob {
  const system field nextGenDate: Date = now
  impl func jobDate = period(nextGenDate).end + 1_minute
  impl func service = FinanceNotificator
  impl func do = {
    let genDate = nextGenDate
    nextGenDate = now
    save
    
    guard (FinanceNotificator.sendStm) else return {}
    
    Customer.all.filter(accountTerms == this).foreach {c =>
      GenAccStm(customer = c).enqueue
    }
  }
}
 
class GenAccStm extends SystemJob {
  impl func service = FinanceNotificator
  
  field customer: Customer
  
  impl func do = {
    LMoneyDebt.current
      .filter(
           counterparty == customer.legalEntity 
        && balanceDue
      )
      .groupBy(legalEntity, currency)
      .foreach {
        let stm = CustAccStm(autoSend = true, legalEntity = legalEntity, currency = currency, customer = customer).save
        stm.sendOut()
      }
      .result
  }
}
