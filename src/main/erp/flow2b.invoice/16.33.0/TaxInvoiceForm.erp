extend entity Invoice extends NewEngine {
  impl view form {
    printable = true
    layout = nav{grid (labels = None, width = 1.2) {
      issuesView
      y (margin = Around, visible = !isLastInvoice){
        y(background = "#fff9e4", border = Around) {
          x(margin = Around){
            label ("Not the last invoice" color = "#ff6200")
            button("Open last") {
              order.invoices.last!.form.open()
            }
          }
        }
      }
      x (margin = None) {
        y (width = 0.75, margin = Bottom, spacing = false, yAlign = Top) {
          h1(label = name)
          x {label("Number") order >> field(title = this.number, editMode = AlwaysRead) date.date}
        }
        y ( margin = Bottom, stretch = 1, spacing = false, yAlign = Top) {
          logo >> field(height = 4, margin = None, editMode = AlwaysRead, align = Right)
          vendor.title >> field(fontStyle = H1, margin = None, visible = !logo, align = Right, editMode = AlwaysRead)
          x {label("GST Number", stretch = 1, align = Right) vendor.legalEntity.legalInfo?.gstNumber >> field(editMode = AlwaysRead)}
        }
        
      }
      
      nameDesc      
      
      grid(labels = Top, width = 1.2) {
        row {
          payer >> y (width = 0.4, spacing = false, label = "Bill to:") {
            _ >> field(title = legalEntity.legalName, editMode = AlwaysRead)
            legalEntity.legalAddress >> field(frame = false, editMode = AlwaysRead)
          }
          y (width = 0.4, spacing = false, label = "Ship to:", visible = receiver && (shipTo || receiver != payer?.legalEntity || receiver != customer?.legalEntity)) {
            receiver >> field(title = legalName)
            x (visible = shipTo?.locationActor && receiver != shipTo?.locationActor?.as[LegalEntity]) {
              label ("C/O") shipTo?.locationActor?.as[LegalEntity] >> field(title = legalName)
            }
            shipTo?.locationAddress >> field(frame = false, editMode = AlwaysRead)
          }
          vendor >> y (width = 0.4, spacing = false label = "Vendor:") {
            _ >> field(title = legalEntity.legalName, label = "", editMode = AlwaysRead)
            legalEntity.legalAddress >> field(frame = false, editMode = AlwaysRead)
            legalEntity.contacts*.as[PhoneContact]*.phone.join(", ")
            legalEntity.contacts*.as[EmailContact]*.email.join(", ")
          }
        }
        customer >> y (label = "Order from Customer:", visible = customer != payer) {
          _ >> field(title = legalEntity.legalName)
          customerRefNum
        }
        row {
          totalDue >> field(visible = ui.edit)
          dueDate >> field(visible = ui.edit)
          space
        }
      }
      
      x (visible = order.references) {label("Reference") order.references }

      label("", margin = Around)
      
      (items + prev?.deletedItems).filter(invoicePosition == Lines).groupBy(itemDlv).toSeq >> subtotal {
        row{itemDlv >> field(span = 6, title = invTitle)}
        table {
          header{
            label("Code", width = 0.15) 
            label("Product", width = 0.43) 
            label("", align = Right, width = 0.12) 
            label("Quantity", align = Right, width = 0.12) 
            label("Price", align = Right, width = 0.19) 
            label("Amount", align = Right, width = 0.19)
          }
          body{row{rowView(this)}}
          //row{product qty price amount}
          //row(visible = discount){label("Discount") space space discount}
        }
      }
      
      row {
        y (width = 0.65, margin = None) { y(margin = NoneInner) {
          label("", margin = Around)
          
          y (margin = None, frame = true) {
            x (align = Right margin = TopBottom) {
              overdueState  >> field (compact = false) 
              paymentState >> field (compact = false)
            }
            grid (labels = TopRight, width = 0.65, spacing = false) {
              row(labels = false) {
                label("Due", fontStyle = Label, width = 0.19, visible = dueInvoices)
                dueInvoices >> list(margin = None, frame = false) {
                  x(margin = None, flow = false) {
                    totalDuePercent >> field(stretch = 100)
                    dueDate?.date >> field(stretch = 10, fontStyle = Label)
                    diffTotalDue >> field(stretch = 1)
                  }
                }
              }
              row(labels = false) {
                label("Paid", fontStyle = Label, width = 0.19, visible = order.revPaidAmount)
                x(margin = None) {
                  order.revPaidAmount >> field(stretch = 100) 
                }
              }
              row(labels = false) {
                label(if (order.revUnpaidAmount < 0) "Overpaid" else "Unpaid", fontStyle = Label, width = 0.19, visible = order.revUnpaidAmount)
                x(margin = None) {
                  order.revUnpaidAmount.abs >> field(stretch = 100, fontStyle = Bold) 
                }
              }
              row {
                label("Bank Accounts", fontStyle = Label, width = 0.19, visible = dueInvoices)
                paymentAccounts >> list(visible = dueInvoices, margin = None, frame = false) {
                  number 
                }
              }
            }

          }
        }}
        
        
        y (width = 0.55, margin = None) {
          grid (labels = TopRight, width = 0.55, spacing = false, margin = Right, visible = prev) {
            x(margin = None, label = "Subtotal excl GST") {
              prev!.invoiceSubtotalNoGst >> field(showEmpty = true, stretch = 100, visible = prev && diffSubtotalWithoutGst)
              diffSubtotalWithoutGst >> field(showPlus = true, visible = prev) 
              label("=", visible = prev && diffSubtotalWithoutGst, fontStyle = Label)
              invoiceSubtotalNoGst >> field(showEmpty = true, stretch = 1) 
            }
            (items + prev?.deletedItems).filter(invoicePosition == Subtotal) >> list(frame = false, label = "") {labelView(this)}
                
            x(margin = None, label = "GST") {
              prev!.gstAmount >> field(showEmpty = true, stretch = 100, visible = prev && diffGstAmount)
              diffGstAmount >> field(showPlus = true, visible = prev)
              label("=", visible = prev && diffGstAmount, fontStyle = Label)
              gstAmount >> field(showEmpty, stretch = 1)   
            }
            x(margin = None, label = "Total incl GST") {
              prev!.invoiceTotal >> field(showEmpty = true, stretch = 100, visible = prev && diffTotal)
              diffTotal >> field(showPlus = true, visible = prev)
              label("=", visible = prev && diffTotal, fontStyle = Label)
              invoiceTotal >> field(showEmpty, stretch = 1, fontStyle = Bold) 
            }
            
            row (labels = false) {
              label(" ", margin = Around)
            }
          }
          
          grid (labels = None, align = Right, width = 0.55, spacing = false, margin = Right, visible = !prev) {
            row {
              label("Subtotal excl GST", fontStyle = Label)
              x(width = 0.19, margin = None) {
                diffSubtotalWithoutGst >> field(showPlus = true, stretch = 100, visible = prev) 
                invoiceSubtotalNoGst >> field(showEmpty = true, stretch = 1) 
              }
            }
            (items + prev?.deletedItems).filter(invoicePosition == Subtotal) >> list(frame = false) {labelView(this)}
            row {
              label("GST", fontStyle = Label)
              x(width = 0.19, margin = None) {
                diffGstAmount >> field(showPlus = true, stretch = 100, visible = prev)
                gstAmount >> field(showEmpty, stretch = 1)   
              }
            }
            row {
              label("Total incl GST", fontStyle = Label)
              x(width = 0.19, margin = None) {
                diffTotal >> field(showPlus = true, stretch = 100, visible = prev)
                invoiceTotal >> field(showEmpty, stretch = 1, fontStyle = Bold) 
              }
            }
            row {
              label(" ", margin = Around)
            }
          }
          
        }
      }
      
      
      panel (label = "Transactions", frame = false, collapsed = true) {
        debtTable >> table(border = None) {
          //grid(labels = None, width = 0.59, border = None, frame = false, spacing = false, margin = TopBottom){
          date >> field (width = 0.3)
          y(margin = None, width = 0.4, label = "Document"){
            doc >> field(title = title) 
            label("Account Allowance", visible = !doc) 
          }
          y (margin = None, width = 0.25, align = Right, label = "Amount", spacing = false) {
            amount
            x (visible = doc && docDebtAmount != amount, flow = false) {
              label("of", fontStyle = Label, stretch = 1) docDebtAmount
            }
          } 
          balance >> field(width = 0.25)
            //x(visible = dueDate){label("Due", fontStyle = Label) dueDate}
        }
      }

    }
    generalLedgerButton
    }
  }
}