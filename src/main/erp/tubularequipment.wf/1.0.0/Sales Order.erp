extend trait Order {
  ref field verificationStatus: VerificationStatus {
    default = NotVerified
    views = []
  }  
}

extend entity SalesOrder {
  compute duplicates: [SalesOrder]? {
    value = if ((try? number).isDefined) SalesOrder.all.filter(p => p.number == number && p.id != id) else []
    views = []
  }
  extend view statusesView = verificationStatus
  extend view form = duplicates >> list(background = "#f99"){_}
}

enum GrossMarginState {
  case Empty {
    label = "Empty Margin"
    background = "#ddd"
  }
  case Defined {
    label = "Defined Margin"
    color = "white"
    background = "#090"
  }
}

extend entity PurchaseOrder {
  extend view statusesView = verificationStatus
}



enum VerificationStatus {
  case NotVerified {
    background = "#ddd"
  }
  case Verified {
    color = "white"
    background = "#090"
  }
}

enum RestoreState(complete: Bool) {
  case NotRestored(complete = false) {
    background = "#ddd"
  }
  case PartiallyRestored(complete = false) {
    background = "#ed9"
  }
  case Restored(complete = true) {
    color = "white"
    background = "#090"
  }
}
