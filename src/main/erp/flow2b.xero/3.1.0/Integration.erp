entity XeroIntegration extends SystemService with ExtIdSource[String] with OAuth {
  field title: String
  field legalEntity: OurLegalEntity =? onlyOne

  func authTmpTokenUrl: Url = "https://api.xero.com/oauth/RequestToken"
  func authAuthorizeUrl: Url = "https://api.xero.com/oauth/Authorize"
  func authTokenExchangeUrl: Url = "https://api.xero.com/oauth/AccessToken"

  field authConsumerKey: String = "USM5EZCZTGMZE9ML8KB9TTFJ7GZZAD"      // ???: can't set empty fields
  field authConsumerSecret: Password = "HNLANMZ3RFQKETQEAKHUINWLV068NF" //      because OAuth throws exception on service creation
  																		//      solution: don't authorize automatically
  
  func apiUrl: Url = "api.xero.com/api.xro/2.0/"
  func webUrl: Url = "http://xero.com/"

  back func https(path: String): HttpRequest = 
    HttpRequest(url = "$apiUrl$path", ssl = true)
      .oauth(this)
      .header("Accept", "application/json")
  
  func roles: [Role]? = [Admin]
  
  view form = nav{
    tabs{
    grid(label = "Settings"){
      title
      legalEntity
      serviceState
      authConsumerKey
      authConsumerSecret
      authorizeView
  	}
    grid(label = "Test"){
      button("Push all invoices") {
      UI.info("Pushing invoices")
      Invoice.all.map { i =>
      	PushInvoiceJob(invoice = i, service = this).run()
      }
    }
  	}}
    button("Retrieve Contacts") {
      UI.info("Retrieving contacts")
      RetrieveContactsJob(service = this).run
    }
    button("Push Contacts") {
      UI.info("Pushing contacts")
      Company.all*.touch
    }}

  object view list = XeroIntegration.all >> list{grid(labels = None){
    x {title serviceState}
  }}
}