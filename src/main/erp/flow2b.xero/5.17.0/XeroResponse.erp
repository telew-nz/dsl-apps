interface XeroBaseResponse {
  field id: String
  field status: String
  field providerName: String
  field dateTimeUTC: Date {jsonMap = XeroDate}
}

object XeroDate extends Mapper[Date, String] {
  
  impl func apply(v: Date): String = "/Date(${v.epoch.noUnit.unformattedString})/"
  
  
  impl func unapply(v: String): Date = {
    let numbStr = v.dropPrefix("/Date(").dropSuffix(")/")
    
    let sign: String = if(numbStr.contains("-")) "-" else "+"
    let mult: Int = (sign + "1").toNum!
    let numbs = numbStr.split(sign)!
    let numBase: Number = numbs.first.toNum!
    let numOffset: String? = numbs.drop(1).first
    let offsetHours   = (numOffset[ ..2]).alt("0").toNum.as[Duration[hour]] * mult
    let offsetMinutes = (numOffset[3..4]).alt("0").toNum.as[Duration[minute]] * mult
    
    Date.fromEpoch(numBase).add(offsetHours).add(offsetMinutes)
  }
}

object XeroDateOpt extends Mapper[Date?, String?] {
  impl func apply(v: Date?): String? = if(let v) XeroDate.apply(v) 
  
  impl func unapply(v: String?): Date? = if(let v) XeroDate.unapply(v) 
}

class XeroContactsResponse extends XeroBaseResponse {
  extFieldNaming = UpperCamelCase
  
  field contacts: [XeroContact]
}

class XeroAccountsResponse extends XeroBaseResponse {
  extFieldNaming = UpperCamelCase
  
  field accounts: [XeroAccount]
}
                                                    
class XeroInvoicesResponse extends XeroBaseResponse {
  extFieldNaming = UpperCamelCase
  
  field invoices: [XeroInvoice]
}

class XeroCreditNotesResponse extends XeroBaseResponse {
  extFieldNaming = UpperCamelCase
  
  field creditNotes: [XeroCreditNote]
}

class XeroPaymentsResponse extends XeroBaseResponse {
  extFieldNaming = UpperCamelCase
  
  field payments: [XeroPayment]?
}

class XeroItemsResponse extends XeroBaseResponse {
  extFieldNaming = UpperCamelCase
  
  field items: [XeroItem]
}

class XeroOrganisationsResponse extends XeroBaseResponse {
  extFieldNaming = UpperCamelCase
  
  field organisations: [XeroOrganisation]
}

class XeroBankTransactionsResponse extends XeroBaseResponse {
  extFieldNaming = UpperCamelCase
  
  field bankTransactions: [XeroBankTransaction]
}

class XeroBankTransfersResponse extends XeroBaseResponse {
  extFieldNaming = UpperCamelCase
  
  field bankTransfers: [XeroBankTransfer]
}


class XeroAssetsResponse {
  field pagination: XeroPagination
  field items: [XeroAsset]
}

class XeroPagination {
  field page: Int
  field pageSize: Int
  field pageCount: Int?
  field itemCount: Int?
}