class RetrieveItemsJob extends SystemJob {
  field service: XeroIntegration
  
  func do = {
    // Xero Items api endpoint doesn't support paging
    let res <- service.https("Items").get
    let rb = res.body!.parseJson[XeroItemsResponse]

    //rb.items.count.trace
    rb.items.map { itm =>
      saveItem(itm)
    }
  }


  back func saveItem(xeroItem: XeroItem) = {    
    if(let prod = service.findExtId(xeroItem.itemID, _.as[IBasicProduct])
                  .or((if(xeroItem.isTrackedAsInventory) Good(
                         title = xeroItem.name!
                         description = xeroItem.description.or(xeroItem.purchaseDescription)
                       ) else  Service(
                         title = xeroItem.name!
                         description = xeroItem.description.or(xeroItem.purchaseDescription)
                       )).as[IBasicProduct]
                       // Strange: It doesn't work without 'as'. Also it doesn't work with 'alt' instead of 'or'.
                     )) { 

      prod.status = selectProductStatus(xeroItem)
      prod.refNum = xeroItem.code // instead of sku
      prod.updateExtId(service, xeroItem.itemID)
      prod.save()
    
    }
  }
  
  func selectProductStatus(xi: XeroItem): ProductStatus = {
  	if(xi.isSold){
      if (xi.isPurchased) ForSale else ForClearance
    } else {
      if (xi.isPurchased) NotForSale else Obsolete
    }
  }
} 