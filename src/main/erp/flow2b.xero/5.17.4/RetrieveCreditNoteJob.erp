back class RetrieveCreditNoteJob extends SystemJob {
  impl field service: XeroIntegration
  field creditNoteId: String
  
  impl func do = {
    let res <- service.https("CreditNotes/${creditNoteId}").get
    
    res.body!.parseJson[XeroCreditNotesResponse].creditNotes.oneByOne { cn =>
    	saveCreditNote(cn)
    }
  }
  
  func saveCreditNote(cn: XeroCreditNote): Future[Any] = {
    cn.allocations.oneByOne(allocateCreditNote(_, cn))
  }
  
  func allocateCreditNote(al: XeroAllocation, cn: XeroCreditNote): Future[Any] = {

    guard (let o = service.findExtId(al.invoice.invoiceID, _.as[Order])) else return 0 //???: null doesn't work
    
    // ???: Why does compiler throw error on next line?
    if (let i = service.findExtId(cn.creditNoteID, _.as[Invoice])) return Future(i)
    
    let d = if(let so = o.as[SalesOrder]) {
      SalesDiscountItem(
        order = so,
        discountWithGst = al.amount
      )
    } else if(let po = o.as[PurchaseOrder]){
      PurchaseDiscountItem(
        order = po,
        discountWithGst = al.amount
      )
    }

    if(let d){
      d.desc = "Xero Credit Note: ${cn.creditNoteNumber}"
      d.save()
      let inv = o.createInvoice(al.date.alt(Date.now))
      inv.date = al.date.alt(Date.now)
      inv.totalDue = o.orderTotal
      inv.updateExtId(service, cn.creditNoteID)
      inv.save()

      o.saveMain
      inv
    }
  }
}