class XeroAccount {
  extFieldNaming = UpperCamelCase
  
  field accountID: String?
  field code: String?
  field name: String?
  field description: String?
  
  field type: XeroAccountType {
    jsonMap[String](apply = _.id, unapply = v => XeroAccountType.all.find(id == v)!)
  }
  
  field accClass: XeroAccountClass? {
    jsonMap[String?](apply = _?.id, unapply = v => XeroAccountClass.all.find(id == v)),
    extName = "Class"
  }
  
  field status: XeroAccountStatus {
    jsonMap[String](apply = _.id, unapply = v => XeroAccountStatus.all.find(id == v)!)
  }
  
  field bankAccountNumber: String?
  field currencyCode: String?
  func currency: Currency? = Currency.all.find(name == currencyCode)
  
  field bankAccountType: XeroBankAccountType? {
    jsonMap[String?](apply = _?.id, unapply = v => XeroBankAccountType.all.find(id == v))
  }
  
  field taxType:  XeroTaxType? {
    jsonMap[String?](apply = _?.id, unapply = v => XeroTaxType.all.find(id == v))
  }
}

enum XeroAccountType(id: String) {
  case bank (id = "BANK")
  case current (id = "CURRENT")
  case currLiab (id = "CURRLIAB")
  case depreciatn (id = "DEPRECIATN")
  case directCosts (id = "DIRECTCOSTS")
  case equity (id = "EQUITY")
  case expense (id = "EXPENSE")
  case fixed (id = "FIXED")
  case inventory (id = "INVENTORY")
  case liability (id = "LIABILITY")
  case nonCurrent (id = "NONCURRENT")
  case otherIncome (id = "OTHERINCOME")
  case overheads (id = "OVERHEADS")
  case prepayment (id = "PREPAYMENT")
  case revenue (id = "REVENUE")
  case sales (id = "SALES")
  case termLiab (id = "TERMLIAB")
  case paygLiability (id = "PAYGLIABILITY")
  case superannuationExpense (id = "SUPERANNUATIONEXPENSE")
  case superannuationLiability (id = "SUPERANNUATIONLIABILITY")
  case wagesExpense (id = "WAGESEXPENSE")
}

enum XeroAccountClass (id: String) {
  case asset (id = "ASSET")
  case equity (id = "EQUITY")
  case expense (id = "EXPENSE")
  case liability (id = "LIABILITY")
  case revenue (id = "REVENUE")
}

enum XeroAccountStatus(id: String) {
  case active   (id = "ACTIVE")
  case archived (id = "ARCHIVED")
}

enum XeroBankAccountType (id: String) {
  case bank (id = "BANK")
  case creditCard (id = "CREDITCARD")
  case payPal (id = "PAYPAL")
}

enum XeroTaxType (id: String, rate: UPercent[2]??) {
  case input2 (id = "INPUT2", rate = 0.15)
  case none (id = "NONE", rate = null)
  case zeroRated (id = "ZERORATED", rate = 0)
  case output2 (id = "OUTPUT2", rate = 0.15)
  case gstOnImports (id = "GSTONIMPORTS", rate = 0)
}