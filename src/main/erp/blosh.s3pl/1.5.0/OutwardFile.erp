extend entity Malcolm3plIntegration {
  impl func outwardFile(sd: SalesDelivery) = doOutwardFile(sd.shipping!, sd.order?.as[SalesOrder], sd.receiver!, sd.number)
  impl func transferOutwardFile(tr: Transfer) = doOutwardFile(tr, null, tr.legalEntity.legalEntity, tr.number)
  func doOutwardFile(sd: IProdMovePath, so: SalesOrder?, r: LegalEntity, number: String): Future[File] = {
    let a = sd.pathDst!.locationAddress!
    let txt = "OrderNo,OrderDate,DeliverTo,DeliverStreet,DeliverSuburb,DeliverCity,CustomerContact,CustomerEmail,CustomerOrderNo,ProductCode,ProductDescription,Qty,UnitCode,DeliveryInstructions\n" +
      sd.pathItems.filter(product.isTangible).flatMap{i =>
        i.product.productQtys(i.qty)
      }.groupBy(product).agg(qty.sum).toSeq.map {j =>
        let city = "$(a?.city) $(a?.postcode)".trim
        let comment = so?.activities.first?.comment
        let to = (a.person + " " + a.company).trim.alt(r.title)
        let s: Csv = "$(number),$(sd.pathStart.timezone('NZ').format('dd/MM/yyyy')),$to,$((a.number + ' ' + a.street).trim),$(a.suburb),$city,$r,$(r.contacts*.as[EmailContact].first?.email),$(so?.refNum.alt(number)),$(j.product.refNum),$(j.product.title),$(j.qty.noUnit),EA,$comment"
        s
        
      }.join("\n").as[Csv]
    FileGeneric(name = "Order $(number).csv", content = txt.toData)
  }
}