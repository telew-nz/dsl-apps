entity WooCommerceIntegration extends ECommerceIntegration[Int] {
  ref field url: Url
  func title = url
  func endpoint = url.dropPrefixes(["http://", "https://"]).dropSuffix("/") + "/wp-json/wc/v2"
  field consumerKey: String
  field consumerSecret: String
  
  func https(path: String?): HttpRequest = {
    HttpRequest(url = "$endpoint$path", ssl = true).param("consumer_key", consumerKey).param("consumer_secret", consumerSecret)  
  } 
     
  view mainView = grid(labels = Top){
    url
    consumerKey
    consumerSecret
  } 
  object view list = WooCommerceIntegration.all >> nav{list{grid(labels = None){
    x {url serviceState}
  }}}
   
  func uploadProductJobs(change: BatchChange[ProductUpdate[ICustomerSuperProduct]]): [SystemJob]? = {
    change.sliding(1).map {c =>
      UploadProductsJob(service = this, change = c)
    }
  }
  func uploadVariationJobs(change: BatchChange[ProductUpdate[ICustomerComplexProduct]]): [SystemJob]? = {
    change.groupBy(this, product.customerSuperProduct).toSeq.map(
      UploadVariationsJob(service = this, superProduct = _.#0, change = _.#1)
    )
  }
  func uploadCategoryJobs(change: BatchChange[ProductCategory]): [SystemJob]? = {
    [UploadCategoriesJob(service = this, change = change)] 
  }
  func uploadBrandJobs(change: BatchChange[Brand]): [SystemJob]? = {
    change.created.map(b => UploadBrandJob(service = this, brand = b)) + if (let d = change.deleted) [DeleteBrandsJob(service = this, brands = d)]
  }
  func uploadAttrJobs(change: BatchChange[ProductAttr]): [SystemJob]? = {
    [UploadAttrsJob(service = this, change = change)] 
  }
  func uploadAttrTermJobs(change: BatchChange[ProductAttrTerm]): [SystemJob]? = {
    change.groupBy[Int, ProductAttr](this, _.object).toSeq.map(
      UploadAttrTermsJob(service = this, attr = _.#0, change = _.#1)
    )
  }
  func downloadOrdersJobs(from: Date?) : [SystemJob]? = [DownloadOrdersJob(service = this, from = from)]
  func downloadCustomersJobs : [SystemJob]? = [DownloadCustomersJob(service = this)]
  func uploadOrderStateJobs(orders: [SalesOrder]) : [SystemJob]? = [UploadOrdersStateJob(service = this, orders = orders)]
}