inline entity ExpenseItem extends IPurchaseItemWithDelivery with IOrderDeliveryItem {
  singular = "Expense"
  func orderDeliveryItem: IOrderDeliveryItem? = this
  func deliveryItem = this
  func purchase: IPurchaseItem? = this
  func sales: ISalesItem? = null
    
  field expense: IExpenseType
  func cashFlow: CashFlowCategory = GeneralExpenses
  
  view form = grid(margin = None, width = 1.2, labels = Top) {
    row (labels = false) {
      expense >> field(width = 0.6) 
      gstEditor >> field(visible = ui.isSelected, width = 0.2) 
      discountEditor >> field(visible = ui.isSelected || discount, width = 0.2, align = Right)
      amountEditor >> field(width = 0.2, align = Right)
    }
    deliveryItem.delivery >> field(visible = ui.isSelected && this.order.deliveries.count > 1)
    invoice >> field(visible = ui.isSelected && this.order.invoices.count > 1)
  }
  
  view rowView = group {
    row{expense >> field(rowSpan = 2)
        space
        space
        amountEditor}
    row(visible = discount){label("Discount", span = 2, align = Right) discountEditor}
  }
  func expenseLedger(baseAmount: Money): Ledger = {
    LExpenses(account = GeneralExpenses, journal = delivery!, trAmount = baseAmount, expenseType = expense)
  }
}