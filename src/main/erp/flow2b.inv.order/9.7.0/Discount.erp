inline entity DiscountDeliveryItem extends IOrderDeliveryItem {
  field sales: SalesDiscountItem? inline by deliveryItem {
    default = if (let d = delivery?.as[ISalesDelivery]) {
      SalesDiscountItem(deliveryItem = this, order = d.salesOrders.first)
    }
  }
  field purchase: PurchaseDiscountItem? inline by deliveryItem {
    default = if (let d = delivery?.as[IPurchaseDelivery]) {
      PurchaseDiscountItem(deliveryItem = this, order = d.purchaseOrders.first)
    }
  }
  
  view form = grid(labels = None, width = 1.2, margin = TopBottom) {
    label("Discount")
  }
  func clearSales: Void = sales = null
  func clearPurchase: Void = purchase = null
}

inline entity SalesDiscountItem extends ISalesItemWithDelivery {
  icon = "percent"
  singular = "Discount"
  field deliveryItem: DiscountDeliveryItem inline by sales
  func orderDeliveryItem: IOrderDeliveryItem? = deliveryItem

  func name: String = "Discount"
  view rowView = group {
    row{label("Discount", span = 3, align = Right) discountEditor}
    row(visible = invoiceDesc) {invoiceDesc >> field(span = 4)}
  }
  
  view form = grid(margin = None, width = 1.2, labels = Top) {
    row {
      label("Discount", width = 0.8)
      gstEditor >> field(visible = ui.isSelected, width = 0.2) 
      discountEditor >> field(width = 0.2, label = "", align = Right)
    }
    desc >> field(visible = ui.isSelected || desc)
    deliveryItem.delivery >> field(visible = ui.isSelected && this.order.deliveries.count > 1)
  }
  func revenueLedgers(journal: Journal, date: Date, baseAmount: UMoney?) = []
  func orderDiscount: Money? = discount
}

inline entity PurchaseDiscountItem extends IPurchaseItemWithDelivery {
  icon = "percent"
  singular = "Discount"
  func orderDeliveryItem: IOrderDeliveryItem? = deliveryItem
  field deliveryItem: DiscountDeliveryItem inline by purchase

  func name: String = "Discount"
  view form = grid(margin = None, width = 1.2, labels = Top) {
    row {
      label("Discount", width = 0.8)
      gstEditor >> field(visible = ui.isSelected, width = 0.2) 
      discountEditor >> field(width = 0.2, label = "", align = Right)
    }
    desc >> field(visible = ui.isSelected || desc)
    deliveryItem.delivery >> field(visible = ui.isSelected && this.order.deliveries.count > 1)
  }
  func expenseLedgers(journal: Journal, date: Date, baseAmount: UMoney?) = []
  view rowView = group {
    row{label("Discount", span = 3, align = Right) discountEditor}
    row(visible = invoiceDesc) {invoiceDesc >> field(span = 4)}
  }
  func orderDiscount: Money? = discount
}