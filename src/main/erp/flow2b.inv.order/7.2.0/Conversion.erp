back object Conversion extends IConversion {
  func do(version: [Int?]?) = {
    if (version < [7,0,0]) {
      SalesOrder.all.foreach{so =>
        if (let customer = conv(so).field[LegalEntity?]("customer")) {
          so.customer = customer.makeCustomer.as[Customer]
        }
        so.vendor = conv(so).field[LegalEntity]("vendor").our!
        so.save
      } 
      PurchaseOrder.all.foreach{po =>
        if (let vendor = conv(po).field[LegalEntity?]("vendor")) {
          po.vendor = vendor.makeVendor.as[Vendor]
        }
        po.customer = conv(po).field[LegalEntity]("customer").our!
        po.save
      } 
      SalesInvoice.all.foreach{si =>
        if (let sPayer = conv(si).field[LegalEntity?]("sPayer")) {
          si.sPayer = sPayer.makeCustomer.as[Customer]
        }
        si.save
      }
      PurchaseInvoice.all.foreach{pi =>
        if (let sPayee = conv(pi).field[LegalEntity?]("sPayee")) {
          pi.sPayee = sPayee.makeVendor.as[Vendor]
        }
        pi.save
      }
      SalesDelivery.all.foreach{sd =>
        if (let receiver = conv(sd).field[LegalEntity?]("receiver")) {
          sd.receiver = receiver.makeCustomer.as[Customer]
        }
        sd.save
      } 
      PurchaseDelivery.all.foreach{pd =>
        if (let supplier = conv(pd).field[LegalEntity?]("supplier")) {
          pd.supplier = supplier.makeVendor.as[Vendor]
        }
        pd.save
      }
    }
  } 
}  