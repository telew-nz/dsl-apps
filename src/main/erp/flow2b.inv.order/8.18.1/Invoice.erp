trait Invoice extends IInvoice {
  background = "#d68400"
  ref field date: Date = if (order.created) order.date else Date.now
  ref compute currency: Currency {
    value = orders.first.currency
    update = {
      orders.foreach{o =>
        o.currency = new
      }
    }
  }
  field manualNumber: String?
  
  func order: Order = orders.first
  func orders: [Order]
  func items: [OrderItem]?

  func references = orders*.referenceNumber
 
  back func deliveryInstantLedgers(journal: Journal, date: Date): Future[[Ledger]?] = {
    order.deliveries!.first.ledgers(journal, date)
  }
  back func calcInstant = orders.onlyOne?.isInstant
  
  compute refItems {
    availableFor = List
    value = RefProductItems.create(items*.as[OrderProductItem].map(RefProductQty(product = product, qty = qty)))
  }
}