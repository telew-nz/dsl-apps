inline entity DiscountDeliveryItem extends IOrderDeliveryItem {
  field sales: SalesDiscountItem? inline by deliveryItem {
    default = if (let d = delivery?.as[ISalesDelivery]) {
      SalesDiscountItem(deliveryItem = this, order = d.salesOrders.first)
    }
    isValid = validateSales
  }
  field purchase: PurchaseDiscountItem? inline by deliveryItem {
    default = if (let d = delivery?.as[IPurchaseDelivery]) {
      PurchaseDiscountItem(deliveryItem = this, order = d.purchaseOrders.first)
    }
    isValid = validatePurchase
  }
  
  view form = grid(labels = None, width = 1.2, margin = TopBottom) {
    label("Discount")
  }
  func clearSales: Void = sales = null
  func clearPurchase: Void = purchase = null
  
 
}

inline entity SalesDiscountItem extends ISalesItemWithDelivery {
  singular = "Discount"
  field deliveryItem: DiscountDeliveryItem inline by sales
  func orderDeliveryItem: IOrderDeliveryItem? = deliveryItem
  
  view form = grid(width = 1.2, margin = Bottom) {
    row {
      label("Discount", width = 0.75)
      read {space(width = 0.2)}
      edit {gstEditor >> field(width = 0.2)}
      discountEditor >> field(width = 0.25)
    }
    deliveryItem.delivery >> field(visible = this.order.deliveries.count > 1)
    invoice
  }
  view rowView = group {
    row{label("Discount", span = 3, align = Right) discountEditor}
  }
}

inline entity PurchaseDiscountItem extends IPurchaseItemWithDelivery {
  singular = "Discount"
  func orderDeliveryItem: IOrderDeliveryItem? = deliveryItem
  field deliveryItem: DiscountDeliveryItem inline by purchase
  
  view form = grid(width = 1.2, margin = Bottom) {
    row {
      label("Discount", width = 0.75)
      read {space(width = 0.2)}
      edit {gstEditor >> field(width = 0.2)}
      discountEditor >> field(width = 0.25)
    }
    deliveryItem.delivery >> field(visible = this.order.deliveries.count > 1)
    invoice
  }  
  view rowView = group {
    row{label("Discount", span = 3, align = Right) discountEditor}
  }
}