class DownloadCustomersJob extends SystemJob {
  impl field service: ShopifyIntegration
  
  impl func do = {
    nextPage(1)
  }
  
  back func nextPage(pageNum: UInt): Future[Any] = {
    let r <- service.https("customers.json?page=$pageNum").get
    let customers = r.body!.parseJson[ShopifyCustomers].customers
    
    customers*.make(service)
    
    if(!customers.isEmpty) nextPage(pageNum + 1)
  }
}


back class ShopifyCustomer extends ECustomer[Int]{
  extFieldNaming = Underscore
  
  field id: Int?
  field firstName: String?
  field lastName: String?
  field email: Email?
  field phone: Phone?
  field addresses: [ShopifyAddress]?
  
  impl func extId = id
  impl func personFullName = "$firstName $lastName"
  impl func emails = email.map([_])
  impl func phones = phone.map([_])
  impl func billingAddresses = addresses
  impl func deliveryAddresses = addresses
}

back class ShopifyCustomers {
  extFieldNaming = Underscore

  field customers: [ShopifyCustomer]?
}