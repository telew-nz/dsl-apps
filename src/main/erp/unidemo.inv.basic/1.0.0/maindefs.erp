trait ExtendibleGood extends IBasicProduct {
  func isTangible: Bool = true
  field title: String    
  field description: Text?
  ref field unit: ProductUnit
  field altUnits: [ProductAltUnit]? {title = "Alternative Units"}
  
  view form = nav{grid {
    title 
    //categories
    description  
    unit
    altUnits >> list{x{unit, k}}
    pricesView >> field(label = "Prices")
    accessories >> list{x{accessory}}
    principals >> list{x{product}}
    
    stocksView >> field(label = "Stocks")
    movementsButton
  }}
  func subProducts = [this]
  
  object view list = Good.all >> nav{list{grid(labels = None) {
    row{title >> field(width = 0.8) salesPrice >> field(width = 0.2)}
    stock.shortView
  }}}
}


entity Bike extends IBasicProduct {
  func isTangible: Bool = true
  field title: String
  field colour: BikeColour
  field frameSize: BikeFrameSize
  field description: Text?
  ref field unit: ProductUnit
  field altUnits: [ProductAltUnit]? {title = "Alternative Units"}
  
  view form = nav{grid {
    title 
    categories
    description  
    unit
    altUnits >> list{x{unit, k}}
    pricesView >> field(label = "Prices")
    accessories >> list{x{accessory}}
    principals >> list{x{product}}
    colour
    frameSize
    stocksView >> field(label = "Stocks")
    movementsButton
  }}
  func subProducts = [this]
  
  object view list = Bike.all >> nav{list{grid(labels = None) {
    row{title >> field(width = 0.8) salesPrice >> field(width = 0.2)}
    stock.shortView
  }}}
    
}
extend access UserRole {
  menu Bikes {
    entity Bike
  }
}

enum BikeColour {
  case White
  case Black
  case Red
  case blue
  case silver
  case gold
}

enum BikeFrameSize {
  case Child
  case Small
  case Medium
  case Large
}
