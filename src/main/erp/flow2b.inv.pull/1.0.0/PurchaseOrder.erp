extend entity PurchaseOrder {  
  field dropShip: Bool {
    visible = salesOrders.nonEmpty
    views = [header]
    update = {
      let so = salesOrders.first!.salesOrder
      shipToLocation = if (new) so.shipToLocation else so.source
      shipToAnotherActor = if (dropShip) Option.some(so.shipTo) else Option.none[LegalActor]
    }
  }
  field salesOrders: [SalesPurchaseOrder]? inline by purchaseOrder
  
  func addMissingItems = {
    let filteredItems = items.filter((try? product).nonEmpty)
    let existingItems = filteredItems.groupBy(product).agg(qty.sum)
    salesOrders*.items.filter(try? product).groupBy(product).agg(qty.sum).toSeq.foreach {
      let existingQty: Dec[2]? = existingItems.apply(product)
      if (qty > existingQty) {
        if (existingQty == 0) items = items + PurchaseOrderItem(product = product, qty = qty)
        else {
          let i = filteredItems.find(product == product)!
          i.qty = i.qty + qty - existingQty
        }
      }
    }
    items =? items.filter((try? product).nonEmpty)
  }
}