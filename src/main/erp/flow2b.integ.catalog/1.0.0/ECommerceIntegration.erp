extend trait ECommerceIntegration {
  field catalogs: [ICatalogIntegration]? by integs {views = [] label = "Product Catalog Integrations"}
  
  back event productsUploaded(change: BatchChange[ProductUpdate[ICustomerSuperProduct]]): Future[Any] = {
    if (let c = change.all*.as[ProductUpdate[ICustomerProduct]].filter(_.product.is[ICustomerProduct])) {
      catalogs.foreach {
        updateProducts(this, c)
      }
    }
  }
  
  back event variationsUploaded(change: BatchChange[ProductUpdate[ICustomerComplexProduct]]): Future[Any] = {
    if (let c = change.all*.as[ProductUpdate[ICustomerProduct]]) {
      catalogs.foreach {
        updateProducts(this, c)
      }
    }
  }
}