extend entity POIInvoice {
  ref compute office: Office? = agent?.office
  
  field location: Location? {views = []}
  field jobNumber: String? {views = []}
  field stageNumber: String? {views = []}
  field variationNumber: String? {views = []}
  
  extend override func invoiceAgent = agent
  
  extend override func tsmFields = tsmFieldsBase + [
    term("locationCode", s(location?.code))
    term("jobNumber", s(jobNumber))
    term("stageNumber", s(stageNumber))
    term("variationNumber", s(variationNumber))
  ]
  
  extend override view form = nav{grid{
    issuesView
    x { poi >> field(stretch = 1) number >> field(fontStyle = Label)}
    stateView
    row {
      invoiceNumber invoiceDate dueDate
    }
    row {
      y (label = "Vendor") {
        vendorNumber >> field(fontStyle = Label)
        vendor
      } rowsWithGst poNumber
    }
    row {agent location office}
    row {jobNumber stageNumber variationNumber}
    row {
      totalNoGst gst totalWithGst 
    }
    items >> table {
      y (label = "Description", width = 0.6, margin = None) {
        code >> field(fontStyle = Label) 
        desc
      }
      qty >> field(width = 0.1) 
      gstRateEditor >> field(width = 0.1, label = "GST") 
      amount >> field(width = 0.2) 
      location >> field(label = "Location" width = 0.2)
      jobNumber >> field(width = 0.2, label = "Job")
      stageNumber >> field(width = 0.2, label = "Stage")
      variationNumber >> field(width = 0.2, label = "Variation")
    }    
  }}
  
  extend view traitItem = agent
  extend view traitItem = office
}

extend entity POIInvoiceItem {
  field _location: Location? 
  compute location: Location? = _location.or(invoice.location)
  field _jobNumber: String? 
  compute jobNumber: String? = _jobNumber.or(invoice.jobNumber)
  field _stageNumber: String?
  compute stageNumber: String? = _stageNumber.or(invoice.stageNumber)
  field _variationNumber: String? 
  compute variationNumber: String? = _variationNumber.or(invoice.variationNumber)
  extend override func tsmFields = tsmFieldsBase + [
    term("locationCode", s(location?.code))
    term("jobNumber", s(jobNumber))
    term("stageNumber", s(stageNumber))
    term("variationNumber", s(variationNumber))
  ]
} 
