entity Task extends Todo {
  func done: Bool = status == Done
  list field subjects: [HasTasks]? by tasks
  ref field status: TaskStatus = Entered
  field title: String
  ref field owner: Person? = current
  field description: Text?
    
  func active = status.active
  object view list = Task.all >> nav{list{grid(labels = None){
    subjects
    x{status >> field(editMode = AlwaysEdit, label = "") title owner}
  }}}
  view form = nav{grid {
    title
    status >> field(editMode = AlwaysEdit, compact = true) 
    owner
    subjects
    description
  }}
  view ref = x(margin = Around){owner status >> field(editMode = AlwaysEdit, compact = true) title}
  func onSave = {
    owner?.join(this)
  }
}

trait HasTasks {
  field tasks: [Task]? read by subjects
}


enum TaskStatus(active: Bool) {
  case Entered(active = true) {
    background = "#ed9"
  }
  case InProgress(active = true) {
    background = "#8bf"
  }
  case Done(active = false) {
    color = "white"
    background = "#090"
  }
  case Canceled(active = false) {
    background = "#999"
  }
}