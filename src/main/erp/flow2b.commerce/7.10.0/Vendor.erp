enum GstRate(rate: UPercent[2]??) {
  case Exempt(rate = null) {background = "#999"}
  case Special(rate = null)
}

enum GstStatus {
  case Registered
  case NotRegistered
}

trait IVendor extends PseudoEntity {
  func legalEntity: LegalEntity
  func getCurrency: Currency
  ref field pricesIncludingGst: Bool {
    default = true
    label = "Display prices including GST"
  }
  ref field gstStatus: GstStatus = (try? (if (legalEntity.is[Company]) GstStatus.Registered else GstStatus.NotRegistered)).alt(GstStatus.NotRegistered)
  func hasGst: Bool = gstStatus == Registered
  func defaultGstRate: GstRate = Exempt
  view vendorView = grid(labels = Top) {
    gstStatus
    pricesIncludingGst
  }
  func isTheir: Bool
}

extend trait OurLegalEntity extends IVendor {
  impl func isTheir: Bool = false
}
entity Vendor extends IVendor {
  func defaultSupplier: Vendor? = null
  func defaultPayee: Vendor? = null
  impl compute title {
    value = legalEntity.title
    update = {
      legalEntity.title = new
    }
  }
  impl func getCurrency: Currency = legalEntity.getCurrency
  impl ref field legalEntity: LegalEntity inline by vendor {deleteCascade = false}
  impl func mainEntity = legalEntity
  impl view form = grid(labels = Top) {
    extension("top")
    vendorView
    extension
  }
  impl func isTheir = legalEntity.isTheir
  report Report {
    impl view list = Vendor.all >> nav {list{grid(labels = None) {
      legalEntity.title
    }}}
  }
}
extend trait LegalEntity {
  func iVendor: IVendor? = our?.as[IVendor].or(vendor)
  func makeIVendor: IVendor = {
    iVendor.alt(Vendor(legalEntity = this, gstStatus = NotRegistered))
  }
  func makeVendor: Vendor = {
    if (let o = our) throw "Cannot make vendor for our company"
    iVendor?.as[Vendor].alt(Vendor(legalEntity = this, gstStatus = NotRegistered))
  }
  field vendor: Vendor? inline by legalEntity 
  compute isVendor: Bool {
    label = "Vendor"
    value = vendor
    update = {
      if (new) vendor = Vendor() else vendor = null
    }
  }
}
extend entity Company {
  extend view form = extend("tabs") {
    grid(labels = Top, label = "Vendor", visible = !our && (vendor || ui.edit)) {
      isVendor
      vendor!.form
    }
  }
}

extend entity Person {
  extend view form = extend("tabs") {
    grid(labels = Top, label = "Vendor", visible = !our && (vendor || ui.edit)) {
      isVendor
      vendor!.form
    }
  }
}

extend entity OurCompany {
  extend view form = vendorView
}

extend entity OurPerson {
  extend view form = vendorView
}