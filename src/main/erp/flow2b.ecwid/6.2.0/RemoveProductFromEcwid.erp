class RemoveProductFromEcwid extends SystemJob {
  field service: IEcwidIntegration
  field product: IEcwidProduct
  
  compute variations: [IEcwidProductVariation]? = product.ecwidVariations
  
  class DeleteResponse {
    field deleteCount: Int
  }
  
  func do = {
    let _ <- variations.map(
      RemoveProductVariationFromEcwid(
        service   = this.service,
        variation = _
      )
    )*.do.allCompleted()
    
    if(let productId = product.ecwidIds.find(eId => eId.service == this.service)?.ecwidId) {
      let response <- service.https("products/$productId").delete
      if(let resBody = response.body) {
        if((resBody.parseJson[DeleteResponse].deleteCount > 0) &&
           (!product.deleted)) {
          product.ecwidIds = product.ecwidIds.filter(p => p.service != this.service)
          product.save
        }
      }
    }
  }
}
