back object Conversion extends IConversion {
  func do(version: [Int?]?) = {
    if (version < [7,0,0]) {
      renameEntity(ExtId, "flow2b.ecwid.EcwidId")
      renameEntity(ExtId, "flow2b.ecwid.EcwidCombinationId")
      renameEntity(ExtId, "flow2b.ecwid.EcwidCategoryId")
      renameEntity(ExtId, "flow2b.ecwid.EcwidOrderId")
      renameEntity(ExtId, "flow2b.ecwid.EcwidCustomer")
      
      renameField(ExtId, item, "product")
      renameField(ExtId, item, "productVariation")
      renameField(ExtId, item, "category")
      renameField(ExtId, item, "order")
      renameField(ExtId, item, "person")
      
      renameField(ExtId, source, "service")
      
      renameField(ExtId, extId, "ecwidId")
      renameField(ExtId, extId, "combinationId")
      renameField(ExtId, extId, "categoryId")
      renameField(ExtId, extId, "ecwidOrderId")
      renameField(ExtId, extId, "customerId")
      
      fixBackRefs(ExtId, item)
      fixBackRefs(ExtId, source)
      
      ExtId.all.filter(source.is[IEcwidIntegration] && !extId.as[Int])*.delete
      ExtId.all.filter(source.is[IEcwidIntegration]).update(hasId = true)
    }
  } 
} 

