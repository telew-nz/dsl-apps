generator basicProduct {
  field intangible: Bool
  compute tangible = !intangible
  
  field kit: Bool
  field skuPrefix: String
  field noAltUnits: Bool
  
  func superClass: Dsl = if (kit) "IBasicSubProduct with IKit" else "IBasicProduct"
   
///////////////////////////////////////  
  impl func generate: Dsl = '
entity $name extends $superClass $(if (!noAltUnits) "with IAltUnits") {
  impl func isTangible = $tangible
  impl func skuPrefix: String = "$skuPrefix"
  
  $(if (!decl("trackItems")) 'impl ref field trackItems: TrackItems? {label = "Track Serial Numbers"}')
  $(if (!decl("title")) "impl field title: String")
  $(if (!decl("description")) "impl field description: Text?")
  $(if (!decl("status")) "impl field status: ProductStatus = ForSale")
  
  $decls
  
  $(decls*.as[Field].filter(f => f.name != "title").map{f => 
    let v: Dsl = if (f.tp.isOpt) "$(f.name).toSeq" else "[$(f.name)]"
    "  impl func attr$(f.name.capitalize) = $v"
  }.join("\n"))
  
  impl view mainView = grid (labels = Top, label = "Main") {
    photos >> field(height = 10, label = "")
    statusView
    title >> field(label = "", fontStyle = H2)
    row {sku refNum trackItems}
    customView
    $(if (kit) "items >> table {product >> field (width = 0.7) qty >> field(width = 0.3)}")
    baseMainView
    extension
    description
  }
}
'
}