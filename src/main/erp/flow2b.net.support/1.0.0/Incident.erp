enum IncidentStatus(active: Bool) {
  case Draft(active = false) {
    background = "#999"
  }
  case Entered(active = true) {
    background = "#ed9"
  }
  case InProgress(active = true) {
    background = "#8bf"
  }
  case Responded(active = true) {
    background = "#dea"
  }
  case Closed(active = false) {
    color = "white"
    background = "#090"
  }
}
enum IncidentType {
  case Incident {
    background = "#ed9"
  }
} 

entity Incident {
  field status: IncidentStatus {
    default = Entered
    width = 0.2
  }
  field title: String {width = 0.6}
  field owner: Actor? {width = 0.2}
  field product: DevProduct? {width = 0.2}
  field company: Company? {width = 0.2}
  field person: Person? {
    default = Person.current!
    width = 0.2
  }
  func active = status.active
  field description: Text
    
  view traitItem = grid (width = 1.5) {
    title >> field(label = "")
    row {
      IncidentType.Incident
      company
      status 
      owner
      product
      space()
      space()
    }
  }
  func isTheir = hasObserver(User.current)
}

report ActiveIncident {
  view list = Incident.all.filter(status.active) >> nav {
    table {
      status, title, owner, product, company, person
    }
  }
}