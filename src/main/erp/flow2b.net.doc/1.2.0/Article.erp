entity Article extends NewEngine {
  ref field parentArticle: Article?
  ref field number: Int
  func fullNumberWithSuffix: String? = if (parentArticle.isEmpty) "" else parentArticle!.fullNumberWithSuffix + number + "."
  func fullNumber: String? = if (parentArticle.isEmpty) "" else parentArticle!.fullNumberWithSuffix + number
  impl field title: String
  field content: Text?
  ref field subarticles: [Article]? read by parentArticle
 
  impl view form = nav { grid (labels = Top) {
    button("One Page View") {onePage.open}
    parentArticle
    x {
        number >> field(width = 0.075, placeholder = "N") 
        title >> field(width = 0.925, placeholder = "Title", stretch = 1)
    }
    content
    subarticles.sortBy(number) >> list(editMode = AlwaysRead, label = "", frame = false) { 
      struct
    }
    button("Add Subarticle") {
      Article(parentArticle = _).form.open
    }
  }}
  view struct = y(editMode = AlwaysRead) {
	x{fullNumber, _}
    subarticles.sortBy(number) >> list(frame = false) {
      struct
    }
  }
  object impl view list = Article.all.filter(parentArticle.isEmpty) >> nav { list {
    title
  }}
  
  view onePage = nav { onePageStruct }
  view onePageStruct = grid(labels = None, editMode = AlwaysRead) {
    x(fontStyle = H2) {
        fullNumber, title, button("=>") {form.open}
    }
    content
    subarticles.sortBy(number) >> list(editMode = AlwaysRead, frame = false) {
      onePageStruct
    }
  }
}

extend role Public {
  entity Article = readOnly
}