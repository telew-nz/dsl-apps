object ITAccountingErrors extends IssueType[TaxReturn] {
  impl func title = "Accounting Errors"
  impl func hasIssue(item: TaxReturn) = item.hasErrors
  impl func fixes(item: TaxReturn) = [
    Fix(text = "Fix all accounting issue in $(item.period)")
  ]
}

trait TaxReturn extends Entity with Journal with IActiveItem {
  field date: Date {
    default = now
    label = "Return date"
  }
  func period: Period
  func hasErrors: Bool
  impl func journalDate = date
  impl func itemRoles = [Accountant]
  override func issueTypes = super.issueTypes + ITAccountingErrors
  ref field state: ActiveState {
    default = InProgress
    update = {
      if (new == Closed) {
        date = now
      }
    }
  }
  
  impl compute activeState = state
}

