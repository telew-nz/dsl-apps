report TrialBalance {
  plural = "Trial Balance"
  field legalEntity: LegalEntity? = (LegalEntity.ours.onlyOne) {from = LegalEntity.ours}
  field date: Date?
  field accountTypes: [LedgeAccountType]?
  field currency: Currency?
    
  view list = GeneralLedger.at(date)
    .filter(
      legalEntity ==? this.legalEntity &&
      (!this.accountTypes || this.accountTypes.contains(account.type)) &&
      currency ==? this.currency
    )
    .sortBy(account.number) >> 
  nav {
    table(action = Reflection.object[AnalitTrialBalance]("TB$(account)")
          .new(legalEntity = legalEntity, date = this.date, currency = currency)
          .list.open) {
       account debitBalance, creditBalance
    }
  }
}

report CollapsedTrialBalance {
  plural = "Trial Balance"
  field legalEntity: LegalEntity? = (LegalEntity.ours.onlyOne) {from = LegalEntity.ours}
  field date: Date?
  field currency: Currency?
    
  view list = GeneralLedger.at(date)
    .filter(legalEntity ==? this.legalEntity && currency ==? this.currency)
    .groupBy(type = account.type, currency)
    .agg(balance = debitBalance.sum - creditBalance.sum)
    .sortBy(type) >> 
  nav {
    table (action = TrialBalance(date = date, accountTypes = [type], currency = currency, legalEntity = legalEntity).list.open) {
       type >> field (width = 0.25)  
       (if (balance > 0) balance else 0) >> field(label = "Debit")
       (if (balance < 0) -balance else 0) >> field(label = "Credit")
    }
  }
}