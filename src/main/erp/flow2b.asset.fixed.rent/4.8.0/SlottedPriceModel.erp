entity SlottedPriceModel extends ISlottedPriceModel with TRentPriceModel {
  field title: String
  ref field date: Date[day] = now
  func currency: Currency = vendor.getCurrency
  field durations: [DurationSlot]
  field period: Period = Period(start = Date.now.start(of = day), end = Date.now.start(of = day) + 1_day) {
    label = "Sample Period"
  }
  field slots: [RentSlot] {validate = validateSlots}
  field pricesIncludingGst: Bool = vendor.pricesIncludingGst
  field products: [SlottedProductPrice]? inline by model {
    available(All)
  }
  func superProductPrice(superProduct: ISuperProduct): IPrice? = {
    products.find(product == superProduct)
  }
  func createProduct(product: AssetRentService, prices: [DurationPrice]?, bond: Money[currency]?): SlottedProductPrice = {
    SlottedProductPrice(model = this, product = product, prices = prices, bond = bond)
  }
  
  view form = nav{grid{
    title
    row {
      date
      vendor
      pricesIncludingGst
    }
    durations
    period
    slots
    products >> list(mode = EditSelect){formEx}
  }}
}

inline entity SlottedProductPrice extends TRentProductPrice with ISlottedProductPrice {
  system field model: SlottedPriceModel by products
}
