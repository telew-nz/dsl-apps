extend trait IPriceModel {
  back func rentAvPeriods(from: Date, item: RentAvCalcItem): [RentAvPeriodItem]? = {
    if (let pers = rentPeriods(from, item.store.getSchedule, item.retStore.getSchedule, item.dur)) {
      if (let avPers = item.product.avPeriods(item, item.priorityDate, item.exclRegs, item.qty)) {
        pers.first(300).filter{p => 
          avPers.exists(a => a.includes(p))
        }.map(RentAvPeriodItem(period = _))
      }
    }
  }
}

class RentAvPeriodItem(period: Period, items: [ProductItem]?) {
  impl func toString = period.toString + (" " +? items.join(", "))
}
class RentAvCalcItem extends IProdRegSel {
  field priorityDate: Date
  field le: OurLegalEntity
  field store: IStore
  field retStore: IStore
  field product: ISubProduct
  field dur: UQty
  field qty: UQty
  field exclRegs: [Id?]?
  impl func apply(r: ProdReg): Bool = {
    r.legalEntity == le && r.store == store && r.product == product && r.stockType == product.rentStockType
  }

}