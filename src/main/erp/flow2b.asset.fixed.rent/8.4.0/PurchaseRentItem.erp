inline entity PurchaseRentItem extends IPurchaseItemWithDelivery with IRentItem {
  icon = "retweet"
  singular = "Book/Rent"
  
  impl field deliveryItem: RentDeliveryItem inline by purchase
  
  impl view form = grid(margin = None, width = 1.2, labels = Top) {
    row {
      deliveryItem.product >> field(width = 0.4, label = "") 
      deliveryItem.qty >> field(width = 0.2, align = Right) 
      deliveryItem.dur >> field(width = 0.2, align = Right) 
      priceEditor >> field(width = 0.2, align = Right)
      amountEditor >> field(width = 0.2, align = Right)
    }
    row {
      itemDesc >> field(noLabel, width = 0.8, visible = ui.isSelected || deliveryItem.isUnav) 
      gstEditor  >> field(visible = ui.isSelected && order.legalEntity.hasGst, width = 0.2) 
      discountEditor >> field(visible = ui.isSelected || discount, width = 0.2, align = Right)
    }
    row {
      space(1.0)
      total >> field(visible = ui.isSelected && discount, width = 0.2, align = Right)
    }
    deliveryItem.delivery >> field(visible = ui.isSelected && this.order.deliveries.count > 1)
    accessories >> list {
      x {_ add("Add") {
        let item = PurchaseItem(
          order = order, 
          deliveryItem = DeliveryItem(product = _, delivery = deliveryItem.delivery, qty = deliveryItem.qty.as[UQty[_.unit]]) 
        )
        item.deliveryItem.updateAmount()
      }}
    }
    deliveryItem.snView >> field(editMode = Original, visible = ui.isSelected && product.trackItems, label = "Serial Numbers")
    x(visible = ui.isSelected && ui.edit) {
      button("Dekit", visible = product.is[IKit]) {
        dekit()
      }
    }
  }
   
  impl func expenseLedgers(journal: Journal, date: Date, baseAmount: UMoney?): [Ledger]?  = {
    let d = delivery
    if (!d.is[PurchaseDelivery]) {
      [LProduct(account = CostOfGoodsSold, journal = journal, date = date, 
                product = product, qty = qty, trAmount = baseAmount)]
    } else {
      let et = product.expenseType
      [LExpenses(journal = journal, date = date, expenseType = et, 
                 product = product, qty = qty, trAmount = baseAmount)]
    }
  }
    
  
}
