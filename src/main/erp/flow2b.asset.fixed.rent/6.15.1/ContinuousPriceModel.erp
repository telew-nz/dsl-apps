entity ContinuousPriceModel extends IContinuousPriceModel with TRentPriceModel {
  impl field title: String
  ref field date: Date[day] = now
  override func currency: Currency = vendor.getCurrency
  impl field durations: [RentDuration]
  field overnightUnit: DurUnit = default
  impl field overnightCharge: UQty[overnightUnit]? {
    label = "Night Charge"
    canEditUnit
  }
  impl field pricesIncludingGst: Bool = (try? vendor.pricesIncludingGst).alt(true)
  impl field products: [ContinuousProductPrice]? inline by model {
    available(All)
  }
  impl func createProduct(product: IBaseProduct, prices: [DurPrice]?, bond: UMoney[currency]?): ContinuousProductPrice = {
    ContinuousProductPrice(model = this, product = product, prices = prices, bond = bond)
  }
  impl func price(product: IBaseProduct): IPrice? = {
    products.find(p => p.product == product)
  }
  
  func addProduct(product: IBaseProduct): ContinuousProductPrice = {
    ContinuousProductPrice(model = this, product = product)
  }
  
  impl view form = nav{grid{
    title
    row {
      date
      vendor
      pricesIncludingGst
    }
    overnightCharge
    durations 
    products >> list(mode = EditSelect){formEx}
  }}
}

inline entity ContinuousProductPrice extends TRentProductPrice with IContinuousProductPrice {
  impl system field model: ContinuousPriceModel by products
}
