trait AssetReturn extends IDeliveryPath with Journal {
  field manualNumber: String?
  func number: String
  func order: Order = orders.first
  func orders: [Order]
  field allItems: [RentDeliveryItem]? inline by assetReturn {deleteCascade = false}
  compute items: [RentDeliveryItem]? {
    value = allItems.filter(active)
    update = {
      allItems = new + allItems.filter(!active)
    }
  }
  func journalDate = deliveryDate
  func calcDeliveryDate: Date = {
    items.map{
      order.legalEntity.priceModel(product).alt(EmptyPriceModel)
         .rentReturnDate(delivery!.toRentDeliveryDesc, this.storeSchedule, duration)
    }.min.alt(Date.now)
  }
  func updateDeliveryDate(): Void = {
    if (status != Delivered) {
      let dd = calcDeliveryDate
      if (status == Planned) silentUpdate(dispatchDate, dd)
      silentUpdate(deliveryDate, dd)
    }
  }
  func canCancel = false
  
  func updatedDeliveryDate(): Future[Void] = {
    items*.updateDuration().allCompleted
  }
}

