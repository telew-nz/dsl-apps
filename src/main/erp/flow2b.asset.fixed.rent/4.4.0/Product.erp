extend trait ISubProduct {
  field rentService: AssetRentService? inline by product {
    views = []
  }
  compute canBeRented: Bool {
    value = rentService
    update = {
      if (new) rentService = AssetRentService(product = this)
      else rentService = null
    }
    views = []
  }
}

extend entity Good {
  extend view assetsStartup = grid(labels = Top, width = 1.2, label = "") {
    canBeRented 
    rentService!.categories >> field(visible = canBeRented, label = "Rent Categories", singular = "Rent Category")
  }
  
  extend view form = extend("assetsTop") {
    canBeRented >> field(visible = !rentService)
    rentService >> field(title = title)
  }
}

extend enum ProductUnit {
  case Minute(symbol = "minute", scale = 0, base = null, k = 1)
  case Hour(symbol = "hour", scale = 2, base = ProductUnit.Minute, k = 60)
  case Day(symbol = "day", scale = 2, base = ProductUnit.Hour, k = 24)
}
