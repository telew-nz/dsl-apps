trait DestinationLocation extends Location 
  
entity SalesLocation extends DestinationLocation {
  field assignments: [SalesLocationAssignment]? inline by location
  field salesPrices: [ProductSalesPrice]? inline by location
  func salesContractor(date: DateTime): Person? = assignments.find(start <= date && date <= end)?.salesContractor
}

inline entity SalesLocationAssignment {
  field location: SalesLocation by assignments
  field salesContractor: Person by assignments from Person.all.filter(isSalesContractor)
  field start: DateTime
  field end: DateTime
}

extend entity Person {
  field assignments: [SalesLocationAssignment]? inline by salesContractor {visible = isSalesContractor}
  func location(date: DateTime): SalesLocation? = {
    assignments.find((start <= date) && (date <= end))?.location
  }
  field storages: [SellersStorageLocation]? inline by salesContractor {visible = isSalesContractor}
}
  
entity SellersStorageLocation extends DestinationLocation {
  field salesContractor: Person by storages from Person.all.filter(isSalesContractor || isManager)
}
