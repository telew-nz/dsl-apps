class BankData {
  field bankId: String? 
  field type: String? {views = []}
  field memo: String?
  field thierName: String? {label = "Counterparty Name"}
  field thierAccount: String? {label = "Counterparty Account Number"}
  field cardNumber: String? {label = "Masked Card Number"}
  field bankComment: String?
  field balance: Money??
  system field uploadState: BankUploadState = NotUploaded
  system field date: Date?
  
  func uploaded: Bool = uploadState == Uploaded
  func fullMemo: String? = memo
  
  func initMethod(pm: PMBankAccount): PMBankAccount = {
    if (thierAccount.length > 3) {
      pm.number = thierAccount!
    }
    pm
  }
  back func forcePaymentMethod(le: LegalEntity, currency: Currency): PMBankAccount? = if (thierAccount.length > 3) {
    le.addBankAccount(thierAccount!, currency) 
  }
  back func addTo(le: LegalEntity): Void = {
    if (let nm = thierName.trim where nm.length >= 3 && !LegalEntity.all.exists(_.isName(nm)).result.get) {
      le.addName(nm)
    }
  }
  impl view form = grid (labels = Top  frame) {
    bankId
    memo
    thierName
    thierAccount
    cardNumber
    bankComment
    balance
  }
}


enum BankUploadState {
  case NotUploaded {background = "#ed9"}
  case Uploaded {color = "white" background = "#090"}
  case Missing {background = "#f99" label = "Missing in Bank Statement"}
}