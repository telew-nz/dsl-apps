entity LaybuyAccount extends SFinAccount with HasLowBalance {
  impl func title = "$legalEntity: Laybuy $currency"  
  impl ref field numbers: [String]?
  impl func ledgerAccount: LedgerAccount = Cash
  impl func hasBankData = true
  impl view form = nav{grid{
    issuesView
    legalEntity
    numbers
    currency
    initBalance
    balance
  } ledgerBtn }
}

object ReconLaybuyTransfer extends IReconRule {
  impl func title = "Transfer from Laybuy"
  impl func pr = 30
  impl func backDescr = "If the bank reference contains LAYBUY HOLDINGS, it will be reconciled as Laybuy transfer"
  impl func apply(movements: [CashMovement]?, payment: Payment): CashMovement? = {
    if (payment.is[IncomingPayment] && payment.bankData.fullMemo.flex.contains("LAYBUY HOLDINGS") 
        let contraAccount = LaybuyAccount.all.result.get.onlyOne
    ) {
       ReconTransfer.make(movements, payment, contraAccount)
    }
  }
}